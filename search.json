[{"path":[]},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement thomas.ashhurst@sydney.edu.au. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"http://immunedynamics.io/spectre/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"http://immunedynamics.io/spectre/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 ImmuneDynamics Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"spectre-basics-guide","dir":"Articles","previous_headings":"","what":"Spectre basics guide","title":"Spectre basics guide","text":"provide brief high-level introduction using R, RStudio, Spectre. Additional educational material using R R Studio available many sites, including RStudio education site R Spatial page.","code":""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"r-basics","dir":"Articles","previous_headings":"Spectre basics guide","what":"R basics","title":"Spectre basics guide","text":"interact R programming language, recommend using RStudio.","code":""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"open-rstudio","dir":"Articles","previous_headings":"Spectre basics guide > R basics","what":"Open RStudio","title":"Spectre basics guide","text":"Open RStudio, see something similar following: Top left = R script. text editor lines segments code can ‘run’, send commands R. Bottom left = console. commands sent R, console show progress/output/result. Code can also entered run directly console. Top right = workspace. Whenever create object R (saving set data) show . Bottom right = various. mainly used displaying plots (‘Plots’), investigating packages (‘Packages’), using help section (‘Help’).","code":""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"r-code-basics","dir":"Articles","previous_headings":"Spectre basics guide > R basics","what":"R code basics","title":"Spectre basics guide","text":"two important types text commonly found R scripts: Comments line R code starts # considered comment. executed RStudio R code, rather used notes user. comment: Executable code line segment code can run return form result. example , getwd() function return location current working directory. code: code run, output may look something like :","code":"## Run the following line to find your current working directory getwd() [1] \"/Users/Tom/Desktop\""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"create-and-save-and-r-script","dir":"Articles","previous_headings":"Spectre basics guide > R basics","what":"Create and save and R script","title":"Spectre basics guide","text":"get started, create new .R file save Make folder desktop called “Spectre demo” RStudio, create new R Script file (.R) called “MyScript” save folder just created (Spectre demo).","code":""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"practice-running-code","dir":"Articles","previous_headings":"Spectre basics guide > R basics","what":"Practice running code","title":"Spectre basics guide","text":"demo use ‘iris’ dataset, consists measurements 150 flowers. row represents one flower, column represents different measurement flower. run code RStudio, can either enter code script selectively run elements code (preferred), can enter directly console run code. code-blocks , copy code new script, press save, highlight press CMD/CTRL return execute code","code":""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"read-the-dataset","dir":"Articles","previous_headings":"Spectre basics guide > R basics","what":"Read the dataset","title":"Spectre basics guide","text":"Copy following script, save, highlight code press CMD/CTRL return. first command run load ‘iris’ dataset save object ‘dat’. lines starting ‘#’ comments, excute commands (even select press CMD + return). executing, see new object workspace (top right). called ‘dat’, containing 150 observations, 5 variables. Next review dimensions ‘dat’ (many rows columns) preview data first 6 rows dat. Copy following script, save, highlight code press CMD/CTRL return. now see following console. Lines starting ‘>’ denote commands executed. Lines without ‘>’ output. can see request show dimensions dataset using dim(dat) given us 150 rows 5 columns. Copy following script, save, highlight code press CMD/CTRL return. now see following console. Lines starting ‘>’ denote commands executed. Lines without ‘>’ output. request preview first 6 rows data using head(dat) shown us contents first 6 rows.","code":"## Part 1: read the dataset       # Use the 'iris' dataset (150 flowers one per row) with various measurement (each column is a different measurement) dat <- iris dat ##     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species ## 1            5.1         3.5          1.4         0.2     setosa ## 2            4.9         3.0          1.4         0.2     setosa ## 3            4.7         3.2          1.3         0.2     setosa ## 4            4.6         3.1          1.5         0.2     setosa ## 5            5.0         3.6          1.4         0.2     setosa ## 6            5.4         3.9          1.7         0.4     setosa ## 7            4.6         3.4          1.4         0.3     setosa ## 8            5.0         3.4          1.5         0.2     setosa ## 9            4.4         2.9          1.4         0.2     setosa ## 10           4.9         3.1          1.5         0.1     setosa ## 11           5.4         3.7          1.5         0.2     setosa ## 12           4.8         3.4          1.6         0.2     setosa ## 13           4.8         3.0          1.4         0.1     setosa ## 14           4.3         3.0          1.1         0.1     setosa ## 15           5.8         4.0          1.2         0.2     setosa ## 16           5.7         4.4          1.5         0.4     setosa ## 17           5.4         3.9          1.3         0.4     setosa ## 18           5.1         3.5          1.4         0.3     setosa ## 19           5.7         3.8          1.7         0.3     setosa ## 20           5.1         3.8          1.5         0.3     setosa ## 21           5.4         3.4          1.7         0.2     setosa ## 22           5.1         3.7          1.5         0.4     setosa ## 23           4.6         3.6          1.0         0.2     setosa ## 24           5.1         3.3          1.7         0.5     setosa ## 25           4.8         3.4          1.9         0.2     setosa ## 26           5.0         3.0          1.6         0.2     setosa ## 27           5.0         3.4          1.6         0.4     setosa ## 28           5.2         3.5          1.5         0.2     setosa ## 29           5.2         3.4          1.4         0.2     setosa ## 30           4.7         3.2          1.6         0.2     setosa ## 31           4.8         3.1          1.6         0.2     setosa ## 32           5.4         3.4          1.5         0.4     setosa ## 33           5.2         4.1          1.5         0.1     setosa ## 34           5.5         4.2          1.4         0.2     setosa ## 35           4.9         3.1          1.5         0.2     setosa ## 36           5.0         3.2          1.2         0.2     setosa ## 37           5.5         3.5          1.3         0.2     setosa ## 38           4.9         3.6          1.4         0.1     setosa ## 39           4.4         3.0          1.3         0.2     setosa ## 40           5.1         3.4          1.5         0.2     setosa ## 41           5.0         3.5          1.3         0.3     setosa ## 42           4.5         2.3          1.3         0.3     setosa ## 43           4.4         3.2          1.3         0.2     setosa ## 44           5.0         3.5          1.6         0.6     setosa ## 45           5.1         3.8          1.9         0.4     setosa ## 46           4.8         3.0          1.4         0.3     setosa ## 47           5.1         3.8          1.6         0.2     setosa ## 48           4.6         3.2          1.4         0.2     setosa ## 49           5.3         3.7          1.5         0.2     setosa ## 50           5.0         3.3          1.4         0.2     setosa ## 51           7.0         3.2          4.7         1.4 versicolor ## 52           6.4         3.2          4.5         1.5 versicolor ## 53           6.9         3.1          4.9         1.5 versicolor ## 54           5.5         2.3          4.0         1.3 versicolor ## 55           6.5         2.8          4.6         1.5 versicolor ## 56           5.7         2.8          4.5         1.3 versicolor ## 57           6.3         3.3          4.7         1.6 versicolor ## 58           4.9         2.4          3.3         1.0 versicolor ## 59           6.6         2.9          4.6         1.3 versicolor ## 60           5.2         2.7          3.9         1.4 versicolor ## 61           5.0         2.0          3.5         1.0 versicolor ## 62           5.9         3.0          4.2         1.5 versicolor ## 63           6.0         2.2          4.0         1.0 versicolor ## 64           6.1         2.9          4.7         1.4 versicolor ## 65           5.6         2.9          3.6         1.3 versicolor ## 66           6.7         3.1          4.4         1.4 versicolor ## 67           5.6         3.0          4.5         1.5 versicolor ## 68           5.8         2.7          4.1         1.0 versicolor ## 69           6.2         2.2          4.5         1.5 versicolor ## 70           5.6         2.5          3.9         1.1 versicolor ## 71           5.9         3.2          4.8         1.8 versicolor ## 72           6.1         2.8          4.0         1.3 versicolor ## 73           6.3         2.5          4.9         1.5 versicolor ## 74           6.1         2.8          4.7         1.2 versicolor ## 75           6.4         2.9          4.3         1.3 versicolor ## 76           6.6         3.0          4.4         1.4 versicolor ## 77           6.8         2.8          4.8         1.4 versicolor ## 78           6.7         3.0          5.0         1.7 versicolor ## 79           6.0         2.9          4.5         1.5 versicolor ## 80           5.7         2.6          3.5         1.0 versicolor ## 81           5.5         2.4          3.8         1.1 versicolor ## 82           5.5         2.4          3.7         1.0 versicolor ## 83           5.8         2.7          3.9         1.2 versicolor ## 84           6.0         2.7          5.1         1.6 versicolor ## 85           5.4         3.0          4.5         1.5 versicolor ## 86           6.0         3.4          4.5         1.6 versicolor ## 87           6.7         3.1          4.7         1.5 versicolor ## 88           6.3         2.3          4.4         1.3 versicolor ## 89           5.6         3.0          4.1         1.3 versicolor ## 90           5.5         2.5          4.0         1.3 versicolor ## 91           5.5         2.6          4.4         1.2 versicolor ## 92           6.1         3.0          4.6         1.4 versicolor ## 93           5.8         2.6          4.0         1.2 versicolor ## 94           5.0         2.3          3.3         1.0 versicolor ## 95           5.6         2.7          4.2         1.3 versicolor ## 96           5.7         3.0          4.2         1.2 versicolor ## 97           5.7         2.9          4.2         1.3 versicolor ## 98           6.2         2.9          4.3         1.3 versicolor ## 99           5.1         2.5          3.0         1.1 versicolor ## 100          5.7         2.8          4.1         1.3 versicolor ## 101          6.3         3.3          6.0         2.5  virginica ## 102          5.8         2.7          5.1         1.9  virginica ## 103          7.1         3.0          5.9         2.1  virginica ## 104          6.3         2.9          5.6         1.8  virginica ## 105          6.5         3.0          5.8         2.2  virginica ## 106          7.6         3.0          6.6         2.1  virginica ## 107          4.9         2.5          4.5         1.7  virginica ## 108          7.3         2.9          6.3         1.8  virginica ## 109          6.7         2.5          5.8         1.8  virginica ## 110          7.2         3.6          6.1         2.5  virginica ## 111          6.5         3.2          5.1         2.0  virginica ## 112          6.4         2.7          5.3         1.9  virginica ## 113          6.8         3.0          5.5         2.1  virginica ## 114          5.7         2.5          5.0         2.0  virginica ## 115          5.8         2.8          5.1         2.4  virginica ## 116          6.4         3.2          5.3         2.3  virginica ## 117          6.5         3.0          5.5         1.8  virginica ## 118          7.7         3.8          6.7         2.2  virginica ## 119          7.7         2.6          6.9         2.3  virginica ## 120          6.0         2.2          5.0         1.5  virginica ## 121          6.9         3.2          5.7         2.3  virginica ## 122          5.6         2.8          4.9         2.0  virginica ## 123          7.7         2.8          6.7         2.0  virginica ## 124          6.3         2.7          4.9         1.8  virginica ## 125          6.7         3.3          5.7         2.1  virginica ## 126          7.2         3.2          6.0         1.8  virginica ## 127          6.2         2.8          4.8         1.8  virginica ## 128          6.1         3.0          4.9         1.8  virginica ## 129          6.4         2.8          5.6         2.1  virginica ## 130          7.2         3.0          5.8         1.6  virginica ## 131          7.4         2.8          6.1         1.9  virginica ## 132          7.9         3.8          6.4         2.0  virginica ## 133          6.4         2.8          5.6         2.2  virginica ## 134          6.3         2.8          5.1         1.5  virginica ## 135          6.1         2.6          5.6         1.4  virginica ## 136          7.7         3.0          6.1         2.3  virginica ## 137          6.3         3.4          5.6         2.4  virginica ## 138          6.4         3.1          5.5         1.8  virginica ## 139          6.0         3.0          4.8         1.8  virginica ## 140          6.9         3.1          5.4         2.1  virginica ## 141          6.7         3.1          5.6         2.4  virginica ## 142          6.9         3.1          5.1         2.3  virginica ## 143          5.8         2.7          5.1         1.9  virginica ## 144          6.8         3.2          5.9         2.3  virginica ## 145          6.7         3.3          5.7         2.5  virginica ## 146          6.7         3.0          5.2         2.3  virginica ## 147          6.3         2.5          5.0         1.9  virginica ## 148          6.5         3.0          5.2         2.0  virginica ## 149          6.2         3.4          5.4         2.3  virginica ## 150          5.9         3.0          5.1         1.8  virginica # Determine the number of rows and columns in the dataset dim(dat) ## [1] 150   5 # Examine the first few lines of dataset head(dat) ##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1          5.1         3.5          1.4         0.2  setosa ## 2          4.9         3.0          1.4         0.2  setosa ## 3          4.7         3.2          1.3         0.2  setosa ## 4          4.6         3.1          1.5         0.2  setosa ## 5          5.0         3.6          1.4         0.2  setosa ## 6          5.4         3.9          1.7         0.4  setosa"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"plot-the-dataset","dir":"Articles","previous_headings":"Spectre basics guide > R basics","what":"Plot the dataset","title":"Spectre basics guide","text":"Next, plot dataset. Copy following script, save, highlight code press CMD/CTRL return. executing, see following ‘Plots’.   little specific, let’s try plotting one column dataset another. Copy following script, save, highlight code press CMD/CTRL return. Now see plot sepal width vs length.","code":"## Part 2: plot the dataset       # Plot iris dataset (all plots) plot(dat) # Plot iris dataset (chosen X and Y parameters) plot(x = dat$Sepal.Length, y = dat$Sepal.Width)"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"save-the-dataset","dir":"Articles","previous_headings":"Spectre basics guide > R basics","what":"Save the dataset","title":"Spectre basics guide","text":"Now, let’s save dataset .csv file. .csv file kind like .xlsx file, without bells whistles. Data table format saved, using commas indicate separation new columns. read excel RStudio, displays table. Run following lines determine current working directory (read files write files ). Copy following script, save, highlight code press CMD/CTRL return. return location current working directory. case: Let’s aim save CSV desktop. ) change ‘working directory’ desktop (mac, look something like “/Users/Tom/Desktop”). set working directory, telling R ) look files ask , b) create files ask . set working directory, type setwd() script don’t run yet. Finding specific directory (absolute path) mac, start entering “/” (): setwd(“/”) Click / press TAB see list options root directory. can press arrows, use mouse cursor, select options, press ENTER select .  start typing name directory, list options filtered options match typing.  case, select ‘Users’ press ENTER. can repeat process navigate folders  can repeat process find working directory reach desired location.   now select line, highlight code press ENTER, R set working directory: following returned Now can check working directory set correctly running following: everything gone correctly, following (equivalent) returned: Now write dataset .csv file (saved working directory). use function ‘write.csv’. input variables dataset want write (x = dat) want call file (file = “iris_dataset.csv”). Execute following, check folder (set working directory) see new file created.","code":"## Part 3: save the dataset   # Determine the current working directory getwd() [1] \"/Users/thomasa\" setwd() setwd(\"/Users/thomasa/Desktop/\") > setwd(\"/Users/thomasa/Desktop/\") getwd() [1] \"/Users/thomasa/Desktop/\" # Write a .csv file of the dataset write.csv(x = dat, file = \"iris_dataset.csv\")"},{"path":[]},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"setup-tutorial-script-and-dataset","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Setup tutorial script and dataset","title":"Spectre basics guide","text":"interact Spectre package R, use RStudio.","code":""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"load-spectre-package","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Load Spectre package","title":"Spectre basics guide","text":"use Spectre, first need load ‘Spectre’ package, well relevant packages. , follow instructions . Copy code right R script (MyScript.R). Make sure SAVE. Run line (one one) clicking line highlighting text, press CMD + return (Mac) CTRL + Enter (Windows). , nothing returned loaded successfully, error message returned . installed Spectre, package won’t load, can visit installation troubleshooting page. successful: unsuccessful:","code":"## Load the Spectre packages from library           library('Spectre') > > Error in library(\"Spectre\") : there is no package called ‘Spectre’"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"load-other-packages","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Load other packages","title":"Spectre basics guide","text":"Rather load individual package required one--one (library(‘plyr’), library(‘data.table’) etc), created two functions simplify process: packages.check() check required packages installed package.load() load required packages package loaded, see following: far following code script:","code":"## Check if the other required packages are installed Spectre::package.check() ## Load the required packages Spectre::package.load() > Loading required package: PACKAGENAME"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"set-a-working-directory","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Set a working directory","title":"Spectre basics guide","text":"Normally location files like analyse. now, can just desktop similar. aren’t sure search directories, please look basic R tutorial.","code":"## Set working directory        setwd(\"/Users/thomasa/Desktop\")           ## Check that it has been set correctly getwd()   ## Save the working directory as an object called 'Primary Directory' PrimaryDirectory <- getwd()"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"create-an-output-directory","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Create an output directory","title":"Spectre basics guide","text":"Now create directory can save data plots generate shortly.","code":"## Create an output directory               dir.create(\"Spectre-demo-output\")   ## Go to that directory and save it as an object called 'Output Directory'         setwd(\"Spectre-demo-output\")         getwd()             OutputDirectory <- getwd()   ## Finally, set the current working directory to 'PrimaryDirectory'         setwd(PrimaryDirectory)"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"load-data","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Load data","title":"Spectre basics guide","text":"Normally, load CSV FCS files disk, server R analysis. tutorial, skip step, use included demo dataset called ‘demo.start’. dataset 120,000 cells, 12 bone marrow samples: 6x mock-infected mice, 6x West Nile virus (WNV)-infected mice. amounts 10,000 cells per sample. data set structured large data.frame (table) column cellular marker (e.g. FITC-CD4, etc), row cell. Assign included demo.start dataset new object call cell.dat. can review structure cell.dat using str(). can see cell.dat ‘data.table’ ‘data.frame’. can review dimensionality cell.dat using dim(). first entry returned number rows, second number columns. can review first 6 rows (10,000 rows) cell.dat using head(). column marker cellular feature, row cell. Now let’s set preferences. Now can choose number column want use clustering, rather write column name. , can put number columns vector (.e. c(5,6,8) columns 5, 6, 8) within function . can replace column numbers prefer use (leave c(5,6,8), columns used clustering CD117, CD16/32, CD115. can check make sure names saved running ‘cluster.cols’.","code":"cell.dat <- Spectre::demo.clustered ## Warning: replacing previous import 'scales::viridis_pal' by ## 'viridis::viridis_pal' when loading 'Spectre' cell.dat <- cell.dat[,1:19] cell.dat <- Spectre::do.subsample(dat = cell.dat, targets = 10000) ## Loading required package: data.table str(cell.dat) ## Classes 'data.table' and 'data.frame':   10000 obs. of  19 variables: ##  $ FileName   : chr  \"CNS_Mock_05.csv\" \"CNS_Mock_04.csv\" \"CNS_WNV_D7_02.csv\" \"CNS_WNV_D7_01.csv\" ... ##  $ NK11       : num  106 133 -178 889 237 ... ##  $ CD3        : num  235.1 16.5 1603.4 441.9 143.3 ... ##  $ CD45       : num  13575 9534 131586 99332 7806 ... ##  $ Ly6G       : num  -179 -673 -6522 -3229 -605 ... ##  $ CD11b      : num  31386 22061 1163 40168 11658 ... ##  $ B220       : num  -169 185 893 -623 659 ... ##  $ CD8a       : num  -394.7 282.5 -40.3 -764.2 107.7 ... ##  $ Ly6C       : num  381 608 2727 64542 805 ... ##  $ CD4        : num  509.46 1095.47 -5.04 2345.11 1937.42 ... ##  $ NK11_asinh : num  0.106 0.132 -0.177 0.8 0.235 ... ##  $ CD3_asinh  : num  0.233 0.0165 1.2508 0.4287 0.1428 ... ##  $ CD45_asinh : num  3.3 2.95 5.57 5.29 2.75 ... ##  $ Ly6G_asinh : num  -0.178 -0.631 -2.574 -1.888 -0.573 ... ##  $ CD11b_asinh: num  4.14 3.787 0.992 4.386 3.151 ... ##  $ B220_asinh : num  -0.169 0.184 0.804 -0.588 0.619 ... ##  $ CD8a_asinh : num  -0.3851 0.2789 -0.0403 -0.7044 0.1075 ... ##  $ Ly6C_asinh : num  0.372 0.576 1.728 4.861 0.737 ... ##  $ CD4_asinh  : num  0.48966 0.9473 -0.00504 1.58812 1.41529 ... ##  - attr(*, \".internal.selfref\")=<externalptr> dim(cell.dat) ## [1] 10000    19 head(cell.dat) ## Look at the names of the columns in the dataset, and take note of the number of each column as.matrix(names(cell.dat)) ##       [,1]          ##  [1,] \"FileName\"    ##  [2,] \"NK11\"        ##  [3,] \"CD3\"         ##  [4,] \"CD45\"        ##  [5,] \"Ly6G\"        ##  [6,] \"CD11b\"       ##  [7,] \"B220\"        ##  [8,] \"CD8a\"        ##  [9,] \"Ly6C\"        ## [10,] \"CD4\"         ## [11,] \"NK11_asinh\"  ## [12,] \"CD3_asinh\"   ## [13,] \"CD45_asinh\"  ## [14,] \"Ly6G_asinh\"  ## [15,] \"CD11b_asinh\" ## [16,] \"B220_asinh\"  ## [17,] \"CD8a_asinh\"  ## [18,] \"Ly6C_asinh\"  ## [19,] \"CD4_asinh\" ## Save the column names that you wish to use for clustering as an object called 'cluster.cols'. cluster.cols <- names(cell.dat)[c(11:19)] as.matrix(cluster.cols) ##       [,1]          ##  [1,] \"NK11_asinh\"  ##  [2,] \"CD3_asinh\"   ##  [3,] \"CD45_asinh\"  ##  [4,] \"Ly6G_asinh\"  ##  [5,] \"CD11b_asinh\" ##  [6,] \"B220_asinh\"  ##  [7,] \"CD8a_asinh\"  ##  [8,] \"Ly6C_asinh\"  ##  [9,] \"CD4_asinh\""},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"clustering","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Clustering","title":"Spectre basics guide","text":"Now can perform clustering dimensionality reduction. First going cluster data using FlowSOM. can use function ‘run.flowsom’ run FlowSOM ‘cell.dat’ dataset. information performing clustering Spectre, see page. two key arguments need provide function. first ‘dat’, dataset used. second ‘use.cols’, columns used clustering. case, want set dat cell.dat, use.cols cluster.cols (just created). clustering running, see following red button show RStudio window. means RStudio middle processing something, won’t respond commands working.   FlowSOM runs, progressively see three following updates: FlowSOM finished (red button gone away) can check data ensure FlowSOM columns added correctly. end ’s returned, see FlowSOM metaclusters clusters added dataset","code":"## Run FlowSOM cell.dat <- Spectre::run.flowsom(dat = cell.dat, use.cols = cluster.cols) Creating SOM Mapping data to SOM Creating MST # Check cell.dat to ensure FlowSOM data correctly attached -- by looking at the last two columns cell.dat"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"run-umap","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Run UMAP","title":"Spectre basics guide","text":"Now can perform dimensionality reduction data visualisation. going use UMAP. information dimensionality reduction cytometry data, please see page. two key arguments need provide function. first ‘dat’, dataset used. second ‘use.cols’, columns used clustering. case, want set dat cell.dat, use.cols cluster.cols (just created). UMAP default doesn’t provide progress updates. might take 1-2 minutes UMAP finish running. UMAP finished (red button gone away) can check data ensure UMAP columns added correctly. Now run FlowSOM UMAP, want quick visual check make sure everything looks correct. going create ‘factor’ plot – dot plot two UMAP columns X Y axis, FlowSOM_metacluster colour. going add labels cluster plot, tell function save image disk. Running command generate plot viewer window RStudio.","code":"## Run UMAP cell.dat <- Spectre::run.umap(dat = cell.dat, use.cols = cluster.cols) ## 12:38:14 UMAP embedding parameters a = 1.577 b = 0.8951 ## 12:38:14 Converting dataframe to numerical matrix ## 12:38:14 Read 10000 rows and found 9 numeric columns ## 12:38:14 Using Annoy for neighbor search, n_neighbors = 15 ## 12:38:14 Building Annoy index with metric = euclidean, n_trees = 50 ## 0%   10   20   30   40   50   60   70   80   90   100% ## [----|----|----|----|----|----|----|----|----|----| ## **************************************************| ## 12:38:15 Writing NN index file to temp file /tmp/Rtmp2dQJ8o/file28f778745abe ## 12:38:15 Searching Annoy index using 3 threads, search_k = 1500 ## 12:38:16 Annoy recall = 100% ## 12:38:16 Commencing smooth kNN distance calibration using 3 threads with target n_neighbors = 15 ## 12:38:17 Initializing from normalized Laplacian + noise (using irlba) ## 12:38:17 Commencing optimization for 200 epochs, with 200182 positive edges using 3 threads ## 12:38:17 Using rng type: pcg ## 12:38:18 Optimization finished ## Check cell.dat to ensure the two new UMAP columns have been correctly attached. cell.dat ## Make a 'factor' plot Spectre::make.colour.plot(dat = cell.dat,                          x.axis = \"UMAP_X\",                          y.axis = \"UMAP_Y\",                          col.axis = \"FlowSOM_metacluster\",                          col.type = 'factor',                          add.label = TRUE,                            save.to.disk = FALSE)"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"save-data-to-disk","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Save data to disk","title":"Spectre basics guide","text":"Now added cluster UMAP information data, save files capture progress. First, let’s set working directory ‘OutputDirectory’, data goes right place. explore data FlowJo, let’s also save FCS files.","code":"## Set working directory to OutputDirectory setwd(OutputDirectory) getwd() ## [1] \"/home/runner/work/Spectre/Spectre/vignettes\" ## Save CSV files Spectre::write.files(dat = cell.dat,                      file.prefix = \"Sample_CSV_file\",                      write.csv = TRUE,                      write.fcs = FALSE) ## Save FCS files         Spectre::write.files(dat = cell.dat,                              file.prefix = \"Sample_FCS_file\",                              write.csv = FALSE,                              write.fcs = TRUE)"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"make-some-plots","dir":"Articles","previous_headings":"Spectre basics guide > Spectre basics","what":"Make some plots","title":"Spectre basics guide","text":"Now create informative plots. First make another factor plot FlowSOM metaclusters, time set ‘save..disk’ TRUE. run, check working directory image.  Next ’ll make colour plot showing expression specific marker","code":"## Make a 'factor' plot coloured by cluster Spectre::make.colour.plot(dat = cell.dat,                  x.axis = \"UMAP_X\",                  y.axis = \"UMAP_Y\",                  col.axis = \"FlowSOM_metacluster\",                  col.type = 'factor',                  add.label = TRUE)"},{"path":"http://immunedynamics.io/spectre/articles/basics_guide.html","id":"using-spectre","dir":"Articles","previous_headings":"","what":"Using Spectre","title":"Spectre basics guide","text":"ready start analysis, check structured workflows tutorials following pages: Analysis high-dimensional cytometry data Analysis high-dimensional imaging/spatial data Analysis single-cell genomics data","code":""},{"path":[]},{"path":"http://immunedynamics.io/spectre/articles/data_prep.html","id":"exporting-data-from-flowjo","dir":"Articles","previous_headings":"Preparing data for Spectre","what":"Exporting data from FlowJo","title":"Preparing data for analysis with Spectre","text":"page explains initial data analysis preparation steps different forms cytometry data, export data FlowJo preparation analysis Spectre. overall objective export population interest (e.g. leukocytes), usually following removal doublets, debris, dead cells, irrelevant cells.  Population interest (POI) gating Gate ‘population interest’ (POI). Typically ‘live cells’, potentially live CD45+ cells (live leukocytes).  Select POI wish export, click ‘Select Equivalent Nodes’ ‘Edit’ space.  … select POI gates  samples.  Right click POI populations (long selected) select ’Export / Concatenate Populations’  Exporting data FCS CSV file Spectre can import data FCS CSV files. Choose format export: default suggest exporting CSV (scale value) files can also export data FCS files wish, can export ‘channel values’ CSV file instead. channel-values pre-transformed, removes requirement arcsinh transformation R. See page information.  ‘Parameters’, select ‘Custom set parameters’, select parameters wish export. case, select FSC-SSC-, well compensated (Comp-…) parameters. Make sure select compensated (‘Comp-…’) parameters.  Choose location export.  Result:","code":""},{"path":"http://immunedynamics.io/spectre/articles/data_prep.html","id":"setup-a-sample-metadata-file","dir":"Articles","previous_headings":"Preparing data for Spectre","what":"Setup a sample metadata file","title":"Preparing data for analysis with Spectre","text":"make analysis little easier, usually create file contains relevant metadata file (e.g. sample name, group name, batch, etc). allows us add sample information cell (row) data.table R, making easy navigate, filter, plot data factor (group, batch, etc). cell count files, can added well. workflows, within folder using analysis : R script ‘data’ folder, ‘metadata’ folder  Using Microsoft Excel (similar), create new file save CSV file metadata folder  Mac, select files, right click select ‘copy’ (press CMD + C).  ‘sample.details.csv’ file, name first column ‘Filename’ (A1), A2 right click select ‘paste’ (press CMD + V). paste filenames CSV file.  Windows: select files, press CTRL + , paste excel. Use find replace remove full file path (see video demonstration). can add much information relevant file like. Sample, Group, Batch ‘required’ Spectre workflows (aren’t actually required, makes easier use default scripts). samples one batch, just enter ‘1’ ‘’ (batch name) row ‘batch’. like add information (time point, infection, treatment, etc) feel free . “Sample” recommended column, can simplified name sample “Group” extremely useful analyses “Batch” helpful prepared, stained, run samples multiple batches. samples one batch, just enter ‘1’ ‘’ (batch name) row ‘batch’.  “Cells per sample” useful column add intend generate absolute counts population per sample generation summary data, required otherwise. like add information (time point, infection, treatment, etc) feel free .  now ready get started Spectre. Check workflows Spectre Home page. Simple Discovery Workflow great place get started.","code":""},{"path":"http://immunedynamics.io/spectre/articles/data_transformation.html","id":"axis-scaling-with-cytometry-data","dir":"Articles","previous_headings":"","what":"Axis scaling with cytometry data","title":"Data transformation","text":"Excerpts page extracted : Ashhurst, T. M.,Smith, . L., &King, N. J. C.(2017).High‐dimensional fluorescence cytometry. Current Protocols Immunology, 119, 5.8.1–5.8.38. doi: 10.1002/cpim.37 important consideration analysis data viewed interpreted. ﬂuorescence data sometimes viewed linear scale, insufficient simultaneously examining high low ﬂuorescence values. , use logarithmic scale visualizing ﬂuorescence cytometry data became typical. However, viewing data typical logarithmic scale introduces misleading visual artifacts signals low end scale. , alternative methods plotting data developed, using bi-exponential scale Logicle constraints (Parks, Roederer, & Moore, 2006). Logicle transformations, high end scale logarithmic low end scale converted linear scale. scale returns logarithmic values linear component.  Linear (max): y- x-axis plotted using linear axis. cytometry data, often useful, large number data points crowded left hand side plot, much space taken high-value data points potential outliers. Linear (modified max): linear plot modified maximum value adjusted, plot slightly improved. However, much data still crowded left hand side plot, number events scale right hand side. Logarithmic: logarithmic plot improves visualisation, enabling greater dynamic range – low high value data points can effectively plotted one continuum. However, ‘0’ negative numbers plotted logarithmic scale, stacked left hand side. Additionally, cells ‘negative’ x-axis marker take large amount plot – spread interpreted computational algorithm relevant differences expression. Logicle/Bi-exponential: plot intended best worlds. plot logarithmic, allowing effective dynamic range plotted. low end plot (left hand side) compressed (reducing spread negative signal) switched briefly linear around zero, allowing plotting values ‘0’, plotting negative values 0. degree low-end logarithmic scale ‘compressed’ linear space known ‘width basis.’ method scaling allows data low values, well data negative values, displayed accurately. approach especially useful visualizing data high levels SE, ‘negative’ autoﬂuorescent population spreads substantially.","code":""},{"path":"http://immunedynamics.io/spectre/articles/data_transformation.html","id":"transforming-data-for-computational-analysis","dir":"Articles","previous_headings":"","what":"Transforming data for computational analysis","title":"Data transformation","text":"addition transforming scales visualizing cytometry data, data can transformed prior analysis. One approach use inverse hyperbolic arcsinh transformation.  Essentially, data suitably displayed Logicle scale converted linear representation, low-end values compressed close zero, depending cofactor (Fig. 5.8.12E,F). often necessary step prior performing computational analysis cytometry datasets.  level low-end compression determined co-factor used arcsinh transformation. comparison raw data (generated LSR-II) plotted Logicle/Bi-exponential scale (various width basis ‘WB’ settings) compared data transformed using arcsinh various co-factors.  mass cytometry data, co-factor 15 suitable channels. flow cytometry data, vary detector detector (machine machine), starting guide, co-factor 100 yield similar compression results default scaling LSR-II FlowJo v10 (10^2 compressed).","code":""},{"path":"http://immunedynamics.io/spectre/articles/data_transformation.html","id":"how-do-i-choose-the-correct-arcsinh-co-factor","dir":"Articles","previous_headings":"Transforming data for computational analysis","what":"How do I choose the correct ArcSinh co-factor?","title":"Data transformation","text":"value consider upper limit background? Typically CyTOF data might 10^1, whereas flow data might 10^2 10^3. Using figure , can see compress values 10^2, want use co-factor approx. 100 500, compress values 10^3, want use co-factor approx 1000 5000.","code":""},{"path":"http://immunedynamics.io/spectre/articles/data_transformation.html","id":"examples-arcsinh-transformation-of-mass-cytometry-data","dir":"Articles","previous_headings":"Transforming data for computational analysis > How do I choose the correct ArcSinh co-factor?","what":"Examples: ArcSinh transformation of mass cytometry data","title":"Data transformation","text":"Plots raw data FlowJo various width basis (WB) settings x‐axis (168Er CD8a). Minimum x‐axis value plot adjusted highest possible value, within restrictions imposed FlowJo. Y‐axis width basis fixed −100. x‐ y‐axis positive decades set 4.75. Plots ArcSinh transformed data R various co‐factors used marker x‐axis. Y‐axis co‐factor fixed 10.","code":""},{"path":"http://immunedynamics.io/spectre/articles/data_transformation.html","id":"examples-arcsinh-transformation-of-conventional-and-spectral-cytometry-data","dir":"Articles","previous_headings":"Transforming data for computational analysis","what":"Examples: ArcSinh transformation of conventional and spectral cytometry data","title":"Data transformation","text":"Plots data generated conventional (–B) spectral (C–D) flow cytometry system. conventional flow cytometry system 10‐laser BD LSR‐II, spectral flow cytometry system 5‐laser Cytek Aurora. () Plots conventional flow cytometry raw data FlowJo various width basis (WB) settings x‐axis (BUV805 CD8a). Minimum x‐axis value plot adjusted highest possible value, within restrictions imposed FlowJo. Y‐axis width basis fixed −100. x‐ y‐axis positive decades set 4.29. (B) Plots ArcSinh transformed data R various co‐factors used marker x‐axis. Y‐axis co‐factor fixed 1000. (C) Plots spectral cytometry raw data FlowJo various width basis (WB) settings x‐axis (BUV805 CD8a). Minimum x‐axis value plot adjusted highest possible value, within restrictions imposed FlowJo. Y‐axis width basis fixed −631. x‐ y‐axis positive decades set 5.68. (D) Plots ArcSinh transformed data R various co‐factors used marker x‐axis. Y‐axis co‐factor fixed 5000.","code":""},{"path":"http://immunedynamics.io/spectre/articles/data_transformation.html","id":"alternative-approach-to-data-transformation-csv-channel-values","dir":"Articles","previous_headings":"Transforming data for computational analysis","what":"Alternative approach to data transformation: CSV channel values","title":"Data transformation","text":"useful function available FlowJo analysis software ability export data “CSV Channel Values”. case, distribution cells biaxial plot (usually bi-exponential similar scale) captured given linear scale values 0 1024, process “binning”. allows user visually adjust scale low-end compression settings satisfactory point, rather using single cofactor archsinh transformation.  raw (scale) values need transformed R using arcsinh transformation, whereas channel values can used -.  file type options can exported FlowJo: export ‘channel values’: Firstly, need adjust axis transformations FlowJo compress negative expression spread (exporting FCS CSV-scale values, required). :  :  Choose CSV - Channel values export.","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"installing-spectre","dir":"Articles","previous_headings":"","what":"Installing Spectre","title":"Spectre installation and getting started guide","text":"two options using Spectre: Install via RStudio. can download R RStudio, install Spectre package within framework. Install via Docker. can download Docker image contains pre-compiled installation R, RStudio, Spectre package, associated packages. useful option reproducible analysis. Spectre v1.1 removed package dependencies rgeos rgdal longer available CRAN. package install fine without dependencies, spatial functions may work properly. required, one can download archived packages, unzip , placed R library location.","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"install-via-rstudio","dir":"Articles","previous_headings":"Installing Spectre","what":"Install via RStudio","title":"Spectre installation and getting started guide","text":"Download install latest version R (CRAN) R Studio. two ways install Spectre, using pak remotes package. can try installing using pak first, work, can use remotes package. Instructions available . Important: unfamiliar running R code using Rstudio, please visit [Basics guide] section first.","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"using-the-pak-package","dir":"Articles","previous_headings":"Installing Spectre > Install via RStudio","what":"Using the pak package","title":"Spectre installation and getting started guide","text":"Run following R code install Spectre using pak R package. running first command install pak package first time, might ask select CRAN mirror use. Pick mirror closest , enter number, press enter. running second command, Pak show list dependency packages install can install Spectre. list may look like following: continue type letter Y enter. see progress bar messages showing installation progress. Wait finishes.","code":"# Installs the package 'pak' if required if (!requireNamespace(\"pak\", quietly = TRUE)) {     install.packages(\"pak\") } # Install the Spectre package pak::pkg_install(\"immunedynamics/Spectre\") → Will install 52 packages. → Will update 1 package. → Will download 49 CRAN packages (68.97 MB), cached: 4 (0 B). + ALL                             1.48.0    👷🏼‍♂️ + car                             3.1-3      ⬇ (1.52 MB) + carData                         3.0-5      ⬇ (1.83 MB) + colorRamps                      2.3.4      ⬇ (28.21 kB) + ConsensusClusterPlus            1.70.0     + corrplot                        0.95       ⬇ (3.83 MB) + crosstalk                       1.2.1      ⬇ (407.91 kB) + dendextend                      1.19.0     ⬇ (5.06 MB) + dendsort                        0.3.4      ⬇ (1.17 MB) + Deriv                           4.2.0      ⬇ (153.06 kB) + doBy                            4.7.0      ⬇ (4.91 MB) + DT                              0.33       ⬇ (1.79 MB) + ellipse                         0.5.0      ⬇ (218.52 kB) + emmeans                         1.11.2     ⬇ (2.23 MB) + estimability                    1.5.1      ⬇ (49.22 kB) + FactoMineR                      2.11      🔧 ⬇ (3.82 MB) + flashClust                      1.01-2    🔧 ⬇ (25.21 kB) + FlowSOM                         2.14.0     + FNN                             1.1.4.1   🔧 ⬇ (130.43 kB) + ggforce                         0.5.0     🔧 ⬇ (2.67 MB) + ggnewscale                      0.5.2      ⬇ (355.68 kB) + ggpointdensity                  0.2.0     🔧 ⬇ (4.37 MB) + ggpubr                          0.6.1      ⬇ (2.13 MB) + ggrepel                         0.9.6     🔧 ⬇ (624.15 kB) + ggsci                           3.2.0      ⬇ (2.39 MB) + ggsignif                        0.6.4      ⬇ (603.29 kB) + ggthemes                        5.1.0      ⬇ (448.64 kB) + httpuv                          1.6.16    🔧 ⬇ (2.78 MB) + later                           1.4.2     🔧 ⬇ (786.21 kB) + lazyeval                        0.2.2     🔧 ⬇ (162.22 kB) + leaps                           3.2       🔧 ⬇ (104.19 kB) + MatrixModels                    0.5-4      ⬇ (409.70 kB) + microbenchmark                  1.5.0     🔧 ⬇ (72.58 kB) + modelr                          0.1.11     ⬇ (203.70 kB) + multcompView                    0.1-10     ⬇ (114.76 kB) + mvtnorm                         1.3-3     🔧 ⬇ (1.00 MB) + pbkrtest                        0.5.4      ⬇ (221.05 kB) + pheatmap                        1.0.13     ⬇ (78.22 kB) + polyclip                        1.10-7    🔧 ⬇ (440.78 kB) + polynom                         1.4-1      ⬇ (402.59 kB) + promises                        1.3.3     🔧 ⬇ (1.86 MB) + quantreg                        6.1       🔧 ⬇ (1.55 MB) + RcppAnnoy                       0.0.22    🔧 ⬇ (1.34 MB) + reshape2                        1.4.4     🔧 ⬇ (332.09 kB) + rstatix                         0.7.2      ⬇ (615.55 kB) + scattermore                     1.2       🔧 ⬇ (389.60 kB) + scatterplot3d                   0.3-44     ⬇ (348.86 kB) + SparseM                         1.84-2    🔧 ⬇ (942.60 kB) + Spectre              2.0.0-00 → 1.2.0     👷🏾‍♀️🔧 (GitHub: 9bcdb3b) + systemfonts                     1.2.3     🔧 ⬇ (7.23 MB) + tweenr                          2.0.3     🔧 ⬇ (974.49 kB) + uwot                            0.2.3     🔧 ⬇ (3.90 MB) + XML                             3.99-0.18 🔧 ⬇ (1.94 MB)  ? Do you want to continue (Y/n)"},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"using-the-remotes-package","dir":"Articles","previous_headings":"Installing Spectre > Install via RStudio","what":"Using the remotes package","title":"Spectre installation and getting started guide","text":"trouble installing using pak package , can use remotes package installation instead. R might ask update packages. general recommend updating packages – , enter 1. However, might wish delay middle analysis project.  packages may two different versions, compiled compiled. Rstudio ask whether want install version require compilation. want, enter Yes download version need compiled, compile , install. However may require extra softwares installed computer run properly. ok also enter install version precompiled. often easier. However, packages must compiled computer run, like :  case, recommend specify Yes let computer compiling. installation successful, see something similar following:","code":"# Installs the package 'remotes' if required if (!requireNamespace(\"remotes\", quietly = TRUE)) {     install.packages(\"remotes\") } # Install the Spectre package remotes::install_github(\"immunedynamics/Spectre\")"},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"check-that-spectre-is-installed","dir":"Articles","previous_headings":"Installing Spectre > Install via RStudio","what":"Check that Spectre is installed","title":"Spectre installation and getting started guide","text":"check whether Spectre installed successfully, run following command: get message “Spectre installed”, successfully installed.","code":"if (requireNamespace(\"Spectre\", quietly = TRUE)) {     message(\"Spectre is installed\") } else {     message(\"Spectre is NOT installed\") } ## Warning: replacing previous import 'scales::viridis_pal' by ## 'viridis::viridis_pal' when loading 'Spectre' ## Spectre is installed"},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"install-via-docker","dir":"Articles","previous_headings":"Installing Spectre","what":"Install via Docker","title":"Spectre installation and getting started guide","text":"Spectre available Docker container, thanks efforts Dr. Givanna Putri. Docker cloud service allows anyone deliver software packages “complete unit” form container. means software package released standalone computing environment, pre-installed necessary pre-requisite libraries required software, pre-configured user convenience. Spectre’s Docker image match recent versions Spectre (denoted ‘master’, referring master branch Github). download version, simply follow instructions . wish load specific version Spectre, can specify version (e.g. v0.5.3, v0.5.4. etc) instead using ‘master’. can see list versions available via docker page.","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"download-docker-app","dir":"Articles","previous_headings":"Installing Spectre > Install via Docker","what":"Download Docker app","title":"Spectre installation and getting started guide","text":"Go following address: https://www.docker.com/products/docker-desktop Download correct version Docker Desktop.  Go downloads folder open ‘.dmg’ file.  following window opens, drag drop ‘Docker.app’ icon ‘Applications’ shortcut.  now able find ‘Docker’ applications folder.","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"preferences-optional","dir":"Articles","previous_headings":"Installing Spectre > Install via Docker","what":"Preferences (optional)","title":"Spectre installation and getting started guide","text":"Open Docker app applications folder bar bottom screen.  turn , see following icon bar top screen.  Additionally program open. Wait moments ‘Docker Engine’ starts.  icon lower left turn green ready.  Click gears icon open ‘preferences’. Make sure untick options General mimic screenshot . ensure Docker doesn’t start boot computer, doesn’t share usage data Docker default. Leave automatic update checked prefer check updates regularly.  Press ‘Apply & Restart’ done. Close app like use .","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"launching-docker","dir":"Articles","previous_headings":"Installing Spectre > Install via Docker","what":"Launching Docker","title":"Spectre installation and getting started guide","text":"Open Docker app.  Wait moments ‘Docker Engine’ starts.  icon lower left turn green ready.  Open ‘Terminal’ (Mac, can found applications folder, bar bottom screen).   Copy following code terminal press ENTER.  default, RStudio session Docker launch able see everything Home directory . achieved code using ‘~’ symbol. data elsewhere (server etc) can navigate location using Finger drag + drop target directory/folder terminal: terminal, add following segments, hit ENTER: docker run --rm -e PASSWORD=spectre -p 8787:8787 -v DRAG+DROP target folder finder :/home/rstudio/spectre_dir --name=spectre immunedynamics/spectre:master","code":"docker run --rm -e PASSWORD=spectre -p 8787:8787 -v ~:/home/rstudio/spectre_dir --name=spectre immunedynamics/spectre:master"},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"initiate-session","dir":"Articles","previous_headings":"Installing Spectre > Install via Docker","what":"Initiate session","title":"Spectre installation and getting started guide","text":"Open preferred web browser (chrome, safari, etc) go following address http://localhost:8787  Sign Name: rstudio Password: spectre","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"running-spectre","dir":"Articles","previous_headings":"Installing Spectre > Install via Docker","what":"Running Spectre","title":"Spectre installation and getting started guide","text":"Open desired analysis script      Perform analysis  Close finished","code":""},{"path":"http://immunedynamics.io/spectre/articles/install.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Spectre installation and getting started guide","text":"Spectre dependencies installed successfully, may see error messages like following.  Alternatively, Spectre successfully installed, running package.check() dependencies installed correctly, see something like following: case, try install offending packages independently. Note whether packages need installed CRAN Bioconductor. Alternatively, can report issue Github, ask help discussion board, email us.","code":"Checking dependency packages...  -- Biobase is required but not installed. Please install from BioConductor.                  Check out 'https://immunedynamics.github.io/spectre/getting-started/' for help with installation"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Spectre - simple discovery workflow","text":"Overview provide worked example ‘simple’ discovery analysis workflow, entire process (data prep, clustering, dimensionality reduction, cluster annotation, plotting, summary data, statistical analysis) contained within single script. ‘simple’ workflow suitable fast analysis small datasets. larger complex datasets, datasets multiple batches, recommend general discovery workflow, data preparation, batch alignment, clustering/dimensionality reduction, quantitative analysis separated separate scripts. demo dataset used worked example cells extracted mock- virally-infected mouse brains, measured flow cytometry. Strategy ‘simple’ ‘general’ discovery workflows designed facilitate analysis large complex cytometry datasets using Spectre R package. ’ve tested 30 million cells single analysis session far. workflow designed get around cell number limitations tSNE/UMAP. analysis starts clustering FlowSOM – fast scales well large datasets. clustered data downsampled, dimensionality reduction performed tSNE/UMAP. allows visualisation data, clusters present dataset. possible cell types datasets explored, clusters can labelled appropriate cellular identities. Finally, can use clusters/populations generate summary statistics (expression levels, frequencies, total counts etc), allows us create graphs heatmaps, facilitating statistical analysis. Multiple samples analyse multiple samples, files must imported one analysis session. allows cells session clustered analysed together, allows us examine differential expression markers, differences cell proportions, experimental groups. Batch alignment ‘simple’ discovery workflow include batch alignment steps. batch correction needs applied, recommend using general discovery workflow.","code":""},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"before-you-start","dir":"Articles","previous_headings":"","what":"Before you start","title":"Spectre - simple discovery workflow","text":"haven’t installed Spectre, please visit Spectre installation page. new R Spectre, recommend trying R/RStudio Spectre tutorials available getting started page, familiarise R/RStudio first.","code":""},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"citation-and-methods","dir":"Articles","previous_headings":"","what":"Citation and methods","title":"Spectre - simple discovery workflow","text":"Citation use Spectre work, please consider citing Ashhurst TM, Marsh-Wakefield F, Putri GH et al. (2022). Cytometry Part 101 (3), 237-253. continue providing open-source tools Spectre, helps us can demonstrate efforts contributing analysis efforts community. Please also consider citing authors individual packages tools (e.g. CytoNorm, FlowSOM, tSNE, UMAP, etc) critical elements analysis work. provided generic text can use methods section protocol ‘’ page. Sample methods blurb sample methods blurb workflow. may need adapt text reflect changes made analysis. Computational analysis data performed using Spectre R package (Ashhurst et al., 2022), instructions source code provided https://github.com/ImmuneDynamics/spectre. Samples initially prepared FlowJo, population interest exported raw value CSV files. Arcsinh transformation performed data R using co-factor 15 redistribute data linear scale compress low end values near zero. dataset merged single data.table, keywords denoting sample, group, factors added row (cell). FlowSOM algorithm (Van Gassen et al., 2015) run merged dataset cluster data, every cell assigned specific cluster metacluster. Subsequently, data downsampled analysed dimensionality reduction algorithm Uniform Manifold Approximation Projection (UMAP) (McInnes, Healy, Melville, 2018) cellular visualisation.","code":""},{"path":[]},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"directories","dir":"Articles","previous_headings":"Setup","what":"Directories","title":"Spectre - simple discovery workflow","text":"Create master folder meaningful name. inside folder, insert following: One folder called ‘data’ – contain data CSV FCS files One folder called ‘metadata’ – contain CSV containg sample metadata One folder called ‘Spectre simple discovery’ similar – place analysis script Example:","code":"/spectre_simple_discovery  # Master folder for this simple discovery)}   /data     -- Contains data files, one CSV or FCS per sample   /metadata     -- Contains a CSV containing sample metadata (group, batch, etc)   /scripts     -- Spectre simple.discovery.R"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"analysis-script","dir":"Articles","previous_headings":"Setup","what":"Analysis script","title":"Spectre - simple discovery workflow","text":"can download simple discovery script link. Place inside scripts folder.","code":""},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"data-files","dir":"Articles","previous_headings":"Setup","what":"Data files","title":"Spectre - simple discovery workflow","text":"use demo data test run simple discovery workflow, nothing step. Simply follow relevant instructions page download demo data. like use data, add data metadata files: Place sample CSV FCS files data folder created . Place metadata CSV files metadata folder created .","code":""},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"load-packages-and-set-directories","dir":"Articles","previous_headings":"","what":"1. Load packages and set directories","title":"Spectre - simple discovery workflow","text":"Running library(Spectre) load Spectre package (also known ‘library’). can use package.check() see standard dependency packages installed, package.load() load packages. Define directories store data results. Create .","code":"### Load libraries  library(Spectre) # Check that all required packages are installed Spectre::package.check() # Load required packages Spectre::package.load() PrimaryDirectory <- file.path(tempdir(), \"spectre_simple_discovery\") # For demo purposes, we use a temporary directory # PrimaryDirectory <- \"C:/Path/To/Your/Directory/spectre_simple_discovery\" # Uncomment and edit this line to set your own directory InputDirectory <- file.path(PrimaryDirectory, \"data\") # Directory containing data files MetaDirectory <- file.path(PrimaryDirectory, \"metadata\") # Directory containing metadata files OutputDirectory <- file.path(PrimaryDirectory, \"output\") # Directory to save results dir.create(PrimaryDirectory, showWarnings = FALSE) dir.create(InputDirectory, showWarnings = FALSE) dir.create(MetaDirectory, showWarnings = FALSE) dir.create(OutputDirectory, showWarnings = FALSE)"},{"path":[]},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"demo-data","dir":"Articles","previous_headings":"2. Import and prep data","what":"Demo data","title":"Spectre - simple discovery workflow","text":"need demo dataset, run following code analysis script (select , CMD+SHIFT+C) run download. using datasets, skip step. Alternative, download files https://github.com/ImmuneDynamics/data/blob/main/msCNS.zip?raw=TRUE. code download demo dataset files metadata file, place data metadata folders respectively.","code":"download.file(     url = \"https://github.com/ImmuneDynamics/data/blob/main/msCNS.zip?raw=TRUE\",      destfile = file.path(PrimaryDirectory, 'msCNS.zip'),      mode = 'wb'   ) unzip(zipfile = file.path(PrimaryDirectory, 'msCNS.zip'), exdir = PrimaryDirectory) for(i in list.files(file.path(PrimaryDirectory, 'msCNS', 'data'), full.names = TRUE)){     file.rename(from = i,  to = file.path(InputDirectory, basename(i)) ) } for(i in list.files(file.path(PrimaryDirectory, 'msCNS', 'metadata'), full.names = TRUE)){     file.rename(from = i,  to = file.path(MetaDirectory, basename(i)) ) } unlink(c(file.path(PrimaryDirectory, 'msCNS'), file.path(PrimaryDirectory, 'msCNS.zip')), recursive = TRUE)"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"import-data","dir":"Articles","previous_headings":"2. Import and prep data","what":"Import data","title":"Spectre - simple discovery workflow","text":"begin, change working directory ‘InputDirectory’ list CSV files directory – sample CSV files. can read samples (example, one CSV file per sample) list called ‘data.list’. Spectre uses data.table framework store data, reads, writes, performs operations data quickly. default, read.files() function generate variables, can review, running .list.summary() function. name.table variable table column names samples (one row per sample, one column per column name). column names matching, table repeating pattern. jumbled, samples columns don’t appear samples. ncol.check nrow.check simple tables indicating number columns rows sample. can review first 6 rows first sample data using following:","code":"### Import data  list.files(InputDirectory, \".csv\") #>  [1] \"CNS_Mock_01.csv\"   \"CNS_Mock_02.csv\"   \"CNS_Mock_03.csv\"   #>  [4] \"CNS_Mock_04.csv\"   \"CNS_Mock_05.csv\"   \"CNS_Mock_06.csv\"   #>  [7] \"CNS_WNV_D7_01.csv\" \"CNS_WNV_D7_02.csv\" \"CNS_WNV_D7_03.csv\" #> [10] \"CNS_WNV_D7_04.csv\" \"CNS_WNV_D7_05.csv\" \"CNS_WNV_D7_06.csv\"  data.list <- Spectre::read.files(     file.loc = InputDirectory,     file.type = \".csv\",     do.embed.file.names = TRUE ) #> Reading CSV files... #> Reading CNS_Mock_01.csv #> Reading CNS_Mock_02.csv #> Reading CNS_Mock_03.csv #> Reading CNS_Mock_04.csv #> Reading CNS_Mock_05.csv #> Reading CNS_Mock_06.csv #> Reading CNS_WNV_D7_01.csv #> Reading CNS_WNV_D7_02.csv #> Reading CNS_WNV_D7_03.csv #> Reading CNS_WNV_D7_04.csv #> Reading CNS_WNV_D7_05.csv #> Reading CNS_WNV_D7_06.csv ### Check the data  check <- do.list.summary(data.list)  check$name.table # Review column names and their subsequent values #>      X1  X2   X3   X4    X5   X6   X7   X8  X9      X10    X11 #> 1  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 2  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 3  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 4  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 5  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 6  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 7  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 8  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 9  NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 10 NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 11 NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo #> 12 NK11 CD3 CD45 Ly6G CD11b B220 CD8a Ly6C CD4 FileName FileNo check$ncol.check # Review number of columns (features, markers) in each sample #>       [,1] #>  [1,] 11   #>  [2,] 11   #>  [3,] 11   #>  [4,] 11   #>  [5,] 11   #>  [6,] 11   #>  [7,] 11   #>  [8,] 11   #>  [9,] 11   #> [10,] 11   #> [11,] 11   #> [12,] 11 check$nrow.check # Review number of rows (cells) in each sample #>       [,1]  #>  [1,] 9937  #>  [2,] 15415 #>  [3,] 14246 #>  [4,] 17044 #>  [5,] 5459  #>  [6,] 4891  #>  [7,] 17950 #>  [8,] 16233 #>  [9,] 15999 #> [10,] 17131 #> [11,] 15926 #> [12,] 18773 data.list[[1]] #>            NK11        CD3     CD45       Ly6G     CD11b      B220      CD8a #>           <num>      <num>    <num>      <num>     <num>     <num>     <num> #>    1:   42.3719  40.098700  6885.08  -344.7830 14787.300  -40.2399  83.71750 #>    2:   42.9586 119.014000  1780.29  -429.6650  5665.730   86.6673  34.72190 #>    3:   59.2366 206.238000 10248.30 -1603.8400 19894.300  427.8310 285.88000 #>    4:  364.9480  -0.233878  3740.04  -815.9800  9509.430  182.4200 333.60500 #>    5:  440.2470  40.035200  9191.38    40.5055  5745.820 -211.6940 149.22000 #>   ---                                                                        #> 9933:   11.2126  36.951600  2515.82  -647.4930  6172.070  221.9380 266.90000 #> 9934:  239.9700 440.217000  7247.28 -1449.7200 15355.400  809.3040 456.59900 #> 9935: -134.9650 111.350000  2472.85    81.5975  9657.160 -113.1320   3.79607 #> 9936:   86.3333  28.286900  5745.27 -1284.0800 18303.100  353.5290 262.96300 #> 9937:   10.1467 122.255000  1971.69  -215.7660   727.708  506.8580 113.14400 #>            Ly6C      CD4    FileName FileNo #>           <num>    <num>      <char>  <int> #>    1:  958.7000  711.072 CNS_Mock_01      1 #>    2:  448.2590  307.272 CNS_Mock_01      1 #>    3: 1008.8300  707.094 CNS_Mock_01      1 #>    4:  440.0710  249.784 CNS_Mock_01      1 #>    5:   87.4815  867.570 CNS_Mock_01      1 #>   ---                                       #> 9933:  141.4200  708.348 CNS_Mock_01      1 #> 9934: 2093.6900 2119.270 CNS_Mock_01      1 #> 9935: -114.1510  110.743 CNS_Mock_01      1 #> 9936:  745.8080  537.750 CNS_Mock_01      1 #> 9937:  244.2210 2334.800 CNS_Mock_01      1"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"merge-data-tables","dir":"Articles","previous_headings":"2. Import and prep data","what":"Merge data.tables","title":"Spectre - simple discovery workflow","text":"metadata added, can merge data single data.table using .merge.files(). default, columns matching names aligned new table, columns present samples, others, added filled ‘NA’ samples didn’t column initially. data merged, can review data:","code":"### Merge data  cell.dat <- Spectre::do.merge.files(dat = data.list) cell.dat #>              NK11        CD3     CD45       Ly6G    CD11b      B220      CD8a #>             <num>      <num>    <num>      <num>    <num>     <num>     <num> #>      1:   42.3719  40.098700  6885.08  -344.7830 14787.30  -40.2399   83.7175 #>      2:   42.9586 119.014000  1780.29  -429.6650  5665.73   86.6673   34.7219 #>      3:   59.2366 206.238000 10248.30 -1603.8400 19894.30  427.8310  285.8800 #>      4:  364.9480  -0.233878  3740.04  -815.9800  9509.43  182.4200  333.6050 #>      5:  440.2470  40.035200  9191.38    40.5055  5745.82 -211.6940  149.2200 #>     ---                                                                       #> 169000:  910.8890  72.856100 31466.20  -316.5570 28467.80   -7.7972 -271.8040 #> 169001:  -10.2642  64.188700 45188.00  -540.5140 22734.00  202.4110 -936.4920 #> 169002: -184.2910  -9.445650 11842.60   -97.9383 17237.00  123.4760 -219.9320 #> 169003:  248.3860 229.986000 32288.20  -681.1630 19255.80 -656.0540 -201.5880 #> 169004:  738.9810  95.470300 46185.10 -1004.6000 22957.80 -661.6280   72.3356 #>               Ly6C       CD4      FileName FileNo #>              <num>     <num>        <char>  <int> #>      1:   958.7000  711.0720   CNS_Mock_01      1 #>      2:   448.2590  307.2720   CNS_Mock_01      1 #>      3:  1008.8300  707.0940   CNS_Mock_01      1 #>      4:   440.0710  249.7840   CNS_Mock_01      1 #>      5:    87.4815  867.5700   CNS_Mock_01      1 #>     ---                                           #> 169000: 12023.7000 1103.0500 CNS_WNV_D7_06     12 #> 169001:  4188.3300  315.9400 CNS_WNV_D7_06     12 #> 169002:  8923.4000 -453.4640 CNS_WNV_D7_06     12 #> 169003: 10365.7000   61.6765 CNS_WNV_D7_06     12 #> 169004:  9704.4700  -31.8532 CNS_WNV_D7_06     12"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"read-in-metadata","dir":"Articles","previous_headings":"2. Import and prep data","what":"Read in metadata","title":"Spectre - simple discovery workflow","text":"","code":"### Read in metadata    meta.dat <- fread(file.path(MetaDirectory, \"sample.details.csv\")) meta.dat #>              Filename     Sample  Group  Batch Cells per sample #>                <char>     <char> <char> <char>            <num> #>  1:   CNS_Mock_01.csv 01_Mock_01   Mock      A           420000 #>  2:   CNS_Mock_02.csv 02_Mock_02   Mock      B           240000 #>  3:   CNS_Mock_03.csv 03_Mock_03   Mock      B           256000 #>  4:   CNS_Mock_04.csv 04_Mock_04   Mock      A           252000 #>  5:   CNS_Mock_05.csv 05_Mock_05   Mock      A           345000 #>  6:   CNS_Mock_06.csv 06_Mock_06   Mock      B           702000 #>  7: CNS_WNV_D7_01.csv  07_WNV_01    WNV      A          5070000 #>  8: CNS_WNV_D7_02.csv  08_WNV_02    WNV      B          2940000 #>  9: CNS_WNV_D7_03.csv  09_WNV_03    WNV      A          2120000 #> 10: CNS_WNV_D7_04.csv  10_WNV_04    WNV      A          4320000 #> 11: CNS_WNV_D7_05.csv  11_WNV_05    WNV      B          4080000 #> 12: CNS_WNV_D7_06.csv  12_WNV_06    WNV      A          1830000"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"data-transformation","dir":"Articles","previous_headings":"","what":"3. Data transformation","title":"Spectre - simple discovery workflow","text":"perform clustering etc, need meaningfully transform data. information necessary, please see page. Note: imported CSV (channel value) files exported FlowJo, data transformations required, can skip arcsinh transformation steps proceed straight adding metadata. information FCS, CSV scale, CSV channel value file types can found . Create output directory store transformation plots. First, check column names dataset. columns want apply arcsinh transformation cellular columns – column 1 column 9. can specify columns using code . Define cofactor use transformation. general recommendation, suggest using cofactor = 15 CyTOF data, cofactor 100 1000 flow data (suggest 500 starting point). quick comparison figure showing different co-factors compare bi-exponential transformations performed LSR-II. detailed information choice, approaches different cofactors different columns might required, see page.   worked example use cofactor 500. can also choose column use plotting transformed result – ideally something expressed variety cell types dataset. Now need apply arcsinh transformation data columns, using specific co-factor. can make plots see arcsinh transformation appropriate Check plots see happy transformation. detailed guidance, see page. happy, proceed analysis. Otherwise, go back merging data.list (create cell.dat) try another co-factor.","code":"plot.path <- file.path(OutputDirectory, \"Output 1 - transformed plots\") dir.create(plot.path) as.matrix(names(cell.dat)) #>       [,1]       #>  [1,] \"NK11\"     #>  [2,] \"CD3\"      #>  [3,] \"CD45\"     #>  [4,] \"Ly6G\"     #>  [5,] \"CD11b\"    #>  [6,] \"B220\"     #>  [7,] \"CD8a\"     #>  [8,] \"Ly6C\"     #>  [9,] \"CD4\"      #> [10,] \"FileName\" #> [11,] \"FileNo\" ### Arcsinh transformation  as.matrix(names(cell.dat)) #>       [,1]       #>  [1,] \"NK11\"     #>  [2,] \"CD3\"      #>  [3,] \"CD45\"     #>  [4,] \"Ly6G\"     #>  [5,] \"CD11b\"    #>  [6,] \"B220\"     #>  [7,] \"CD8a\"     #>  [8,] \"Ly6C\"     #>  [9,] \"CD4\"      #> [10,] \"FileName\" #> [11,] \"FileNo\"  to.asinh <- names(cell.dat)[c(1:9)] to.asinh #> [1] \"NK11\"  \"CD3\"   \"CD45\"  \"Ly6G\"  \"CD11b\" \"B220\"  \"CD8a\"  \"Ly6C\"  \"CD4\" cofactor <- 500 plot.against <- \"Ly6C_asinh\" cell.dat <- do.asinh(cell.dat, to.asinh, cofactor = cofactor) transformed.cols <- paste0(to.asinh, \"_asinh\") for(i in transformed.cols){     make.colour.plot(do.subsample(cell.dat, 20000), i, plot.against, path = plot.path) }"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"add-metadata","dir":"Articles","previous_headings":"","what":"4. Add metadata","title":"Spectre - simple discovery workflow","text":"also want read attach sample metadata, aid analysis. metadata read R, select columns want add dataset. example want include use first four columns (Filename, Sample, Group, Batch). ‘Filename’ used matching cell.dat meta.dat, three columns information gets added cell.dat Now can add information cell.dat. Essentially, file names listed metadata table, can use add listed metadata table corresponding files data.list. can thrn review data ensure metadata correctly embedded. Check column names specify columns represent cellular features (case, arcsinh transformed data, defined “markername_asinh”). Additionally, specify columns used generate cluster tSNE/UMAP results. Columns specified still analysed, won’t contributed generation clusters. couple strategies take : use cellular columns clustering looks possible cell types/states, use stably expressed markers cluster stable phenotypes, can examined changes dynamic markers. guidance, see tutorials page. Specify sample, group, batch columns. Additionally, want specify downsample targets dimensionality reduction. influences many cells shown tSNE/UMAP plot, specifying number cells per group downsample . Check number cells (rows) group: can specify number downsample group. must lower total number cells group. example want 2000 cells ‘mock’ 20,000 cells ‘WNV’, reflect number cells present group. First, check order groups appear dataset. Now can specify targets (order unique(cell.dat[[group.col]]) ).","code":"### Add metadata to data.table  meta.dat #>              Filename     Sample  Group  Batch Cells per sample #>                <char>     <char> <char> <char>            <num> #>  1:   CNS_Mock_01.csv 01_Mock_01   Mock      A           420000 #>  2:   CNS_Mock_02.csv 02_Mock_02   Mock      B           240000 #>  3:   CNS_Mock_03.csv 03_Mock_03   Mock      B           256000 #>  4:   CNS_Mock_04.csv 04_Mock_04   Mock      A           252000 #>  5:   CNS_Mock_05.csv 05_Mock_05   Mock      A           345000 #>  6:   CNS_Mock_06.csv 06_Mock_06   Mock      B           702000 #>  7: CNS_WNV_D7_01.csv  07_WNV_01    WNV      A          5070000 #>  8: CNS_WNV_D7_02.csv  08_WNV_02    WNV      B          2940000 #>  9: CNS_WNV_D7_03.csv  09_WNV_03    WNV      A          2120000 #> 10: CNS_WNV_D7_04.csv  10_WNV_04    WNV      A          4320000 #> 11: CNS_WNV_D7_05.csv  11_WNV_05    WNV      B          4080000 #> 12: CNS_WNV_D7_06.csv  12_WNV_06    WNV      A          1830000 sample.info <- meta.dat[,c(1:4)] sample.info #>              Filename     Sample  Group  Batch #>                <char>     <char> <char> <char> #>  1:   CNS_Mock_01.csv 01_Mock_01   Mock      A #>  2:   CNS_Mock_02.csv 02_Mock_02   Mock      B #>  3:   CNS_Mock_03.csv 03_Mock_03   Mock      B #>  4:   CNS_Mock_04.csv 04_Mock_04   Mock      A #>  5:   CNS_Mock_05.csv 05_Mock_05   Mock      A #>  6:   CNS_Mock_06.csv 06_Mock_06   Mock      B #>  7: CNS_WNV_D7_01.csv  07_WNV_01    WNV      A #>  8: CNS_WNV_D7_02.csv  08_WNV_02    WNV      B #>  9: CNS_WNV_D7_03.csv  09_WNV_03    WNV      A #> 10: CNS_WNV_D7_04.csv  10_WNV_04    WNV      A #> 11: CNS_WNV_D7_05.csv  11_WNV_05    WNV      B #> 12: CNS_WNV_D7_06.csv  12_WNV_06    WNV      A meta.dat #>              Filename     Sample  Group  Batch Cells per sample #>                <char>     <char> <char> <char>            <num> #>  1:   CNS_Mock_01.csv 01_Mock_01   Mock      A           420000 #>  2:   CNS_Mock_02.csv 02_Mock_02   Mock      B           240000 #>  3:   CNS_Mock_03.csv 03_Mock_03   Mock      B           256000 #>  4:   CNS_Mock_04.csv 04_Mock_04   Mock      A           252000 #>  5:   CNS_Mock_05.csv 05_Mock_05   Mock      A           345000 #>  6:   CNS_Mock_06.csv 06_Mock_06   Mock      B           702000 #>  7: CNS_WNV_D7_01.csv  07_WNV_01    WNV      A          5070000 #>  8: CNS_WNV_D7_02.csv  08_WNV_02    WNV      B          2940000 #>  9: CNS_WNV_D7_03.csv  09_WNV_03    WNV      A          2120000 #> 10: CNS_WNV_D7_04.csv  10_WNV_04    WNV      A          4320000 #> 11: CNS_WNV_D7_05.csv  11_WNV_05    WNV      B          4080000 #> 12: CNS_WNV_D7_06.csv  12_WNV_06    WNV      A          1830000 counts <- meta.dat[,c(2,5)] counts #>         Sample Cells per sample #>         <char>            <num> #>  1: 01_Mock_01           420000 #>  2: 02_Mock_02           240000 #>  3: 03_Mock_03           256000 #>  4: 04_Mock_04           252000 #>  5: 05_Mock_05           345000 #>  6: 06_Mock_06           702000 #>  7:  07_WNV_01          5070000 #>  8:  08_WNV_02          2940000 #>  9:  09_WNV_03          2120000 #> 10:  10_WNV_04          4320000 #> 11:  11_WNV_05          4080000 #> 12:  12_WNV_06          1830000 cell.dat <- do.add.cols(cell.dat, \"FileName\", sample.info, \"Filename\", rmv.ext = TRUE) cell.dat #>              NK11        CD3     CD45       Ly6G    CD11b      B220      CD8a #>             <num>      <num>    <num>      <num>    <num>     <num>     <num> #>      1:   42.3719  40.098700  6885.08  -344.7830 14787.30  -40.2399   83.7175 #>      2:   42.9586 119.014000  1780.29  -429.6650  5665.73   86.6673   34.7219 #>      3:   59.2366 206.238000 10248.30 -1603.8400 19894.30  427.8310  285.8800 #>      4:  364.9480  -0.233878  3740.04  -815.9800  9509.43  182.4200  333.6050 #>      5:  440.2470  40.035200  9191.38    40.5055  5745.82 -211.6940  149.2200 #>     ---                                                                       #> 169000:  910.8890  72.856100 31466.20  -316.5570 28467.80   -7.7972 -271.8040 #> 169001:  -10.2642  64.188700 45188.00  -540.5140 22734.00  202.4110 -936.4920 #> 169002: -184.2910  -9.445650 11842.60   -97.9383 17237.00  123.4760 -219.9320 #> 169003:  248.3860 229.986000 32288.20  -681.1630 19255.80 -656.0540 -201.5880 #> 169004:  738.9810  95.470300 46185.10 -1004.6000 22957.80 -661.6280   72.3356 #>               Ly6C       CD4      FileName FileNo  NK11_asinh    CD3_asinh #>              <num>     <num>        <fctr>  <int>       <num>        <num> #>      1:   958.7000  711.0720   CNS_Mock_01      1  0.08464269  0.080111681 #>      2:   448.2590  307.2720   CNS_Mock_01      1  0.08581185  0.235835773 #>      3:  1008.8300  707.0940   CNS_Mock_01      1  0.11819779  0.401593928 #>      4:   440.0710  249.7840   CNS_Mock_01      1  0.67698633 -0.000467756 #>      5:    87.4815  867.5700   CNS_Mock_01      1  0.79429776  0.079985087 #>     ---                                                                    #> 169000: 12023.7000 1103.0500 CNS_WNV_D7_06     12  1.36096843  0.145201437 #> 169001:  4188.3300  315.9400 CNS_WNV_D7_06     12 -0.02052696  0.128027364 #> 169002:  8923.4000 -453.4640 CNS_WNV_D7_06     12 -0.36070893 -0.018890177 #> 169003: 10365.7000   61.6765 CNS_WNV_D7_06     12  0.47832275  0.445126321 #> 169004:  9704.4700  -31.8532 CNS_WNV_D7_06     12  1.18247624  0.189799003 #>         CD45_asinh  Ly6G_asinh CD11b_asinh  B220_asinh  CD8a_asinh Ly6C_asinh #>              <num>       <num>       <num>       <num>       <num>      <num> #>      1:   3.316967 -0.64409775    4.080349 -0.08039317  0.16666238  1.4060734 #>      2:   1.982231 -0.77832998    3.122671  0.17247816  0.06938811  0.8062765 #>      3:   3.714001 -1.88215184    4.376885  0.77554551  0.54445897  1.4515055 #>      4:   2.709829 -1.26580137    3.639269  0.35719570  0.62559714  0.7940335 #>      5:   3.605299  0.08092265    3.136655 -0.41166199  0.29417852  0.1740824 #>     ---                                                                       #> 169000:   4.835271 -0.59701179    4.735145 -0.01559377 -0.51987213  3.8736061 #> 169001:   5.197157 -0.93752450    4.510277  0.39450870 -1.38534526  2.8221404 #> 169002:   3.858443 -0.19464519    4.233563  0.24450841 -0.42678897  3.5757554 #> 169003:   4.861056 -1.11588765    4.344275 -1.08581190 -0.39298254  3.7253778 #> 169004:   5.218981 -1.44774229    4.520071 -1.09255123  0.14417124  3.6595440 #>           CD4_asinh     Sample  Group  Batch #>               <num>     <char> <char> <char> #>      1:  1.15078593 01_Mock_01   Mock      A #>      2:  0.58125620 01_Mock_01   Mock      A #>      3:  1.14620108 01_Mock_01   Mock      A #>      4:  0.48082540 01_Mock_01   Mock      A #>      5:  1.31850146 01_Mock_01   Mock      A #>     ---                                      #> 169000:  1.53218180  12_WNV_06    WNV      A #> 169001:  0.59596889  12_WNV_06    WNV      A #> 169002: -0.81400762  12_WNV_06    WNV      A #> 169003:  0.12304230  12_WNV_06    WNV      A #> 169004: -0.06366339  12_WNV_06    WNV      A ### Columns  as.matrix(names(cell.dat)) #>       [,1]          #>  [1,] \"NK11\"        #>  [2,] \"CD3\"         #>  [3,] \"CD45\"        #>  [4,] \"Ly6G\"        #>  [5,] \"CD11b\"       #>  [6,] \"B220\"        #>  [7,] \"CD8a\"        #>  [8,] \"Ly6C\"        #>  [9,] \"CD4\"         #> [10,] \"FileName\"    #> [11,] \"FileNo\"      #> [12,] \"NK11_asinh\"  #> [13,] \"CD3_asinh\"   #> [14,] \"CD45_asinh\"  #> [15,] \"Ly6G_asinh\"  #> [16,] \"CD11b_asinh\" #> [17,] \"B220_asinh\"  #> [18,] \"CD8a_asinh\"  #> [19,] \"Ly6C_asinh\"  #> [20,] \"CD4_asinh\"   #> [21,] \"Sample\"      #> [22,] \"Group\"       #> [23,] \"Batch\" cellular.cols <- names(cell.dat)[c(12:20)] as.matrix(cellular.cols) #>       [,1]          #>  [1,] \"NK11_asinh\"  #>  [2,] \"CD3_asinh\"   #>  [3,] \"CD45_asinh\"  #>  [4,] \"Ly6G_asinh\"  #>  [5,] \"CD11b_asinh\" #>  [6,] \"B220_asinh\"  #>  [7,] \"CD8a_asinh\"  #>  [8,] \"Ly6C_asinh\"  #>  [9,] \"CD4_asinh\" as.matrix(names(cell.dat)) #>       [,1]          #>  [1,] \"NK11\"        #>  [2,] \"CD3\"         #>  [3,] \"CD45\"        #>  [4,] \"Ly6G\"        #>  [5,] \"CD11b\"       #>  [6,] \"B220\"        #>  [7,] \"CD8a\"        #>  [8,] \"Ly6C\"        #>  [9,] \"CD4\"         #> [10,] \"FileName\"    #> [11,] \"FileNo\"      #> [12,] \"NK11_asinh\"  #> [13,] \"CD3_asinh\"   #> [14,] \"CD45_asinh\"  #> [15,] \"Ly6G_asinh\"  #> [16,] \"CD11b_asinh\" #> [17,] \"B220_asinh\"  #> [18,] \"CD8a_asinh\"  #> [19,] \"Ly6C_asinh\"  #> [20,] \"CD4_asinh\"   #> [21,] \"Sample\"      #> [22,] \"Group\"       #> [23,] \"Batch\" cluster.cols <- names(cell.dat)[c(12:20)] as.matrix(cluster.cols) #>       [,1]          #>  [1,] \"NK11_asinh\"  #>  [2,] \"CD3_asinh\"   #>  [3,] \"CD45_asinh\"  #>  [4,] \"Ly6G_asinh\"  #>  [5,] \"CD11b_asinh\" #>  [6,] \"B220_asinh\"  #>  [7,] \"CD8a_asinh\"  #>  [8,] \"Ly6C_asinh\"  #>  [9,] \"CD4_asinh\" exp.name <- \"CNS experiment\" sample.col <- \"Sample\" group.col <- \"Group\" batch.col <- \"Batch\" ### Subsample targets per group  data.frame(table(cell.dat[[group.col]])) # Check number of cells per sample. #>   Var1   Freq #> 1 Mock  66992 #> 2  WNV 102012 unique(cell.dat[[group.col]]) #> [1] \"Mock\" \"WNV\" sub.targets <- c(2000, 20000) # target subsample numbers from each group sub.targets #> [1]  2000 20000"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"clustering-and-dimensionality-reduction","dir":"Articles","previous_headings":"","what":"5. Clustering and Dimensionality reduction","title":"Spectre - simple discovery workflow","text":"Create output directory store clustering dimensionality reduction plots. can run clustering using run.flowsom function. case can define number desired metaclusters manually, meta.k argument (case chosen 8). can increased decreased required. Typically, overclustering preferred, multiple clusters represent single cellular population can always annotated . Subsequently, can write clustered dataset disk. can run dimensionality reduction subset data, allow us visualise data resulting clusters. case used run.umap, though options available, including run.fitsne run.tsne. , subsampled dataset DR coordinates saved disk. can visualise DR data asses clusters represent cellular populations.   can also generate multi plots compare experimental groups batches.  can also produce expression heatmaps help guide interpretation cluster identities.","code":"plot.path <- file.path(OutputDirectory, \"Output 2 - clustering\") dir.create(plot.path) ### Clustering  cell.dat <- run.flowsom(cell.dat, cluster.cols, meta.k = 8) cell.dat ### Dimensionality reduction  cell.sub <- do.subsample(cell.dat, sub.targets, group.col) cell.sub #>             NK11       CD3     CD45      Ly6G    CD11b      B220      CD8a #>            <num>     <num>    <num>     <num>    <num>     <num>     <num> #>     1:  106.0150 235.13900 13574.70  -179.318 31385.80 -169.4210 -394.6730 #>     2:  132.7940  16.52790  9533.69  -673.468 22061.20  184.8820  282.5120 #>     3:  236.6740 143.33000  7805.94  -605.170 11658.20  658.9580  107.7280 #>     4:   14.8980 -10.63350  3628.48   468.071 12264.60 -178.1110 -194.3480 #>     5:  194.5450   3.62867  3192.66  -515.083 11939.20  -33.5803   42.3089 #>    ---                                                                     #> 21996:  -16.4986  11.00010 24706.30  -263.460  9151.59 -144.2120 -499.9370 #> 21997:  119.8740  92.33010 43645.10 -1130.550 38278.10  -42.0887 -445.5530 #> 21998: 2884.3600  88.01560 88998.60 -4851.610  4889.69 4999.7900  -58.7703 #> 21999:  560.6400 151.51900 55440.80 -2633.550 23937.20  -95.7631  656.6650 #> 22000:  118.9280 331.26200 52654.70 -3161.200 25113.80 -938.5550  155.8260 #>             Ly6C       CD4      FileName FileNo  NK11_asinh    CD3_asinh #>            <num>     <num>        <fctr>  <int>       <num>        <num> #>     1:   380.647  509.4590   CNS_Mock_05      5  0.21047261  0.454470942 #>     2:   608.245 1095.4700   CNS_Mock_04      4  0.26256084  0.033049783 #>     3:   805.445 1937.4200   CNS_Mock_04      4  0.45724742  0.282872452 #>     4:   126.416  227.9000   CNS_Mock_04      4  0.02979159 -0.021265397 #>     5:   666.571  358.8580   CNS_Mock_02      2  0.37988669  0.007257276 #>    ---                                                                   #> 21996: 22334.600   59.6839 CNS_WNV_D7_04     10 -0.03299121  0.021998426 #> 21997:  4490.860  727.2510 CNS_WNV_D7_06     12  0.23750870  0.183626518 #> 21998:  1175.860  273.2380 CNS_WNV_D7_01      7  2.45302657  0.175134535 #> 21999: 13667.400  334.3160 CNS_WNV_D7_04     10  0.96458591  0.298581704 #> 22000: 23457.800 2331.7400 CNS_WNV_D7_01      7  0.23566844  0.621694916 #>        CD45_asinh Ly6G_asinh CD11b_asinh  B220_asinh  CD8a_asinh Ly6C_asinh #>             <num>      <num>       <num>       <num>       <num>      <num> #>     1:   3.994841 -0.3513617    4.832713 -0.33267180 -0.72432725  0.7021579 #>     2:   3.641813 -1.1067473    4.480243  0.36181778  0.53860285  1.0264871 #>     3:   3.442203 -1.0225758    3.842764  1.08932754  0.21382293  1.2547409 #>     4:   2.679822  0.8354908    3.893427 -0.34908852 -0.37951948  0.2502130 #>     5:   2.553225 -0.9025441    3.866560 -0.06711021  0.08451714  1.0984975 #>    ---                                                                      #> 21996:   4.593455 -0.5051593    3.600967 -0.28456776 -0.88128449  4.4925567 #> 21997:   5.162418 -1.5546568    5.031215 -0.08407830 -0.80224144  2.8914233 #> 21998:   5.874923 -2.9682497    2.976027  2.99818116 -0.11727162  1.5907079 #> 21999:   5.401630 -2.3635192    4.561837 -0.19037418  1.08655240  4.0016422 #> 22000:   5.350072 -2.5434425    4.609811 -1.38728687  0.30681557  4.5416110 #>        CD4_asinh     Sample  Group  Batch FlowSOM_cluster FlowSOM_metacluster #>            <num>     <char> <char> <char>          <fctr>              <fctr> #>     1: 0.8946876 05_Mock_05   Mock      A             190                   7 #>     2: 1.5259050 04_Mock_04   Mock      A             117                   7 #>     3: 2.0639011 04_Mock_04   Mock      A              60                   7 #>     4: 0.4413331 04_Mock_04   Mock      A             184                   7 #>     5: 0.6671197 02_Mock_02   Mock      B             147                   7 #>    ---                                                                        #> 21996: 0.1190861  10_WNV_04    WNV      A             108                   2 #> 21997: 1.1692576  12_WNV_06    WNV      A              50                   2 #> 21998: 0.5223904  07_WNV_01    WNV      A              15                   1 #> 21999: 0.6267796  10_WNV_04    WNV      A              37                   2 #> 22000: 2.2442111  07_WNV_01    WNV      A              11                   2 cell.sub <- run.umap(cell.sub, cluster.cols) cell.sub ### DR plots  make.colour.plot(     cell.sub,      \"UMAP_X\",      \"UMAP_Y\",      \"FlowSOM_metacluster\",      col.type = 'factor',      add.label = TRUE,     path = plot.path, ) make.multi.plot(cell.sub, \"UMAP_X\", \"UMAP_Y\", cellular.cols, path = plot.path) make.multi.plot(     cell.sub, \"UMAP_X\", \"UMAP_Y\", \"FlowSOM_metacluster\",      group.col, col.type = 'factor', path = plot.path ) ### Expression heatmap  exp <- do.aggregate(cell.dat, cellular.cols, by = \"FlowSOM_metacluster\") make.pheatmap(exp, \"FlowSOM_metacluster\", cellular.cols, path = plot.path)"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"annotate-clusters","dir":"Articles","previous_headings":"","what":"6. Annotate clusters","title":"Spectre - simple discovery workflow","text":"Review cluster labels marker expression patterns, can annotate clusters. annotation optional, subsequent steps can performed ‘clusters’ instead ‘populations’. can create list population names, specify clusters make population (e.g. CD4 T cells contained within cluster ‘3’). annotation list created, can switch list table format annotate data. Using .add.cols function, can add population names corresponding clusters. Subsequently, can visualise population labels UMAP plot.   can also generate expression heatmap summarise expression levels marker populations.  Save annotated data disk, full dataset (cell.dat) downsampled dataset (cell.sub). Save data FCS files use FlowJo software.","code":"plot.path <- file.path(OutputDirectory, \"Output 3 - annotation\") dir.create(plot.path) ### Annotate  annots <- list(\"CD4 T cells\" = c(3),                 \"CD8 T cells\" = c(2),                 \"NK cells\" = c(1),                 \"Neutrophils\" = c(8),                 \"Infil Macrophages\" = c(4),                 \"Microglia\" = c(5,6,7) ) annots <- do.list.switch(annots) names(annots) <- c(\"Values\", \"Population\") setorderv(annots, 'Values') annots #>    Values        Population #>     <num>            <char> #> 1:      1          NK cells #> 2:      2       CD8 T cells #> 3:      3       CD4 T cells #> 4:      4 Infil Macrophages #> 5:      5         Microglia #> 6:      6         Microglia #> 7:      7         Microglia #> 8:      8       Neutrophils ### Add annotations  cell.dat <- do.add.cols(cell.dat, \"FlowSOM_metacluster\", annots, \"Values\") cell.dat #>              NK11        CD3     CD45       Ly6G    CD11b      B220      CD8a #>             <num>      <num>    <num>      <num>    <num>     <num>     <num> #>      1:   42.3719  40.098700  6885.08  -344.7830 14787.30  -40.2399   83.7175 #>      2:   42.9586 119.014000  1780.29  -429.6650  5665.73   86.6673   34.7219 #>      3:   59.2366 206.238000 10248.30 -1603.8400 19894.30  427.8310  285.8800 #>      4:  364.9480  -0.233878  3740.04  -815.9800  9509.43  182.4200  333.6050 #>      5:  440.2470  40.035200  9191.38    40.5055  5745.82 -211.6940  149.2200 #>     ---                                                                       #> 169000:  910.8890  72.856100 31466.20  -316.5570 28467.80   -7.7972 -271.8040 #> 169001:  -10.2642  64.188700 45188.00  -540.5140 22734.00  202.4110 -936.4920 #> 169002: -184.2910  -9.445650 11842.60   -97.9383 17237.00  123.4760 -219.9320 #> 169003:  248.3860 229.986000 32288.20  -681.1630 19255.80 -656.0540 -201.5880 #> 169004:  738.9810  95.470300 46185.10 -1004.6000 22957.80 -661.6280   72.3356 #>               Ly6C       CD4      FileName FileNo  NK11_asinh    CD3_asinh #>              <num>     <num>        <fctr>  <int>       <num>        <num> #>      1:   958.7000  711.0720   CNS_Mock_01      1  0.08464269  0.080111681 #>      2:   448.2590  307.2720   CNS_Mock_01      1  0.08581185  0.235835773 #>      3:  1008.8300  707.0940   CNS_Mock_01      1  0.11819779  0.401593928 #>      4:   440.0710  249.7840   CNS_Mock_01      1  0.67698633 -0.000467756 #>      5:    87.4815  867.5700   CNS_Mock_01      1  0.79429776  0.079985087 #>     ---                                                                    #> 169000: 12023.7000 1103.0500 CNS_WNV_D7_06     12  1.36096843  0.145201437 #> 169001:  4188.3300  315.9400 CNS_WNV_D7_06     12 -0.02052696  0.128027364 #> 169002:  8923.4000 -453.4640 CNS_WNV_D7_06     12 -0.36070893 -0.018890177 #> 169003: 10365.7000   61.6765 CNS_WNV_D7_06     12  0.47832275  0.445126321 #> 169004:  9704.4700  -31.8532 CNS_WNV_D7_06     12  1.18247624  0.189799003 #>         CD45_asinh  Ly6G_asinh CD11b_asinh  B220_asinh  CD8a_asinh Ly6C_asinh #>              <num>       <num>       <num>       <num>       <num>      <num> #>      1:   3.316967 -0.64409775    4.080349 -0.08039317  0.16666238  1.4060734 #>      2:   1.982231 -0.77832998    3.122671  0.17247816  0.06938811  0.8062765 #>      3:   3.714001 -1.88215184    4.376885  0.77554551  0.54445897  1.4515055 #>      4:   2.709829 -1.26580137    3.639269  0.35719570  0.62559714  0.7940335 #>      5:   3.605299  0.08092265    3.136655 -0.41166199  0.29417852  0.1740824 #>     ---                                                                       #> 169000:   4.835271 -0.59701179    4.735145 -0.01559377 -0.51987213  3.8736061 #> 169001:   5.197157 -0.93752450    4.510277  0.39450870 -1.38534526  2.8221404 #> 169002:   3.858443 -0.19464519    4.233563  0.24450841 -0.42678897  3.5757554 #> 169003:   4.861056 -1.11588765    4.344275 -1.08581190 -0.39298254  3.7253778 #> 169004:   5.218981 -1.44774229    4.520071 -1.09255123  0.14417124  3.6595440 #>           CD4_asinh     Sample  Group  Batch FlowSOM_cluster #>               <num>     <char> <char> <char>          <fctr> #>      1:  1.15078593 01_Mock_01   Mock      A             132 #>      2:  0.58125620 01_Mock_01   Mock      A              99 #>      3:  1.14620108 01_Mock_01   Mock      A              75 #>      4:  0.48082540 01_Mock_01   Mock      A             114 #>      5:  1.31850146 01_Mock_01   Mock      A             159 #>     ---                                                      #> 169000:  1.53218180  12_WNV_06    WNV      A             138 #> 169001:  0.59596889  12_WNV_06    WNV      A              92 #> 169002: -0.81400762  12_WNV_06    WNV      A             164 #> 169003:  0.12304230  12_WNV_06    WNV      A             107 #> 169004: -0.06366339  12_WNV_06    WNV      A              51 #>         FlowSOM_metacluster  Population #>                      <fctr>      <char> #>      1:                   7   Microglia #>      2:                   7   Microglia #>      3:                   7   Microglia #>      4:                   7   Microglia #>      5:                   7   Microglia #>     ---                                 #> 169000:                   2 CD8 T cells #> 169001:                   2 CD8 T cells #> 169002:                   2 CD8 T cells #> 169003:                   2 CD8 T cells #> 169004:                   2 CD8 T cells  cell.sub <- do.add.cols(cell.sub, \"FlowSOM_metacluster\", annots, \"Values\") cell.sub #>             NK11       CD3     CD45      Ly6G    CD11b      B220      CD8a #>            <num>     <num>    <num>     <num>    <num>     <num>     <num> #>     1:  106.0150 235.13900 13574.70  -179.318 31385.80 -169.4210 -394.6730 #>     2:  132.7940  16.52790  9533.69  -673.468 22061.20  184.8820  282.5120 #>     3:  236.6740 143.33000  7805.94  -605.170 11658.20  658.9580  107.7280 #>     4:   14.8980 -10.63350  3628.48   468.071 12264.60 -178.1110 -194.3480 #>     5:  194.5450   3.62867  3192.66  -515.083 11939.20  -33.5803   42.3089 #>    ---                                                                     #> 21996:  -16.4986  11.00010 24706.30  -263.460  9151.59 -144.2120 -499.9370 #> 21997:  119.8740  92.33010 43645.10 -1130.550 38278.10  -42.0887 -445.5530 #> 21998: 2884.3600  88.01560 88998.60 -4851.610  4889.69 4999.7900  -58.7703 #> 21999:  560.6400 151.51900 55440.80 -2633.550 23937.20  -95.7631  656.6650 #> 22000:  118.9280 331.26200 52654.70 -3161.200 25113.80 -938.5550  155.8260 #>             Ly6C       CD4      FileName FileNo  NK11_asinh    CD3_asinh #>            <num>     <num>        <fctr>  <int>       <num>        <num> #>     1:   380.647  509.4590   CNS_Mock_05      5  0.21047261  0.454470942 #>     2:   608.245 1095.4700   CNS_Mock_04      4  0.26256084  0.033049783 #>     3:   805.445 1937.4200   CNS_Mock_04      4  0.45724742  0.282872452 #>     4:   126.416  227.9000   CNS_Mock_04      4  0.02979159 -0.021265397 #>     5:   666.571  358.8580   CNS_Mock_02      2  0.37988669  0.007257276 #>    ---                                                                   #> 21996: 22334.600   59.6839 CNS_WNV_D7_04     10 -0.03299121  0.021998426 #> 21997:  4490.860  727.2510 CNS_WNV_D7_06     12  0.23750870  0.183626518 #> 21998:  1175.860  273.2380 CNS_WNV_D7_01      7  2.45302657  0.175134535 #> 21999: 13667.400  334.3160 CNS_WNV_D7_04     10  0.96458591  0.298581704 #> 22000: 23457.800 2331.7400 CNS_WNV_D7_01      7  0.23566844  0.621694916 #>        CD45_asinh Ly6G_asinh CD11b_asinh  B220_asinh  CD8a_asinh Ly6C_asinh #>             <num>      <num>       <num>       <num>       <num>      <num> #>     1:   3.994841 -0.3513617    4.832713 -0.33267180 -0.72432725  0.7021579 #>     2:   3.641813 -1.1067473    4.480243  0.36181778  0.53860285  1.0264871 #>     3:   3.442203 -1.0225758    3.842764  1.08932754  0.21382293  1.2547409 #>     4:   2.679822  0.8354908    3.893427 -0.34908852 -0.37951948  0.2502130 #>     5:   2.553225 -0.9025441    3.866560 -0.06711021  0.08451714  1.0984975 #>    ---                                                                      #> 21996:   4.593455 -0.5051593    3.600967 -0.28456776 -0.88128449  4.4925567 #> 21997:   5.162418 -1.5546568    5.031215 -0.08407830 -0.80224144  2.8914233 #> 21998:   5.874923 -2.9682497    2.976027  2.99818116 -0.11727162  1.5907079 #> 21999:   5.401630 -2.3635192    4.561837 -0.19037418  1.08655240  4.0016422 #> 22000:   5.350072 -2.5434425    4.609811 -1.38728687  0.30681557  4.5416110 #>        CD4_asinh     Sample  Group  Batch FlowSOM_cluster FlowSOM_metacluster #>            <num>     <char> <char> <char>          <fctr>              <fctr> #>     1: 0.8946876 05_Mock_05   Mock      A             190                   7 #>     2: 1.5259050 04_Mock_04   Mock      A             117                   7 #>     3: 2.0639011 04_Mock_04   Mock      A              60                   7 #>     4: 0.4413331 04_Mock_04   Mock      A             184                   7 #>     5: 0.6671197 02_Mock_02   Mock      B             147                   7 #>    ---                                                                        #> 21996: 0.1190861  10_WNV_04    WNV      A             108                   2 #> 21997: 1.1692576  12_WNV_06    WNV      A              50                   2 #> 21998: 0.5223904  07_WNV_01    WNV      A              15                   1 #> 21999: 0.6267796  10_WNV_04    WNV      A              37                   2 #> 22000: 2.2442111  07_WNV_01    WNV      A              11                   2 #>            UMAP_X     UMAP_Y  Population #>             <num>      <num>      <char> #>     1: -3.1579463 -1.8178011   Microglia #>     2: -3.4301853 -0.7046464   Microglia #>     3: -3.5628729 -0.9590427   Microglia #>     4: -4.1040456 -3.1769343   Microglia #>     5: -4.4687803 -1.7181371   Microglia #>    ---                                   #> 21996:  1.7882223 -1.0667364 CD8 T cells #> 21997:  1.7846371  1.1294917 CD8 T cells #> 21998: -3.3775246 -8.0603996    NK cells #> 21999:  0.3071737  3.3264553 CD8 T cells #> 22000:  1.1479282  5.0892695 CD8 T cells make.colour.plot(cell.sub, \"UMAP_X\", \"UMAP_Y\", \"Population\", col.type = 'factor', add.label = TRUE, path = plot.path) make.multi.plot(cell.sub, \"UMAP_X\", \"UMAP_Y\", \"Population\", group.col, col.type = 'factor', path = plot.path) ### Expression heatmap  rm(exp) exp <- do.aggregate(cell.dat, cellular.cols, by = \"Population\") make.pheatmap(exp, \"Population\", cellular.cols, path = plot.path) ### Write data outdir <- file.path(OutputDirectory, \"Output 3 - annotation\") dir.create(outdir, showWarnings = FALSE)  fwrite(cell.dat, file.path(outdir, \"Annotated.data.csv\")) fwrite(cell.sub, file.path(outdir, \"Annotated.data.DR.csv\")) ### Write FCS files  outdir <- file.path(OutputDirectory, \"Output 3 - annotation\", \"FCS files - all\") dir.create(outdir, showWarnings = FALSE)  write.files(cell.dat,             file.prefix = file.path(outdir, exp.name),             divide.by = sample.col,             write.csv = FALSE,             write.fcs = TRUE) outdir <- file.path(OutputDirectory, \"Output 3 - annotation\", \"FCS files - DR\") dir.create(outdir, showWarnings = FALSE)  write.files(cell.sub,             file.prefix = file.path(outdir, paste0('DR-', exp.name)),             divide.by = sample.col,             write.csv = FALSE,             write.fcs = TRUE)"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"summary-data-and-stats","dir":"Articles","previous_headings":"","what":"7. Summary data and stats","title":"Spectre - simple discovery workflow","text":"can create ‘summary’ data experiment. involves calculating percentage population sample, along corresponding cell counts information available. addition, calculate MFI selected markers population sample. First, set working directory, select columns measure MFI . case, CD11b_asinh Ly6C_asinh. can also specify columns wish measure MFI levels .","code":"outdir <- file.path(OutputDirectory, \"Output 4 - summary data\") dir.create(outdir) ### Setup  variance.test <- 'kruskal.test' pairwise.test <- \"wilcox.test\"  as.matrix(unique(cell.dat[[group.col]])) #>      [,1]   #> [1,] \"Mock\" #> [2,] \"WNV\"  comparisons <- list(c(\"Mock\", \"WNV\")) comparisons #> [[1]] #> [1] \"Mock\" \"WNV\"  grp.order <- c(\"Mock\", \"WNV\") grp.order #> [1] \"Mock\" \"WNV\" ### Select columns to measure MFI  as.matrix(cellular.cols) #>       [,1]          #>  [1,] \"NK11_asinh\"  #>  [2,] \"CD3_asinh\"   #>  [3,] \"CD45_asinh\"  #>  [4,] \"Ly6G_asinh\"  #>  [5,] \"CD11b_asinh\" #>  [6,] \"B220_asinh\"  #>  [7,] \"CD8a_asinh\"  #>  [8,] \"Ly6C_asinh\"  #>  [9,] \"CD4_asinh\" dyn.cols <- cellular.cols[c(5,8)] dyn.cols #> [1] \"CD11b_asinh\" \"Ly6C_asinh\""},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"create-summary-data","dir":"Articles","previous_headings":"7. Summary data and stats","what":"Create summary data","title":"Spectre - simple discovery workflow","text":"Use new create.sumtable function generate summary data – data.table samples (rows) vs measurements (columns). summary data generated, can review select columns plot. case, column names (.e. name summary measure) structured ‘MEASURE TYPE – POPULATION’. provides useful structure, can use regular expression searches split name just MEASURE TYPE POPULATION segment. Specify columns want plot. Reorder data sample appear specify group order.","code":"### Create summary tables  sum.dat <- create.sumtable(dat = cell.dat,                              sample.col = sample.col,                             pop.col = \"Population\",                             use.cols = dyn.cols,                              annot.cols = c(group.col, batch.col),                              counts = counts) ### Review summary data  sum.dat #>         Sample  Group  Batch Cells per sample -- CD4 T cells #>         <fctr> <char> <char>                           <num> #>  1: 01_Mock_01   Mock      A                       2789.5743 #>  2: 02_Mock_02   Mock      B                       1183.2631 #>  3: 03_Mock_03   Mock      B                       1257.8970 #>  4: 04_Mock_04   Mock      A                        487.9136 #>  5: 05_Mock_05   Mock      A                        568.7855 #>  6: 06_Mock_06   Mock      B                       2439.9918 #>  7:  07_WNV_01    WNV      A                     265221.7270 #>  8:  08_WNV_02    WNV      B                      58680.4657 #>  9:  09_WNV_03    WNV      A                      53930.8707 #> 10:  10_WNV_04    WNV      A                     109695.8730 #> 11:  11_WNV_05    WNV      B                     125018.2092 #> 12:  12_WNV_06    WNV      A                      61022.7454 #>     Cells per sample -- CD8 T cells Cells per sample -- Infil Macrophages #>                               <num>                                 <num> #>  1:                       11750.025                            10608.8357 #>  2:                        7084.009                             2382.0954 #>  3:                        7601.292                             2120.4549 #>  4:                        5426.191                              857.5452 #>  5:                       11691.702                             1579.9597 #>  6:                       46216.316                             8181.1490 #>  7:                     3177576.602                           238106.4067 #>  8:                     2046390.686                            66830.5304 #>  9:                     1480647.540                            72747.0467 #> 10:                     2908075.419                           130878.5243 #> 11:                     2692246.641                           143207.3339 #> 12:                     1229520.588                            68236.2968 #>     Cells per sample -- Microglia Cells per sample -- Neutrophils #>                             <num>                           <num> #>  1:                      380946.0                       11496.427 #>  2:                      220585.1                        6772.624 #>  3:                      234597.8                        7852.871 #>  4:                      238382.8                        5529.688 #>  5:                      317571.9                       10870.123 #>  6:                      587463.9                       52531.589 #>  7:                      634385.5                      119476.880 #>  8:                      366028.5                      144346.701 #>  9:                      255476.0                       83745.234 #> 10:                      486192.3                      348505.049 #> 11:                      493412.0                       73525.053 #> 12:                      245845.6                       35580.355 #>     Cells per sample -- NK cells Exp CD11b_asinh -- CD4 T cells #>                            <num>                          <num> #>  1:                     2409.178                      1.1640880 #>  2:                     1992.864                      1.0717827 #>  3:                     2569.704                      1.1071680 #>  4:                     1315.888                      0.9897486 #>  5:                     2717.531                      0.9672789 #>  6:                     5167.042                      0.9624663 #>  7:                   635232.869                      2.1897904 #>  8:                   257723.157                      2.1366929 #>  9:                   173453.341                      2.1843277 #> 10:                   336652.852                      1.9940074 #> 11:                   552590.732                      2.1698435 #> 12:                   189794.386                      2.1240310 #>     Exp CD11b_asinh -- CD8 T cells Exp CD11b_asinh -- Infil Macrophages #>                              <num>                                <num> #>  1:                       3.707953                            1.2200778 #>  2:                       3.932891                            1.2510496 #>  3:                       4.055855                            1.0506404 #>  4:                       3.980852                            1.0649411 #>  5:                       3.904824                            0.7475088 #>  6:                       3.533980                            0.9208460 #>  7:                       4.554693                            2.3009085 #>  8:                       4.485134                            1.9926056 #>  9:                       4.666380                            2.2236088 #> 10:                       4.425055                            2.0578310 #> 11:                       4.832076                            2.1922020 #> 12:                       4.685090                            2.2536754 #>     Exp CD11b_asinh -- Microglia Exp CD11b_asinh -- Neutrophils #>                            <num>                          <num> #>  1:                     3.703104                       4.424470 #>  2:                     3.684539                       4.319386 #>  3:                     3.726379                       4.491092 #>  4:                     3.785686                       4.261786 #>  5:                     3.747101                       4.369713 #>  6:                     3.722985                       4.529456 #>  7:                     3.652149                       5.626350 #>  8:                     3.584455                       5.782984 #>  9:                     3.803963                       5.638535 #> 10:                     3.681785                       5.818091 #> 11:                     3.663684                       5.417286 #> 12:                     3.795823                       5.384971 #>     Exp CD11b_asinh -- NK cells Exp Ly6C_asinh -- CD4 T cells #>                           <num>                         <num> #>  1:                    1.936982                     1.0181309 #>  2:                    1.834861                     1.3204695 #>  3:                    1.905189                     0.9998138 #>  4:                    1.685278                     0.4985209 #>  5:                    1.584877                     1.3079999 #>  6:                    1.555587                     0.9641838 #>  7:                    2.954674                     3.1288202 #>  8:                    2.972281                     2.5929207 #>  9:                    2.912120                     2.3828927 #> 10:                    2.870294                     2.6614759 #> 11:                    2.831210                     2.7495585 #> 12:                    2.729239                     2.2266242 #>     Exp Ly6C_asinh -- CD8 T cells Exp Ly6C_asinh -- Infil Macrophages #>                             <num>                               <num> #>  1:                      4.292275                            4.270251 #>  2:                      4.319977                            1.232527 #>  3:                      4.385810                            2.381495 #>  4:                      4.119795                            1.268299 #>  5:                      4.223415                            3.996084 #>  6:                      4.668365                            3.350074 #>  7:                      4.680534                            3.241140 #>  8:                      4.220517                            2.663728 #>  9:                      3.966745                            2.529144 #> 10:                      4.367482                            2.649219 #> 11:                      4.186924                            2.915013 #> 12:                      3.890718                            2.400092 #>     Exp Ly6C_asinh -- Microglia Exp Ly6C_asinh -- Neutrophils #>                           <num>                         <num> #>  1:                   0.8916724                      3.963225 #>  2:                   0.8539973                      4.109470 #>  3:                   0.9004572                      4.150608 #>  4:                   0.8547482                      4.026134 #>  5:                   0.8487780                      4.111840 #>  6:                   0.9163431                      4.025573 #>  7:                   1.6985734                      3.239471 #>  8:                   1.5986071                      2.851287 #>  9:                   1.5641569                      2.484206 #> 10:                   1.6370403                      2.976742 #> 11:                   1.4260377                      2.871137 #> 12:                   1.4905523                      2.293279 #>     Exp Ly6C_asinh -- NK cells Percent of sample -- CD4 T cells #>                          <num>                            <num> #>  1:                  0.6460165                        0.6641844 #>  2:                  0.5383660                        0.4930263 #>  3:                  0.4378819                        0.4913660 #>  4:                  0.3142635                        0.1936165 #>  5:                  0.3423965                        0.1648654 #>  6:                  0.4254617                        0.3475772 #>  7:                  1.5854437                        5.2311978 #>  8:                  1.2815850                        1.9959342 #>  9:                  1.0971466                        2.5439090 #> 10:                  1.3549706                        2.5392563 #> 11:                  1.1519772                        3.0641718 #> 12:                  1.0961671                        3.3345763 #>     Percent of sample -- CD8 T cells Percent of sample -- Infil Macrophages #>                                <num>                                  <num> #>  1:                         2.797625                              2.5259133 #>  2:                         2.951670                              0.9925397 #>  3:                         2.969255                              0.8283027 #>  4:                         2.153250                              0.3402957 #>  5:                         3.388899                              0.4579593 #>  6:                         6.583521                              1.1654058 #>  7:                        62.674095                              4.6963788 #>  8:                        69.605125                              2.2731473 #>  9:                        69.841865                              3.4314645 #> 10:                        67.316561                              3.0295955 #> 11:                        65.986437                              3.5099837 #> 12:                        67.186917                              3.7287594 #>     Percent of sample -- Microglia Percent of sample -- Neutrophils #>                              <num>                            <num> #>  1:                       90.70142                         2.737245 #>  2:                       91.91048                         2.821927 #>  3:                       91.63976                         3.067528 #>  4:                       94.59634                         2.194321 #>  5:                       92.04983                         3.150760 #>  6:                       83.68432                         7.483132 #>  7:                       12.51253                         2.356546 #>  8:                       12.44995                         4.909752 #>  9:                       12.05075                         3.950247 #> 10:                       11.25445                         8.067247 #> 11:                       12.09343                         1.802085 #> 12:                       13.43419                         1.944282 #>     Percent of sample -- NK cells #>                             <num> #>  1:                     0.5736138 #>  2:                     0.8303600 #>  3:                     1.0037905 #>  4:                     0.5221779 #>  5:                     0.7876901 #>  6:                     0.7360458 #>  7:                    12.5292479 #>  8:                     8.7660938 #>  9:                     8.1817614 #> 10:                     7.7928901 #> 11:                    13.5438905 #> 12:                    10.3712779 as.matrix(names(sum.dat)) #>       [,1]                                     #>  [1,] \"Sample\"                                 #>  [2,] \"Group\"                                  #>  [3,] \"Batch\"                                  #>  [4,] \"Cells per sample -- CD4 T cells\"        #>  [5,] \"Cells per sample -- CD8 T cells\"        #>  [6,] \"Cells per sample -- Infil Macrophages\"  #>  [7,] \"Cells per sample -- Microglia\"          #>  [8,] \"Cells per sample -- Neutrophils\"        #>  [9,] \"Cells per sample -- NK cells\"           #> [10,] \"Exp CD11b_asinh -- CD4 T cells\"         #> [11,] \"Exp CD11b_asinh -- CD8 T cells\"         #> [12,] \"Exp CD11b_asinh -- Infil Macrophages\"   #> [13,] \"Exp CD11b_asinh -- Microglia\"           #> [14,] \"Exp CD11b_asinh -- Neutrophils\"         #> [15,] \"Exp CD11b_asinh -- NK cells\"            #> [16,] \"Exp Ly6C_asinh -- CD4 T cells\"          #> [17,] \"Exp Ly6C_asinh -- CD8 T cells\"          #> [18,] \"Exp Ly6C_asinh -- Infil Macrophages\"    #> [19,] \"Exp Ly6C_asinh -- Microglia\"            #> [20,] \"Exp Ly6C_asinh -- Neutrophils\"          #> [21,] \"Exp Ly6C_asinh -- NK cells\"             #> [22,] \"Percent of sample -- CD4 T cells\"       #> [23,] \"Percent of sample -- CD8 T cells\"       #> [24,] \"Percent of sample -- Infil Macrophages\" #> [25,] \"Percent of sample -- Microglia\"         #> [26,] \"Percent of sample -- Neutrophils\"       #> [27,] \"Percent of sample -- NK cells\"  annot.cols <- c(group.col, batch.col) plot.cols <- names(sum.dat)[c(4:27)] plot.cols #>  [1] \"Cells per sample -- CD4 T cells\"        #>  [2] \"Cells per sample -- CD8 T cells\"        #>  [3] \"Cells per sample -- Infil Macrophages\"  #>  [4] \"Cells per sample -- Microglia\"          #>  [5] \"Cells per sample -- Neutrophils\"        #>  [6] \"Cells per sample -- NK cells\"           #>  [7] \"Exp CD11b_asinh -- CD4 T cells\"         #>  [8] \"Exp CD11b_asinh -- CD8 T cells\"         #>  [9] \"Exp CD11b_asinh -- Infil Macrophages\"   #> [10] \"Exp CD11b_asinh -- Microglia\"           #> [11] \"Exp CD11b_asinh -- Neutrophils\"         #> [12] \"Exp CD11b_asinh -- NK cells\"            #> [13] \"Exp Ly6C_asinh -- CD4 T cells\"          #> [14] \"Exp Ly6C_asinh -- CD8 T cells\"          #> [15] \"Exp Ly6C_asinh -- Infil Macrophages\"    #> [16] \"Exp Ly6C_asinh -- Microglia\"            #> [17] \"Exp Ly6C_asinh -- Neutrophils\"          #> [18] \"Exp Ly6C_asinh -- NK cells\"             #> [19] \"Percent of sample -- CD4 T cells\"       #> [20] \"Percent of sample -- CD8 T cells\"       #> [21] \"Percent of sample -- Infil Macrophages\" #> [22] \"Percent of sample -- Microglia\"         #> [23] \"Percent of sample -- Neutrophils\"       #> [24] \"Percent of sample -- NK cells\" ### Reorder summary data and SAVE  sum.dat <- do.reorder(sum.dat, group.col, grp.order) sum.dat[,c(1:3)] #>         Sample  Group  Batch #>         <fctr> <fctr> <char> #>  1: 01_Mock_01   Mock      A #>  2: 02_Mock_02   Mock      B #>  3: 03_Mock_03   Mock      B #>  4: 04_Mock_04   Mock      A #>  5: 05_Mock_05   Mock      A #>  6: 06_Mock_06   Mock      B #>  7:  07_WNV_01    WNV      A #>  8:  08_WNV_02    WNV      B #>  9:  09_WNV_03    WNV      A #> 10:  10_WNV_04    WNV      A #> 11:  11_WNV_05    WNV      B #> 12:  12_WNV_06    WNV      A  fwrite(sum.dat, file.path(outdir, 'sum.dat.csv'))"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"graphs","dir":"Articles","previous_headings":"7. Summary data and stats","what":"Graphs","title":"Spectre - simple discovery workflow","text":"can use run.autograph function create violin/scatter plots embedded statistic – one per population/measurement type.","code":"### Autographs  for(i in plot.cols){          measure <- gsub(\"\\\\ --.*\", \"\", i)     measure          pop <- gsub(\"^[^--]*.-- \", \"\", i)     pop          make.autograph(sum.dat,                     x.axis = group.col,                     y.axis = i,                     y.axis.label = measure,                                          grp.order = grp.order,                     my_comparisons = comparisons,                                          Variance_test = variance.test,                     Pairwise_test = pairwise.test,                                          title = pop,                     subtitle = measure,                     filename = paste0(i, '.pdf'),                     path = outdir)  }"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"heatmaps","dir":"Articles","previous_headings":"7. Summary data and stats","what":"Heatmaps","title":"Spectre - simple discovery workflow","text":"can also create global heatmap show z-score population/measurement type sample.","code":"### Create a fold change heatmap  ## Z-score calculation sum.dat.z <- do.zscore(sum.dat, plot.cols)  ## Group  t.first <- match(grp.order, sum.dat.z[[group.col]]) t.first <- t.first -1 t.first #> [1] 0 6  ## Make heatmap make.pheatmap(sum.dat.z,                sample.col = sample.col,                plot.cols = paste0(plot.cols, '_zscore'),                is.fold = TRUE,                plot.title = 'Z-score',               annot.cols = annot.cols,               dendrograms = 'column',               row.sep = t.first,               cutree_cols = 3,               path = outdir)"},{"path":"http://immunedynamics.io/spectre/articles/simple_discovery.html","id":"save-session-info","dir":"Articles","previous_headings":"","what":"8. Save session info","title":"Spectre - simple discovery workflow","text":"final step setup, want record session info R session, save folder ’ll call “Output-info”.","code":"### Session info and metadata outdir <- file.path(OutputDirectory, \"Output - info\") dir.create(outdir)  sink(file = file.path(outdir, \"session_info.txt\"), append=TRUE, split=FALSE, type = c(\"output\", \"message\")) sessionInfo() sink()  write(cellular.cols, file.path(outdir, \"cellular.cols.txt\")) write(cluster.cols, file.path(outdir, \"cluster.cols.txt\"))"},{"path":"http://immunedynamics.io/spectre/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Ashhurst. Author, maintainer. Felix Marsh-Wakefield. Author. Givanna Putri. Author.","code":""},{"path":"http://immunedynamics.io/spectre/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ashhurst T, Marsh-Wakefield F, Putri G (2025). Spectre: High-dimensional cytometry imaging analysis. R package version 1.3.0, https://github.com/ImmuneDynamics/Spectre.","code":"@Manual{,   title = {Spectre: High-dimensional cytometry and imaging analysis},   author = {Thomas Ashhurst and Felix Marsh-Wakefield and Givanna Putri},   year = {2025},   note = {R package version 1.3.0},   url = {https://github.com/ImmuneDynamics/Spectre}, }"},{"path":"http://immunedynamics.io/spectre/index.html","id":"spectre","dir":"","previous_headings":"","what":"High-dimensional cytometry and imaging analysis","title":"High-dimensional cytometry and imaging analysis","text":"computational toolkit R integration, exploration, analysis high-dimensional single-cell cytometry imaging data.  Current version: v1.3.0","code":""},{"path":"http://immunedynamics.io/spectre/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"High-dimensional cytometry and imaging analysis","text":"Spectre R package enables comprehensive end--end integration analysis high-dimensional cytometry data different batches experiments. Spectre streamlines analytical stages raw data pre-processing, batch alignment, data integration, clustering, dimensionality reduction, visualisation population labelling, well quantitative statistical analysis. manage large cytometry datasets, Spectre built data.table framework – simple table-like structure allows fast easy processing large datasets R. Critically, design Spectre allows simple, clear, modular design analysis workflows, can utilised data laboratory scientists. Recently extended functionality Spectre support analysis Imaging Mass Cytometry (IMC) scRNAseq data. information, please see paper: Ashhurst TM, Marsh-Wakefield F, Putri GH et al. (2022). Cytometry . DOI: 10.1002/cyto..24350.","code":""},{"path":"http://immunedynamics.io/spectre/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"High-dimensional cytometry and imaging analysis","text":"provide variety workflows tutorials main page : https://immunedynamics.github.io/spectre","code":""},{"path":"http://immunedynamics.io/spectre/index.html","id":"installation","dir":"","previous_headings":"Getting started","what":"Installation","title":"High-dimensional cytometry and imaging analysis","text":"recommend using Spectre R RStudio. unfamiliar using R RStudio, check basics guide help getting started. R RStudio installed, run following code install Spectre package using package pak. detailed installation instructions alternative installation pathways, see installation guide.","code":"# Installs the package 'pak' if required if (!requireNamespace(\"pak\", quietly = TRUE)) {     install.packages(\"pak\") } # Install the Spectre package pak::pkg_install(\"immunedynamics/Spectre\")"},{"path":"http://immunedynamics.io/spectre/index.html","id":"new-to-r-or-spectre","dir":"","previous_headings":"Getting started","what":"New to R or Spectre?","title":"High-dimensional cytometry and imaging analysis","text":"New users can check basics guides get acquainted using R, RStudio, Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/index.html","id":"workflows-and-protocols","dir":"","previous_headings":"Getting started","what":"Workflows and protocols","title":"High-dimensional cytometry and imaging analysis","text":"ready start analysis, check structured workflows tutorials cytometry spatial analysis browsing Artciles tab top home page.","code":""},{"path":"http://immunedynamics.io/spectre/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"High-dimensional cytometry and imaging analysis","text":"use Spectre work, please consider citing Ashhurst TM, Marsh-Wakefield F, Putri GH et al. (2022). Cytometry . DOI: 10.1002/cyto..24350. continue providing open-source tools Spectre, helps us can demonstrate efforts contributing analysis efforts community. Please also consider citing authors individual packages tools (e.g. CytoNorm, FlowSOM, tSNE, UMAP, etc) critical elements analysis work.","code":""},{"path":"http://immunedynamics.io/spectre/reference/adjust.files.html","id":null,"dir":"Reference","previous_headings":"","what":"adjust.files — adjust.files","title":"adjust.files — adjust.files","text":"adjust.files","code":""},{"path":"http://immunedynamics.io/spectre/reference/adjust.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adjust.files — adjust.files","text":"","code":"adjust.files(dat, colnames.table)"},{"path":"http://immunedynamics.io/spectre/reference/adjust.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adjust.files — adjust.files","text":"dat List data.tables, typically one per 'sample' colnames.table data.table column names. First column contains current names, second column contains new names update .","code":""},{"path":"http://immunedynamics.io/spectre/reference/check.files.html","id":null,"dir":"Reference","previous_headings":"","what":"check.files — check.files","title":"check.files — check.files","text":"check.files","code":""},{"path":"http://immunedynamics.io/spectre/reference/check.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check.files — check.files","text":"","code":"check.files(dat)"},{"path":"http://immunedynamics.io/spectre/reference/check.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check.files — check.files","text":"dat List data.tables, typically one per 'sample'","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.dt.html","id":null,"dir":"Reference","previous_headings":"","what":"create.dt - convert a Seurat or SingleCellExperiment to a data.table — create.dt","title":"create.dt - convert a Seurat or SingleCellExperiment to a data.table — create.dt","text":"function converts Seurat SingleCellExperiment object list containing data.table, vectors gene dimensionality reduction","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create.dt - convert a Seurat or SingleCellExperiment to a data.table — create.dt","text":"","code":"create.dt(dat, from)"},{"path":"http://immunedynamics.io/spectre/reference/create.dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create.dt - convert a Seurat or SingleCellExperiment to a data.table — create.dt","text":"dat DEFAULT. Seurat SingleCellExperiment object. DEFAULT = NULL. default, class object detected automatically, can overwritten using . Can = 'Seurat' 'SingleCellExperiment'.","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.dt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"create.dt - convert a Seurat or SingleCellExperiment to a data.table — create.dt","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.dt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"create.dt - convert a Seurat or SingleCellExperiment to a data.table — create.dt","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.stats.html","id":null,"dir":"Reference","previous_headings":"","what":"create.stats - perform statistical analysis and generate an output data.table — create.stats","title":"create.stats - perform statistical analysis and generate an output data.table — create.stats","text":"function performs statistical analysis generates output data.table","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create.stats - perform statistical analysis and generate an output data.table — create.stats","text":"","code":"create.stats(   dat,   use.cols,   sample.col,   group.col,   comparisons,   variance.test = \"kruskal.test\",   pairwise.test = \"wilcox.test\",   corrections = \"fdr\" )"},{"path":"http://immunedynamics.io/spectre/reference/create.stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create.stats - perform statistical analysis and generate an output data.table — create.stats","text":"dat DEFAULT. data.table containing summary data (samples vs features) use.cols DEFAULT. Columns (.e. features) use statistical analysis. sample.col DEFAULT. column denoting sample names. group.col DEFAULT. column denoting experimental group names. comparisons DEFAULT. list pairwise comparisons samples. E.g. list(c('Group ', 'Group B'), c('Group B', 'Group C')). variance.test DEFAULT = 'kruskal.test'. Currently option pairwise.test DEFAULT = 'wilcox.test'. Currently option corrections DEFAULT = 'fdr' (false discovery rate). Currently option","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"create.stats - perform statistical analysis and generate an output data.table — create.stats","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"create.stats - perform statistical analysis and generate an output data.table — create.stats","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.sumtable.html","id":null,"dir":"Reference","previous_headings":"","what":"create.sumtable - create a data.table 'summarising' cellular data by sample and population/cluster. — create.sumtable","title":"create.sumtable - create a data.table 'summarising' cellular data by sample and population/cluster. — create.sumtable","text":"function summarises cellular data generates summary data.table","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.sumtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create.sumtable - create a data.table 'summarising' cellular data by sample and population/cluster. — create.sumtable","text":"","code":"create.sumtable(dat, sample.col, pop.col, use.cols, annot.cols, counts, func, sep)"},{"path":"http://immunedynamics.io/spectre/reference/create.sumtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create.sumtable - create a data.table 'summarising' cellular data by sample and population/cluster. — create.sumtable","text":"dat DEFAULT. data.table containing cells (rows) vs features/markers (columns). One column must represent sample names, another must represent populations/clusters. sample.col DEFAULT. Character. Name sample column (e.g. \"Sample\"). pop.col DEFAULT. Character. Name population/cluster column (e.g. \"Population\", \"Cluster\"). use.cols DEFAULT = NULL character vector indicating columns measured (e.g. cellular columns – c(\"CD45\", \"CD3e\") etc). annot.cols DEFAULT = NULL. character vector indicating columns included annotation columns (e.g. c(\"Batch\", \"Group\") etc). parent.col DEFAULT = NULL. character entry indicating column represents 'lineage' population belongs (e.g. 'CD4 T cells' may belong 'T cells' lineage). Use also calculate population percentage lineage. counts DEFAULT = NULL. wish calculate actual number cells per sample, data.frame data.table containing sample names (column 1) cell counts per sample (column 2). perc.pos DEFAULT = NULL. wish calculate percentage population 'positive' marker, can provide data.table containing mark names (column 1) cut values positivity (column 2). double.pos DEDAULT = NULL. List vectors, vector containing names multiple markers wish calculate % positive (e.g. CD38+HLADR+). Generates '' '' combinations. func DEFAULT = \"median\". Can \"median\" \"mean\". Defines type function calculating MFI data. sep DEFAULT = \" – \". Character separation measurement type population (e.g. MFI CD4 – T cells)","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.sumtable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"create.sumtable - create a data.table 'summarising' cellular data by sample and population/cluster. — create.sumtable","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.sumtable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"create.sumtable - create a data.table 'summarising' cellular data by sample and population/cluster. — create.sumtable","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/create.sumtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create.sumtable - create a data.table 'summarising' cellular data by sample and population/cluster. — create.sumtable","text":"","code":"## Calculate and export results from demonstration data dat <- Spectre::demo.clustered counts <- data.frame('Sample' = unique(dat[['Sample']]),  'Counts' = c(rep(100000, 6), rep(1000000, 6)))  sum.dat <- create.sumtable(dat = dat,                             sample.col = \"Sample\",                             pop.col = \"Population\",                              use.cols = names(dat)[c(11:19)],                             counts = counts) #> Loading required package: data.table #> Creating sumtable #>  -- running some initial tests #>  -- calculting cell proportions #>  -- calculating cell counts #>  -- calculting expression levels #>  -- wrapping up #>  -- sumtable complete!"},{"path":"http://immunedynamics.io/spectre/reference/demo.clustered.html","id":null,"dir":"Reference","previous_headings":"","what":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","title":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","text":"demo.clustered - Demo data.table cells (rows) x markers (columns), clusters, populations, UMAP values added","code":""},{"path":"http://immunedynamics.io/spectre/reference/demo.clustered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","text":"","code":"demo.clustered"},{"path":"http://immunedynamics.io/spectre/reference/demo.clustered.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","text":"Demo data.table cells (rows) x markers (columns), clusters, populations, UMAP values added.","code":""},{"path":"http://immunedynamics.io/spectre/reference/demo.clustered.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","text":"Thomas M Ashhurst.","code":""},{"path":"http://immunedynamics.io/spectre/reference/demo.clustered.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/demo.clustered.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/demo.clustered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"demo.clustered - Demo data.table with cells (rows) x markers (columns), with clusters, populations, and UMAP values added — demo.clustered","text":"","code":"demo.clustered #>                  FileName      NK11        CD3     CD45       Ly6G    CD11b #>                    <char>     <num>      <num>    <num>      <num>    <num> #>      1:   CNS_Mock_01.csv   42.3719  40.098700  6885.08  -344.7830 14787.30 #>      2:   CNS_Mock_01.csv   42.9586 119.014000  1780.29  -429.6650  5665.73 #>      3:   CNS_Mock_01.csv   59.2366 206.238000 10248.30 -1603.8400 19894.30 #>      4:   CNS_Mock_01.csv  364.9480  -0.233878  3740.04  -815.9800  9509.43 #>      5:   CNS_Mock_01.csv  440.2470  40.035200  9191.38    40.5055  5745.82 #>     ---                                                                     #> 169000: CNS_WNV_D7_06.csv  910.8890  72.856100 31466.20  -316.5570 28467.80 #> 169001: CNS_WNV_D7_06.csv  -10.2642  64.188700 45188.00  -540.5140 22734.00 #> 169002: CNS_WNV_D7_06.csv -184.2910  -9.445650 11842.60   -97.9383 17237.00 #> 169003: CNS_WNV_D7_06.csv  248.3860 229.986000 32288.20  -681.1630 19255.80 #> 169004: CNS_WNV_D7_06.csv  738.9810  95.470300 46185.10 -1004.6000 22957.80 #>              B220      CD8a       Ly6C       CD4  NK11_asinh    CD3_asinh #>             <num>     <num>      <num>     <num>       <num>        <num> #>      1:  -40.2399   83.7175   958.7000  711.0720  0.04235923  0.040087962 #>      2:   86.6673   34.7219   448.2590  307.2720  0.04294540  0.118734817 #>      3:  427.8310  285.8800  1008.8300  707.0940  0.05920201  0.204803270 #>      4:  182.4200  333.6050   440.0710  249.7840  0.35729716 -0.000233878 #>      5: -211.6940  149.2200    87.4815  867.5700  0.42713953  0.040024513 #>     ---                                                                   #> 169000:   -7.7972 -271.8040 12023.7000 1103.0500  0.81693878  0.072791800 #> 169001:  202.4110 -936.4920  4188.3300  315.9400 -0.01026402  0.064144703 #> 169002:  123.4760 -219.9320  8923.4000 -453.4640 -0.18326344 -0.009445510 #> 169003: -656.0540 -201.5880 10365.7000   61.6765  0.24590035  0.228005328 #> 169004: -661.6280   72.3356  9704.4700  -31.8532  0.68430866  0.095325863 #>         CD45_asinh  Ly6G_asinh CD11b_asinh   B220_asinh  CD8a_asinh Ly6C_asinh #>              <num>       <num>       <num>        <num>       <num>      <num> #>      1:   2.627736 -0.33829345    3.388057 -0.040229048  0.08362002  0.8518665 #>      2:   1.340828 -0.41743573    2.435282  0.086559169  0.03471493  0.4344615 #>      3:   3.022631 -1.25101677    3.684212  0.415750122  0.28212257  0.8876036 #>      4:   2.029655 -0.74509796    2.948184  0.181423123  0.32770787  0.4269784 #>      5:   2.914359  0.04049443    2.449108 -0.210143906  0.14867171  0.0873703 #>     ---                                                                        #> 169000:   4.142314 -0.31149515    4.042229 -0.007797121 -0.26856390  3.1817517 #> 169001:   4.504101 -0.51715205    3.817492  0.201053740 -0.83574631  2.1394053 #> 169002:   3.166628 -0.09778240    3.541046  0.123164374 -0.21819650  2.8849492 #> 169003:   4.168089 -0.63716643    3.651633 -0.616293228 -0.20024703  3.0339681 #> 169004:   4.525922 -0.88462254    3.827279 -0.620947819  0.07227267  2.9683779 #>           CD4_asinh     Sample  Group  Batch FlowSOM_cluster #>               <num>     <char> <char> <char>           <num> #>      1:  0.66171351 01_Mock_01   Mock      A              23 #>      2:  0.30263135 01_Mock_01   Mock      A              55 #>      3:  0.65846851 01_Mock_01   Mock      A              64 #>      4:  0.24725691 01_Mock_01   Mock      A              53 #>      5:  0.78456678 01_Mock_01   Mock      A             110 #>     ---                                                      #> 169000:  0.95239703  12_WNV_06    WNV      A              72 #> 169001:  0.31090687  12_WNV_06    WNV      A              46 #> 169002: -0.43920651  12_WNV_06    WNV      A             133 #> 169003:  0.06163746  12_WNV_06    WNV      A             133 #> 169004: -0.03184782  12_WNV_06    WNV      A             103 #>         FlowSOM_metacluster        Population     UMAP_X    UMAP_Y #>                      <fctr>            <char>      <num>     <num> #>      1:                   2         Microglia -2.3603757  6.201213 #>      2:                   2         Microglia  2.7505242  7.119595 #>      3:                   2         Microglia -2.9486033  4.012670 #>      4:                   2         Microglia  0.6482904  6.481466 #>      5:                   4          NK cells -2.3941295  6.975885 #>     ---                                                            #> 169000:                   3 Infil Macrophages -2.9640724 -5.058265 #> 169001:                   3 Infil Macrophages -1.2644785 -3.555824 #> 169002:                   3 Infil Macrophages -2.3592682 -2.429467 #> 169003:                   3 Infil Macrophages -1.9531062 -4.049705 #> 169004:                   3 Infil Macrophages -0.7404098 -4.686928"},{"path":"http://immunedynamics.io/spectre/reference/do.add.cols.html","id":null,"dir":"Reference","previous_headings":"","what":"do.add.cols — do.add.cols","title":"do.add.cols — do.add.cols","text":".add.cols","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.add.cols — do.add.cols","text":"","code":"do.add.cols(dat, base.col, add.dat, add.by, rmv.ext)"},{"path":"http://immunedynamics.io/spectre/reference/do.add.cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.add.cols — do.add.cols","text":"dat DEFAULT. data.table (data.frame) containing data new values added . base.col DEFAULT. Name column containing values new values matched . add.dat DEFAULT. data table new values embed new columns, one column containing values used matching target data.table. add.DEFAULT. Character, name column add.dat used matching taret dataset. rmv.ext DEFAULTS FALSE. Logical, can TRUE FALSE. Removes \".csv\" \".fcs\" extension 'match.' vector – especially useful 'match.' list sample names end .csv .fcs. mem.ctrl DEFAULT = TRUE. Runs gc() (garbage collection) number steps free memory released quickly enough.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"do.add.cols — do.add.cols","text":"Returns data.table new columns embedded.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.cols.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.add.cols — do.add.cols","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.cols.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.add.cols — do.add.cols","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"do.add.cols — do.add.cols","text":"","code":"library(data.table) dat <- Spectre::demo.clustered[,1:19]  add.dt <- data.table('Files' = unique(dat$FileName),                      'SampleNumber' = c(1:12))  cell.dat <- do.add.cols(dat = dat,                         base.col = \"FileName\",                         add.dat = add.dt,                         add.by = \"Files\") #> Step 1/3. Mapping data #> Step 2/3. Merging data #> Step 3/3. Returning data"},{"path":"http://immunedynamics.io/spectre/reference/do.add.masks.html","id":null,"dir":"Reference","previous_headings":"","what":"do.add.masks — do.add.masks","title":"do.add.masks — do.add.masks","text":".add.masks","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.masks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.add.masks — do.add.masks","text":"","code":"do.add.masks(dat, mask.dir, mask.pattern, mask.label,correct.extent = TRUE,  flip.y = TRUE, value.modifier = 65535, HDF5 = FALSE, array = FALSE)"},{"path":"http://immunedynamics.io/spectre/reference/do.add.masks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.add.masks — do.add.masks","text":"dat DEFAULT. list spatial data objects mask.dir DEFAULT. Directory mask files. mask.pattern DEFAULT. character pattern identifies mask type (e.g. '_mask') mask.label DEFAULT. want call mask correct.extent DEFAULT = TRUE flip.y DEFAULT = TRUE value.modifier DEFAULT = 65535 HDF5 DEFAULT = FALSE. Can read HDF5 mask files desired (advanced use). array DEFAULT = FALSE. mask TIFF array (advanced use).","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.masks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.add.masks — do.add.masks","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.masks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.add.masks — do.add.masks","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.percell.html","id":null,"dir":"Reference","previous_headings":"","what":"do.add.percell — do.add.percell","title":"do.add.percell — do.add.percell","text":".add.percell","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.percell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.add.percell — do.add.percell","text":"","code":"do.add.percell(spatial.dat, percell.dat, roi.col, name = \"per.cell\")"},{"path":"http://immunedynamics.io/spectre/reference/do.add.percell.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.add.percell — do.add.percell","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.add.percell.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.add.percell — do.add.percell","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","title":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","text":"Aggregate data using data.table functions – summarises mean, median, sum expression marker cluster/population","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","text":"","code":"do.aggregate(dat, use.cols, by, func, dt)"},{"path":"http://immunedynamics.io/spectre/reference/do.aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","text":"dat DEFAULT. data.table (data.frame) containing data aggregated. use.cols DEFAULT. columns used aggregation. DEFAULT. column contains cluster/population identities. func DEFAULT = 'median'. Character, method aggregation. Can 'median', 'mean', 'sum'. dt DEFAULT = TRUE. TRUE returns data.table observations use.cols, false returns data.frame use.cols, rownames observations","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","text":"Returns new data.table values use.cols aggregated per cluster/population.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.aggregate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.aggregate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate data using data.table functions – summarises the mean, median, or sum expression of each marker on each cluster/population — do.aggregate","text":"","code":"exp <- do.aggregate(dat = Spectre::demo.clustered,                     use.cols = names(demo.clustered)[c(11:19)],                     by = \"Population\")  # Typically followed up by making an expression heatmap Spectre::make.pheatmap(dat = exp,                        file.name = \"Pheatmap.png\",                        plot.title = \"Pheatmap\",                        sample.col = \"Population\",                        plot.cols = names(exp)[c(2:10)]) #> Loading required package: pheatmap #> Loading required package: RColorBrewer #> Loading required package: scales #> A pheatmap has been saved to your working directoryPheatmap.png"},{"path":"http://immunedynamics.io/spectre/reference/do.align.html","id":null,"dir":"Reference","previous_headings":"","what":"do.align - Function to align multiple batches of a dataset. — do.align","title":"do.align - Function to align multiple batches of a dataset. — do.align","text":"function allows align multiple batches dataset, using either \"Quantile\" approach, using \"CytoNorm\"","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.align - Function to align multiple batches of a dataset. — do.align","text":"","code":"do.align(ref.dat, target.dat, batch.col, align.cols, method, goal,  nQ, Qmin, Qmax, write.ref.fcs, write.target.fcs)  do.align(ref.dat, target.dat, batch.col, align.cols, method = \"CytoNorm\",  goal = \"mean\", nQ = 101, Qmin = 0.01, Qmax = 0.99, write.ref.fcs = TRUE, write.target.fcs = TRUE, mem.ctrl = TRUE)"},{"path":"http://immunedynamics.io/spectre/reference/do.align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.align - Function to align multiple batches of a dataset. — do.align","text":"ref.dat DEFAULT. using method = \"CytoNorm\", must FlowSOM object created Spectre::.prep.fsom. using \"Quantiles\", must target.dat DEFAULT. data.table data wish align batch.col DEFAULT. Character, column denotes batches align.cols DEFAULT. Character, vector columns wish align. method DEFAULT = \"CytoNorm\". Character, can \"CytoNorm\" \"Quantile\". goal DEFAULT = \"Mean\". method = \"CytoNorm\". Character, goal align . Can either \"mean\", can name one batches (e.g. \"Batch1\"). nQ DEFAULT = 101. method = \"CytoNorm\". Numeric, number quanitles use. Qmin DEFAULT = 0.01. method = \"Quantiles\". Numeric, minimum valus lower threshold. Qmax DEFAULT = 0.99. method = \"Quantiles\". Numeric, maximum value upper threshold. write.ref.fcs DEFAULT = TRUE. Logical, want quick copy reference sample FCS files. write.target.fcs DEFAULT = TRUE. Logical, want quick copy ALIGNED target sample FCS files. mem.ctrl DEFAULT = TRUE. Runs gc() (garbage collection) number steps free memory released quickly enough.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"do.align - Function to align multiple batches of a dataset. — do.align","text":"Returns data.table selected columns (align.cols) replaced aligned data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.align.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.align - Function to align multiple batches of a dataset. — do.align","text":"Ashhurst, T. M., et al. (2019). https://www.ncbi.nlm.nih.gov/pubmed/31077106","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.align.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.align - Function to align multiple batches of a dataset. — do.align","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data using ArcSinh transformation — do.asinh","title":"Transform data using ArcSinh transformation — do.asinh","text":"Function transform data selected columns using ArcSinh transformation specified co-factor.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data using ArcSinh transformation — do.asinh","text":"","code":"do.asinh(dat, use.cols, cofactor=5, append.cf=FALSE, reduce.noise=FALSE)"},{"path":"http://immunedynamics.io/spectre/reference/do.asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data using ArcSinh transformation — do.asinh","text":"dat DEFAULT. data.table object. Input data. use.cols DEFAULT. Vector character column names. columns transform. columns transformed added data.table new columns. cofactor DEFAULT = 5. Co-factor use arcsinh transformation. Can list co-factors matches columns use.cols. specifying list co-factors make sure column use.cols assigned co-factor (repeat values necessary). append.cf DEFAULT = FALSE. Appends co-factor used end name transformed columns. reduce.noise DEFAULT = FALSE. experimental calculation reduce noise negative values. Use caution.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform data using ArcSinh transformation — do.asinh","text":"data.table new columns added, contain asinh transformed data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.calculate.area.html","id":null,"dir":"Reference","previous_headings":"","what":"do.calculate.area — do.calculate.area","title":"do.calculate.area — do.calculate.area","text":".calculate.area","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.calculate.area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.calculate.area — do.calculate.area","text":"","code":"do.calculate.area(dat, region = NULL)"},{"path":"http://immunedynamics.io/spectre/reference/do.calculate.area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.calculate.area — do.calculate.area","text":"dat DEFAULT. Spatial data list region DEFAULT = NULL. Name region mask, present.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.clip.html","id":null,"dir":"Reference","previous_headings":"","what":"do.clip - Clips data using a specified lower and upper value — do.clip","title":"do.clip - Clips data using a specified lower and upper value — do.clip","text":"function allows clip data using specified lower upper values. E.g. upper value set 1000, values 1000 converted 1000. rows lost, rather values rows converted.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.clip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.clip - Clips data using a specified lower and upper value — do.clip","text":"","code":"do.clip(dat, use.cols, min.value = NULL, max.value = NULL, append.name = '_clipped')"},{"path":"http://immunedynamics.io/spectre/reference/do.clip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.clip - Clips data using a specified lower and upper value — do.clip","text":"dat DEFAULT. data.table Input sample. use.cols DEFAULT. Columns clip min.value DEFAULT = NULL. Specify value values converted . set NULL, clipping occur. max.value DEFAULT = NULL. Specify value values converted . set NULL, clipping occur. append.name DEFAULT = '_clipped'. Text appended new column names clipping.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.clip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"do.clip - Clips data using a specified lower and upper value — do.clip","text":"data.table new columns added, contain clipped data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.clip.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.clip - Clips data using a specified lower and upper value — do.clip","text":"https://sydneycytometry.org.au/spectre","code":""},{"path":[]},{"path":"http://immunedynamics.io/spectre/reference/do.combine.cols.html","id":null,"dir":"Reference","previous_headings":"","what":"do.combine.cols - Combine the values of two columns into a single column — do.combine.cols","title":"do.combine.cols - Combine the values of two columns into a single column — do.combine.cols","text":"function allows combine values two columns, option remove 'NA' values","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.combine.cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.combine.cols - Combine the values of two columns into a single column — do.combine.cols","text":"","code":"do.combine.cols(dat, col1, col2, na.rm)"},{"path":"http://immunedynamics.io/spectre/reference/do.combine.cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.combine.cols - Combine the values of two columns into a single column — do.combine.cols","text":"dat DEFAULT. Data.table. col1 DEFAULT. Name column want combine . col2 DEFAULT. Name column want combine . column deleted combination col1. na.rm DEFAULT = TRUE. NA values present columns, removed.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.combine.cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"do.combine.cols - Combine the values of two columns into a single column — do.combine.cols","text":"Returns data.table adjusted columns","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.combine.cols.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.combine.cols - Combine the values of two columns into a single column — do.combine.cols","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.create.outlines.html","id":null,"dir":"Reference","previous_headings":"","what":"do.create.outlines — do.create.outlines","title":"do.create.outlines — do.create.outlines","text":".create.outlines","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.create.outlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.create.outlines — do.create.outlines","text":"","code":"do.create.outlines(dat, mask.name, method = 'stars')"},{"path":"http://immunedynamics.io/spectre/reference/do.create.outlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.create.outlines — do.create.outlines","text":"mask.name DEFAULT. Name mask create outlines method DEFAULT = 'stars'. Can 'stars' 'raster' spatial.dat DEFAULT. Spatial data list","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.extract.cell.dat.html","id":null,"dir":"Reference","previous_headings":"","what":"do.extract.cell.dat — do.extract.cell.dat","title":"do.extract.cell.dat — do.extract.cell.dat","text":".extract.cell.dat","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.extract.cell.dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.extract.cell.dat — do.extract.cell.dat","text":"","code":"do.extract.cell.dat(spatial.dat, target.dat)"},{"path":"http://immunedynamics.io/spectre/reference/do.extract.html","id":null,"dir":"Reference","previous_headings":"","what":"do.extract — do.extract","title":"do.extract — do.extract","text":".extract","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.extract — do.extract","text":"","code":"do.extract(dat, mask, name = \"CellData\", fun = \"mean\")"},{"path":"http://immunedynamics.io/spectre/reference/do.extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.extract — do.extract","text":"dat DEFAULT. List spatial data objects mask DEFAULT. Name mask use cell data extraction name DEFAULT = 'CellData'. Name extracted cell dataset. fun DEFAULT = 'mean'. Summarisation function.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.filter.html","id":null,"dir":"Reference","previous_headings":"","what":"do.filter - filtering data.table using multiple match values — do.filter","title":"do.filter - filtering data.table using multiple match values — do.filter","text":"function allows filtering data.table using multiple match values – cells contain match values filtered, provided new data.table.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.filter - filtering data.table using multiple match values — do.filter","text":"","code":"do.filter(dat, use.col, values)"},{"path":"http://immunedynamics.io/spectre/reference/do.filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.filter - filtering data.table using multiple match values — do.filter","text":"dat DEFAULT. data.table use.col DEFAULT = NULL. column use re-ordering values DEFAULT = NULL. vector values use filtering – cells contain match values filtered, provided new data.table. 20 match values can provided","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.filter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.filter - filtering data.table using multiple match values — do.filter","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.filter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.filter - filtering data.table using multiple match values — do.filter","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.filter.percell.html","id":null,"dir":"Reference","previous_headings":"","what":"do.filter.percell — do.filter.percell","title":"do.filter.percell — do.filter.percell","text":".filter.percell","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.filter.percell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.filter.percell — do.filter.percell","text":"","code":"do.filter.percell(spatial.dat, per.cell, to, filter.by, id.col = \"ObjectNumber\", x.col = \"Location_Center_X\", y.col = \"Location_Center_Y\", simplify.cp.colname = TRUE, value.modifier = 65535)"},{"path":"http://immunedynamics.io/spectre/reference/do.label.from.polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"do.label.from.polygon — do.label.from.polygon","title":"do.label.from.polygon — do.label.from.polygon","text":".label..polygon","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.label.from.polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.label.from.polygon — do.label.from.polygon","text":"","code":"do.label.from.polygon(spatial.dat, cell.dat, mask, labels, name = \"Label\", id.col = 'ID', roi.col = 'ROI')"},{"path":"http://immunedynamics.io/spectre/reference/do.list.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the column names and row numbers for elements of a list — do.list.summary","title":"Summarise the column names and row numbers for elements of a list — do.list.summary","text":"Summarise column names row numbers elements list","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the column names and row numbers for elements of a list — do.list.summary","text":"","code":"do.list.summary(dat)"},{"path":"http://immunedynamics.io/spectre/reference/do.list.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the column names and row numbers for elements of a list — do.list.summary","text":"dat DEFAULT. list data.tables wish create summary information ","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the column names and row numbers for elements of a list — do.list.summary","text":"Returns new list summarising data.tables list.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.summary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarise the column names and row numbers for elements of a list — do.list.summary","text":"https://sydneycytometry.org.au/spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise the column names and row numbers for elements of a list — do.list.summary","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.switch.html","id":null,"dir":"Reference","previous_headings":"","what":"List switch or inversion — do.list.switch","title":"List switch or inversion — do.list.switch","text":"List switch inversion","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List switch or inversion — do.list.switch","text":"","code":"do.list.switch(dat)"},{"path":"http://immunedynamics.io/spectre/reference/do.list.switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List switch or inversion — do.list.switch","text":"dat DEFAULT. list vectors wish switch/invert","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List switch or inversion — do.list.switch","text":"Returns data.table switched/inverted li","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.switch.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List switch or inversion — do.list.switch","text":"https://sydneycytometry.org.au/spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.switch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List switch or inversion — do.list.switch","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.list.switch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List switch or inversion — do.list.switch","text":"","code":"lst <- list(\"A\" = c(1,2,3), \"B\" = c(4,5,6), \"C\" = c(7,8,9)) lst #> $A #> [1] 1 2 3 #>  #> $B #> [1] 4 5 6 #>  #> $C #> [1] 7 8 9 #>   res <- do.list.switch(lst) res #>    Values    New #>     <num> <char> #> 1:      1      A #> 2:      2      A #> 3:      3      A #> 4:      4      B #> 5:      5      B #> 6:      6      B #> 7:      7      C #> 8:      8      C #> 9:      9      C"},{"path":"http://immunedynamics.io/spectre/reference/do.logicle.html","id":null,"dir":"Reference","previous_headings":"","what":"Using logicle to transform data — do.logicle","title":"Using logicle to transform data — do.logicle","text":"function transform data using logicle transformation. makes use flowCore's implementation logicle transformation, can either automatically infer transformation function based data, calculate based want looking default overriden linearisation.width, max.scale.val, full.transform.width, additional.negative.range. Description parameter adapted flowCore's vignette. information logicle transformation , please read manuscript references section.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.logicle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using logicle to transform data — do.logicle","text":"","code":"do.logicle(dat, use.cols, linearisation.width, max.scale.val,  full.transform.width, additional.negative.range)  do.logicle(dat, use.cols, auto.infer.function = TRUE, linearisation.width = 1.2, max.scale.val = 262144, full.transform.width = 4.5, additional.negative.range = 0)"},{"path":"http://immunedynamics.io/spectre/reference/do.logicle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using logicle to transform data — do.logicle","text":"dat DEFAULT. data.table. Input data use.cols DEFAULT. Vector column names transform auto.infer.function Default = TRUE. Automatically infer logical transformation function based data. set FALSE, default overriden linearisation.width, max.scale.val, full.transform.width, additional.negative.range used instead calculate logical transformation function. linearisation.width Default = 1.2. Linearisation width asymptotic decades. must > 0 determines slope transformation zero. found 1.2 works well flow data, 0.5 works well cytof data. can estimated using equation: \\((m-log10(max.scale.val/|r|))/2\\) r negative value included display. See max.scale.val . max.scale.val Default = 262144. Maximum scale data value. can 10,000 common 4 decade data 262144 (default value) 18 bit data range. must greater 0 full.transform.width Default = 4.5. full width transformed values asymptotic decades must greater 0 additional.negative.range Default = 0. Additional negative range included transformed value asymptotic decades. Value greater 0 bring prescribed additional range transformed values","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.logicle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Using logicle to transform data — do.logicle","text":"Parks, David R., Mario Roederer, Wayne . Moore. \"new “Logicle” display method avoids deceptive effects logarithmic scaling low signals compensated data.\" Cytometry Part : Journal International Society Analytical Cytology 69.6 (2006): 541-551.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.logicle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Using logicle to transform data — do.logicle","text":"","code":"library(Spectre) dat = Spectre::demo.clustered[, 2:9] use.cols = names(dat) do.logicle(dat, use.cols = use.cols) #> Loading required package: flowCore #> Loading required package: Biobase #> Loading required package: BiocGenerics #> Loading required package: generics #>  #> Attaching package: ‘generics’ #> The following objects are masked from ‘package:base’: #>  #>     as.difftime, as.factor, as.ordered, intersect, is.element, setdiff, #>     setequal, union #>  #> Attaching package: ‘BiocGenerics’ #> The following object is masked from ‘package:flowCore’: #>  #>     normalize #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, is.unsorted, lapply, #>     mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, #>     rank, rbind, rownames, sapply, saveRDS, table, tapply, unique, #>     unsplit, which.max, which.min #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #> Automatically estimating the logicle transformation function based on input data #> Transforming data #> Converting data back to data.table #>              NK11        CD3     CD45       Ly6G    CD11b      B220      CD8a #>             <num>      <num>    <num>      <num>    <num>     <num>     <num> #>      1:   42.3719  40.098700  6885.08  -344.7830 14787.30  -40.2399   83.7175 #>      2:   42.9586 119.014000  1780.29  -429.6650  5665.73   86.6673   34.7219 #>      3:   59.2366 206.238000 10248.30 -1603.8400 19894.30  427.8310  285.8800 #>      4:  364.9480  -0.233878  3740.04  -815.9800  9509.43  182.4200  333.6050 #>      5:  440.2470  40.035200  9191.38    40.5055  5745.82 -211.6940  149.2200 #>     ---                                                                       #> 169000:  910.8890  72.856100 31466.20  -316.5570 28467.80   -7.7972 -271.8040 #> 169001:  -10.2642  64.188700 45188.00  -540.5140 22734.00  202.4110 -936.4920 #> 169002: -184.2910  -9.445650 11842.60   -97.9383 17237.00  123.4760 -219.9320 #> 169003:  248.3860 229.986000 32288.20  -681.1630 19255.80 -656.0540 -201.5880 #> 169004:  738.9810  95.470300 46185.10 -1004.6000 22957.80 -661.6280   72.3356 #>               Ly6C NK11_logicle CD3_logicle CD45_logicle Ly6G_logicle #>              <num>        <num>       <num>        <num>        <num> #>      1:   958.7000    1.2627599    1.283089     2.992934    0.9701060 #>      2:   448.2590    1.2640218    1.548692     2.405522    0.9517178 #>      3:  1008.8300    1.2989559    1.799549     3.165677    0.7053556 #>      4:   440.0710    1.8714522    1.140471     2.727902    0.8686807 #>      5:    87.4815    1.9776423    1.282866     3.118405    1.0538616 #>     ---                                                               #> 169000: 12023.7000    2.4113824    1.396508     3.652869    0.9762283 #> 169001:  4188.3300    1.1491585    1.366834     3.810048    0.9277679 #> 169002:  8923.4000    0.7853742    1.107778     3.228472    1.0237366 #> 169003: 10365.7000    1.6782635    1.858508     3.664068    0.8975110 #> 169004:  9704.4700    2.2872091    1.472432     3.819526    0.8286947 #>         CD11b_logicle B220_logicle CD8a_logicle Ly6C_logicle #>                 <num>        <num>        <num>        <num> #>      1:      3.085342    1.0562608    1.4136626    1.3349551 #>      2:      2.608476    1.2076286    1.3546434    1.0003851 #>      3:      3.224803    1.5880181    1.6510223    1.3600907 #>      4:      2.871745    1.3201315    1.7044840    0.9936275 #>      5:      2.615834    0.8547267    1.4919822    0.6637169 #>     ---                                                      #> 169000:      3.390039    1.0949967    0.9904270    2.5534904 #> 169001:      3.286692    1.3432289    0.3881125    2.0653896 #> 169002:      3.157749    1.2511790    1.0502296    2.4179607 #> 169003:      3.209600    0.4118100    1.0716537    2.4862494 #> 169004:      3.291217    0.4072407    1.3999754    2.4562570"},{"path":"http://immunedynamics.io/spectre/reference/do.merge.files.html","id":null,"dir":"Reference","previous_headings":"","what":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","title":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","text":".merge.files - Function merge list data.tables (one data.table per 'sample') single large data.table.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.merge.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","text":"","code":"do.merge.files(dat, remove.duplicates)  do.merge.files(dat, remove.duplicates = TRUE)"},{"path":"http://immunedynamics.io/spectre/reference/do.merge.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","text":"dat DEFAULT. List data.tables (data.frames) remove.duplicates DEFAULT = TRUE. want remove duplicates?","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.merge.files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","text":"Returns combined data.table.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.merge.files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","text":"https://sydneycytometry.org.au/spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.merge.files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.merge.files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"do.merge.files - Function to merge a list of data.tables (one data.table per 'sample') into a single large data.table. — do.merge.files","text":"","code":"data.list <- list( \"01_Mock_01\" = Spectre::demo.clustered[Sample == '01_Mock_01'], \"02_Mock_02\" = Spectre::demo.clustered[Sample == '02_Mock_02'] ) cell.dat <- do.merge.files(dat = data.list, remove.duplicates = TRUE) head(cell.dat) #>           FileName     NK11        CD3     CD45       Ly6G    CD11b      B220 #>             <char>    <num>      <num>    <num>      <num>    <num>     <num> #> 1: CNS_Mock_01.csv  42.3719  40.098700  6885.08  -344.7830 14787.30  -40.2399 #> 2: CNS_Mock_01.csv  42.9586 119.014000  1780.29  -429.6650  5665.73   86.6673 #> 3: CNS_Mock_01.csv  59.2366 206.238000 10248.30 -1603.8400 19894.30  427.8310 #> 4: CNS_Mock_01.csv 364.9480  -0.233878  3740.04  -815.9800  9509.43  182.4200 #> 5: CNS_Mock_01.csv 440.2470  40.035200  9191.38    40.5055  5745.82 -211.6940 #> 6: CNS_Mock_01.csv 151.5890 124.525000  4256.17  -596.1300 12200.80   94.0770 #>        CD8a      Ly6C     CD4 NK11_asinh    CD3_asinh CD45_asinh  Ly6G_asinh #>       <num>     <num>   <num>      <num>        <num>      <num>       <num> #> 1:  83.7175  958.7000 711.072 0.04235923  0.040087962   2.627736 -0.33829345 #> 2:  34.7219  448.2590 307.272 0.04294540  0.118734817   1.340828 -0.41743573 #> 3: 285.8800 1008.8300 707.094 0.05920201  0.204803270   3.022631 -1.25101677 #> 4: 333.6050  440.0710 249.784 0.35729716 -0.000233878   2.029655 -0.74509796 #> 5: 149.2200   87.4815 867.570 0.42713953  0.040024513   2.914359  0.04049443 #> 6: 109.3110  417.4010 352.982 0.15101436  0.124205401   2.155040 -0.56550357 #>    CD11b_asinh  B220_asinh CD8a_asinh Ly6C_asinh CD4_asinh     Sample  Group #>          <num>       <num>      <num>      <num>     <num>     <char> <char> #> 1:    3.388057 -0.04022905 0.08362002  0.8518665 0.6617135 01_Mock_01   Mock #> 2:    2.435282  0.08655917 0.03471493  0.4344615 0.3026313 01_Mock_01   Mock #> 3:    3.684212  0.41575012 0.28212257  0.8876036 0.6584685 01_Mock_01   Mock #> 4:    2.948184  0.18142312 0.32770787  0.4269784 0.2472569 01_Mock_01   Mock #> 5:    2.449108 -0.21014391 0.14867171  0.0873703 0.7845668 01_Mock_01   Mock #> 6:    3.196324  0.09393878 0.10909447  0.4061429 0.3460348 01_Mock_01   Mock #>     Batch FlowSOM_cluster FlowSOM_metacluster Population     UMAP_X   UMAP_Y #>    <char>           <num>              <fctr>     <char>      <num>    <num> #> 1:      A              23                   2  Microglia -2.3603757 6.201213 #> 2:      A              55                   2  Microglia  2.7505242 7.119595 #> 3:      A              64                   2  Microglia -2.9486033 4.012670 #> 4:      A              53                   2  Microglia  0.6482904 6.481466 #> 5:      A             110                   4   NK cells -2.3941295 6.975885 #> 6:      A              24                   2  Microglia -0.4012698 6.679605"},{"path":"http://immunedynamics.io/spectre/reference/do.pull.data.html","id":null,"dir":"Reference","previous_headings":"","what":"do.pull.data — do.pull.data","title":"do.pull.data — do.pull.data","text":".pull.data","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.pull.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.pull.data — do.pull.data","text":"","code":"do.pull.data(spatial.dat, target.dat)"},{"path":"http://immunedynamics.io/spectre/reference/do.pull.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.pull.data — do.pull.data","text":"target.dat DEFAULT. Dataset pull. dat DEFAULT. Spatial data list.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"do.reorder - custom row re-ordering of a data.table — do.reorder","title":"do.reorder - custom row re-ordering of a data.table — do.reorder","text":"function allows user-defined re-ordering data.table rows","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.reorder - custom row re-ordering of a data.table — do.reorder","text":"","code":"do.reorder(dat, use.col, new.order)"},{"path":"http://immunedynamics.io/spectre/reference/do.reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.reorder - custom row re-ordering of a data.table — do.reorder","text":"dat DEFAULT. data.table use.col DEFAULT = NULL. column use re-ordering new.order DEFAULT = NULL. vector row values specified column, desired order","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.reorder.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.reorder - custom row re-ordering of a data.table — do.reorder","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.reorder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"do.reorder - custom row re-ordering of a data.table — do.reorder","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"do.rescale - Re-scale data in selected columns between two values, usually 0 and 1. — do.rescale","title":"do.rescale - Re-scale data in selected columns between two values, usually 0 and 1. — do.rescale","text":"function allows re-scale data selected columns two values, usually 0 1.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.rescale - Re-scale data in selected columns between two values, usually 0 and 1. — do.rescale","text":"","code":"do.rescale(dat, use.cols, new.min = 0, new.max = 1,  append.name = '_rescaled')"},{"path":"http://immunedynamics.io/spectre/reference/do.rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.rescale - Re-scale data in selected columns between two values, usually 0 and 1. — do.rescale","text":"dat DEFAULT. data.table Input sample. use.cols DEFAULT. Vector character column names – columns normalised added data.table new columns. new.min DEFAULT = 0. new minimum value. new.max DEFAULT = 1. new maximum value. append.name DEFAULT = '_rescaled'. Text appended column names re-scaled data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"do.rescale - Re-scale data in selected columns between two values, usually 0 and 1. — do.rescale","text":"data.table new columns added, contain re-scaled data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.rescale.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"do.rescale - Re-scale data in selected columns between two values, usually 0 and 1. — do.rescale","text":"https://sydneycytometry.org.au/spectre","code":""},{"path":[]},{"path":"http://immunedynamics.io/spectre/reference/do.stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical analysis — do.stats","title":"Statistical analysis — do.stats","text":"Statistical analysis","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.subsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsample data — do.subsample","title":"Subsample data — do.subsample","text":"Method subsample data. Can subsample randomly selecting desired number cells samples (DEFAULT), subsample specifying exact number cells sample (specify divide.), subsampling number cells sample based sample lowest count (specify divide.min.per). Useful decrease total cells generating dimensionality reduction plots (tSNE/UMAP).","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.subsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsample data — do.subsample","text":"","code":"do.subsample(dat, targets, samp.col, min.per, seed)"},{"path":"http://immunedynamics.io/spectre/reference/do.subsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsample data — do.subsample","text":"dat DEFAULT. Input dataframe cells (rows) vs markers (columns). targets DEFAULT. Vector downsample targets. divide.specified, must vector subsample targets order unique divide.entries (e.g. unique(dat[divide.])). Can also provide data.table data.frame first column unique entries divide.argument (.e. unique(dat[divide.])), second column targets. case, order appear dataset, 'divide.' argument must set. divide.DEFAULT = NULL. Character. Name column reflects groupings cells (sample names, group names etc) want subsample . min.per DEFAULT = FALSE. TRUE, divide.specified, sample contributes amount data based sample lowest count. seed DEFAULT = 42. Numeric. Seed reproducibility.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.subsample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Subsample data — do.subsample","text":"Thomas Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.subsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsample data — do.subsample","text":"","code":"# Subsample 10,000 cells randomly from the total dataset sub.dat <- Spectre::do.subsample(dat = Spectre::demo.clustered,                                  targets = 10000)  # Subsample based on the sample with the smallest number of cells sub.dat.sample <- Spectre::do.subsample(dat = Spectre::demo.clustered,                                         divide.by = \"FileName\",                                         min.per = TRUE)"},{"path":"http://immunedynamics.io/spectre/reference/do.zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"do.zscore - Calculate z.score for a dataset — do.zscore","title":"do.zscore - Calculate z.score for a dataset — do.zscore","text":".zscore - Calculate z.score dataset","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do.zscore - Calculate z.score for a dataset — do.zscore","text":"","code":"do.zscore(dat, use.cols)"},{"path":"http://immunedynamics.io/spectre/reference/do.zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do.zscore - Calculate z.score for a dataset — do.zscore","text":"dat DEFAULT. data.table (data.frame) containing data converted z-scores. Z-score transformed values added new columns. use.cols DEFAULT. columns used z-score calculations. append.name DEFAULT = '_zscore'. Text appended end new z-score transformed columns. replace DEFAULT = FALSE. FALSE, appends new columns data.table. TRUE, replaces values existing columns z-score tranformed values, change column names.","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"do.zscore - Calculate z.score for a dataset — do.zscore","text":"Returns new data.table z-score calculations selected column","code":""},{"path":"http://immunedynamics.io/spectre/reference/do.zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"do.zscore - Calculate z.score for a dataset — do.zscore","text":"","code":"do.zscore(dat = Spectre::demo.clustered, use.cols = c(\"NK11\", \"CD4\")) #>                  FileName      NK11        CD3     CD45       Ly6G    CD11b #>                    <char>     <num>      <num>    <num>      <num>    <num> #>      1:   CNS_Mock_01.csv   42.3719  40.098700  6885.08  -344.7830 14787.30 #>      2:   CNS_Mock_01.csv   42.9586 119.014000  1780.29  -429.6650  5665.73 #>      3:   CNS_Mock_01.csv   59.2366 206.238000 10248.30 -1603.8400 19894.30 #>      4:   CNS_Mock_01.csv  364.9480  -0.233878  3740.04  -815.9800  9509.43 #>      5:   CNS_Mock_01.csv  440.2470  40.035200  9191.38    40.5055  5745.82 #>     ---                                                                     #> 169000: CNS_WNV_D7_06.csv  910.8890  72.856100 31466.20  -316.5570 28467.80 #> 169001: CNS_WNV_D7_06.csv  -10.2642  64.188700 45188.00  -540.5140 22734.00 #> 169002: CNS_WNV_D7_06.csv -184.2910  -9.445650 11842.60   -97.9383 17237.00 #> 169003: CNS_WNV_D7_06.csv  248.3860 229.986000 32288.20  -681.1630 19255.80 #> 169004: CNS_WNV_D7_06.csv  738.9810  95.470300 46185.10 -1004.6000 22957.80 #>              B220      CD8a       Ly6C       CD4  NK11_asinh    CD3_asinh #>             <num>     <num>      <num>     <num>       <num>        <num> #>      1:  -40.2399   83.7175   958.7000  711.0720  0.04235923  0.040087962 #>      2:   86.6673   34.7219   448.2590  307.2720  0.04294540  0.118734817 #>      3:  427.8310  285.8800  1008.8300  707.0940  0.05920201  0.204803270 #>      4:  182.4200  333.6050   440.0710  249.7840  0.35729716 -0.000233878 #>      5: -211.6940  149.2200    87.4815  867.5700  0.42713953  0.040024513 #>     ---                                                                   #> 169000:   -7.7972 -271.8040 12023.7000 1103.0500  0.81693878  0.072791800 #> 169001:  202.4110 -936.4920  4188.3300  315.9400 -0.01026402  0.064144703 #> 169002:  123.4760 -219.9320  8923.4000 -453.4640 -0.18326344 -0.009445510 #> 169003: -656.0540 -201.5880 10365.7000   61.6765  0.24590035  0.228005328 #> 169004: -661.6280   72.3356  9704.4700  -31.8532  0.68430866  0.095325863 #>         CD45_asinh  Ly6G_asinh CD11b_asinh   B220_asinh  CD8a_asinh Ly6C_asinh #>              <num>       <num>       <num>        <num>       <num>      <num> #>      1:   2.627736 -0.33829345    3.388057 -0.040229048  0.08362002  0.8518665 #>      2:   1.340828 -0.41743573    2.435282  0.086559169  0.03471493  0.4344615 #>      3:   3.022631 -1.25101677    3.684212  0.415750122  0.28212257  0.8876036 #>      4:   2.029655 -0.74509796    2.948184  0.181423123  0.32770787  0.4269784 #>      5:   2.914359  0.04049443    2.449108 -0.210143906  0.14867171  0.0873703 #>     ---                                                                        #> 169000:   4.142314 -0.31149515    4.042229 -0.007797121 -0.26856390  3.1817517 #> 169001:   4.504101 -0.51715205    3.817492  0.201053740 -0.83574631  2.1394053 #> 169002:   3.166628 -0.09778240    3.541046  0.123164374 -0.21819650  2.8849492 #> 169003:   4.168089 -0.63716643    3.651633 -0.616293228 -0.20024703  3.0339681 #> 169004:   4.525922 -0.88462254    3.827279 -0.620947819  0.07227267  2.9683779 #>           CD4_asinh     Sample  Group  Batch FlowSOM_cluster #>               <num>     <char> <char> <char>           <num> #>      1:  0.66171351 01_Mock_01   Mock      A              23 #>      2:  0.30263135 01_Mock_01   Mock      A              55 #>      3:  0.65846851 01_Mock_01   Mock      A              64 #>      4:  0.24725691 01_Mock_01   Mock      A              53 #>      5:  0.78456678 01_Mock_01   Mock      A             110 #>     ---                                                      #> 169000:  0.95239703  12_WNV_06    WNV      A              72 #> 169001:  0.31090687  12_WNV_06    WNV      A              46 #> 169002: -0.43920651  12_WNV_06    WNV      A             133 #> 169003:  0.06163746  12_WNV_06    WNV      A             133 #> 169004: -0.03184782  12_WNV_06    WNV      A             103 #>         FlowSOM_metacluster        Population     UMAP_X    UMAP_Y NK11_zscore #>                      <fctr>            <char>      <num>     <num>       <num> #>      1:                   2         Microglia -2.3603757  6.201213 -0.31824725 #>      2:                   2         Microglia  2.7505242  7.119595 -0.31760502 #>      3:                   2         Microglia -2.9486033  4.012670 -0.29978628 #>      4:                   2         Microglia  0.6482904  6.481466  0.03486128 #>      5:                   4          NK cells -2.3941295  6.975885  0.11728748 #>     ---                                                                        #> 169000:                   3 Infil Macrophages -2.9640724 -5.058265  0.63247663 #> 169001:                   3 Infil Macrophages -1.2644785 -3.555824 -0.37586546 #> 169002:                   3 Infil Macrophages -2.3592682 -2.429467 -0.56636423 #> 169003:                   3 Infil Macrophages -1.9531062 -4.049705 -0.09273353 #> 169004:                   3 Infil Macrophages -0.7404098 -4.686928  0.44429721 #>          CD4_zscore #>               <num> #>      1: -0.08665135 #>      2: -0.14668865 #>      3: -0.08724280 #>      4: -0.15523601 #>      5: -0.06338311 #>     ---             #> 169000: -0.02837176 #> 169001: -0.14539989 #> 169002: -0.25979547 #> 169003: -0.18320398 #> 169004: -0.19711005"},{"path":"http://immunedynamics.io/spectre/reference/fast.colour.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"DEPRECATED fast colour plot — fast.colour.plot","title":"DEPRECATED fast colour plot — fast.colour.plot","text":"Please use make.colour.plot(fast = TRUE) instead.","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.colour.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DEPRECATED fast colour plot — fast.colour.plot","text":"","code":"fast.colour.plot(   dat,   x.axis,   y.axis,   col.axis = NULL,   col.type = \"continuous\",   add.label = FALSE,   hex = FALSE,   hex.bins = 30,   colours = \"spectral\",   col.min.threshold = 0.01,   col.max.threshold = 0.995,   align.xy.by = dat,   align.col.by = dat,   regression.line = NULL,   title = col.axis,   filename = NULL,   dot.size = 1,   plot.width = 9,   plot.height = 7,   nudge_x = 0.5,   nudge_y = 0.5,   square = TRUE,   legend.loc = \"right\",   save.to.disk = TRUE,   path = getwd(),   blank.axis = FALSE,   col.tab = NULL )"},{"path":"http://immunedynamics.io/spectre/reference/fast.colour.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DEPRECATED fast colour plot — fast.colour.plot","text":"dat DEFAULT. data.table Input sample. x.axis DEFAULT. Character. Column X axis. y.axis DEFAULT. Character. Column Y axis. col.axis DEFAULT = NULL. specified, plot coloured density. provide character name column (e.g. \"BV605.Ly6C\", \"Group\", \"FlowSOM_metacluster\" etc), point coloured value column. col.type DEFAULT = \"continuous\". Can also \"factor\". add.label DEFAULT = FALSE. Adds labels plot centroid factor. works col.type = \"factor\". hex DEFAULT = FALSE. Whether split data bins show average expression bin. Currently works specifying col.axis, work density plots. hex.bins DEFAULT = 30. Number bins split . used hex TRUE. colours DEFAULT = \"spectral\". used type = 'colour', ignored type = 'factor'. Specify colour scheme. Can \"jet\", \"spectral\", \"viridis\", \"inferno\", \"magma\", \"BuPu\". Can also provide data.table first column factors, second column corresponding colour code. col.min.threshold DEFAULT = 0.01. Numeric. Define minimum threshold colour scale. Values limit coloured chosen minimum threshold. col.max.threshold DEFAULT = 0.995 Numeric. Define maximum threshold colour scale. Values limit coloured chosen maximum threshold. align.xy.DEFAULT = dat. data.table Sample use determine minimum maximum X Y axis values. align.col.DEFAULT = dat. data.table. Sample use determine minimum maximum colour values. regression.line DEFAULT = NULL. Regression line add show trend data. passed ggplot2::geom_smooth function, accepts either NULL character vector, e.g. \"lm\", \"glm\", \"gam\", \"loess\" function. title DEFAULT = col.axis. Character. Title plot. filename DEFAULT = NULL. Character. name file save plot . dot.size DEFAULT = 1. Numeric. Size dots. plot.width DEFAULT = 9. Width ggplot saved disk. plot.height DEFAULT = 7. Height ggplot saved disk. nudge_x DEFAULT = 0.5. add.label = TRUE, distance label shifted centroid point X axis. nudge_y DEFAULT = 0.5. add.label = TRUE, distance label shifted centroid point Y axis. square DEFAULT = TRUE. Ensures plot saved square. Set FALSE want plot different X Y lengths. legend.loc DEFAULT = 'right'. default plot legends right hand side. Can specify legend location \"bottom\" desired, 'none' remove entirely. save..disk DEFAULT = TRUE. save ggplot disk. FALSE, show ggplot. path DEFAULT = getwd(). location save ggplot. default, save current working directory. Can overidden. blank.axis DEFAULT = FALSE Logical, want minimalist graph?","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.colour.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DEPRECATED fast colour plot — fast.colour.plot","text":"Create FAST dot plot (X vs Y) coloured selected continuous  (e.g. marker expression) factorial (e..g. cluster, group) column. function allows create coloured XY plot cell coloured selected column. Typically used plot cells tSNE1/2 UMAP1/2 coloured select cellular markers clusters, samples, groups etc.","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.colour.plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DEPRECATED fast colour plot — fast.colour.plot","text":"https://sydneycytometry.org.au/spectre","code":""},{"path":[]},{"path":"http://immunedynamics.io/spectre/reference/fast.colour.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DEPRECATED fast colour plot — fast.colour.plot","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au Givanna Putri","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.colour.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DEPRECATED fast colour plot — fast.colour.plot","text":"","code":"# Load packages library(Spectre) cell.dat <- Spectre::demo.umap #> Error: 'demo.umap' is not an exported object from 'namespace:Spectre' cell.dat <- as.data.table(cell.dat) #> Error: object 'cell.dat' not found  # Draw plot Spectre::fast.colour.plot(   dat = cell.dat,   x.axis = \"UMAP_42_X\",   y.axis = \"UMAP_42_Y\",   col.axis = \"BV605.Ly6C\" ) #> Warning: `fast.colour.plot()` was deprecated in Spectre 1.3.0. #> ℹ fast.colour.plot() will be removed in the next version. Please use #>   make.colour.plot(fast = TRUE) instead. #> Error: object 'cell.dat' not found"},{"path":"http://immunedynamics.io/spectre/reference/fast.multi.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"DEPRECATED fast multi plot — fast.multi.plot","title":"DEPRECATED fast multi plot — fast.multi.plot","text":"Please use make.multi.plot(fast = TRUE) instead.","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.multi.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DEPRECATED fast multi plot — fast.multi.plot","text":"","code":"fast.multi.plot(dat, x.axis, y.axis, plot.by, divide.by, add.density, col.type, figure.title, align.xy.by, align.col.by, colours, dot.size, col.min.threshold, col.max.threshold, path, plot.width, plot.height, blank.axis, save.each.plot)"},{"path":"http://immunedynamics.io/spectre/reference/fast.multi.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DEPRECATED fast multi plot — fast.multi.plot","text":"dat DEFAULT. data frame containing data wish plot x.axis DEFAULT. X axis y.axis DEFAULT. Y axis plot.DEFAULT. vector character names columns wish plot. divide.DEFAULT = NULL. can specify character name column wish use divide dataset. add.density DEFAULT = FALSE. Can specify add density plot end series colour plots hex DEFAULT = FALSE. Whether split data bins show average expression bin. Currently work density plots, features plot.. hex.bins DEFAULT = 30. Number bins split . used hex TRUE. col.type DEFAULT = \"continuous\". Can also \"factor\". figure.title DEFAULT = \"Multi plot\". Also used prefix saved file name. global.xy DEFAULT = TRUE. Defines limits X Y based whole dataset. FALSE, plot X & Y limits scale individually. global.col DEFAULT = TRUE. Defines limits colour axis based whole dataset. FALSE, plot colour limit scales individually. colours DEFAULTS 'spectral'. colour scheme want use. used type = 'colour', ignored type = 'factor'. Can 'jet', 'spectral', 'viridis', 'inferno', 'magma', \"BuPu\". dot.size DEFAULT = 1. Numeric. Size dots. col.min.threshold DEFAULT = 0.01. Numeric. Define minimum threshold colour scale. Values limit coloured chosen minimum threshold. col.max.threshold DEFAULT = 0.995 Numeric. Define maximum threshold colour scale. Values limit coloured chosen maximum threshold. path DEFAULT = getwd() – .e. current working directory. Path desired output directory plot.width DEFAULT = 9. plot.height DEFAULT = 7. blank.axis DEFAULT = FALSE. Logical. want minimalist graph? save..plot DEFAULT = FALSE. Logical. want save plot?","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.multi.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DEPRECATED fast multi plot — fast.multi.plot","text":"Method create multiple plots marker. function allows create grid plots, cells plotted series columns, /subsetted certain factor (e.g. one sample per plot). Makes use Spectre functions fast.colour.plot make.density.plot.","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.multi.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DEPRECATED fast multi plot — fast.multi.plot","text":"Thomas Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/fast.multi.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DEPRECATED fast multi plot — fast.multi.plot","text":"","code":"# Create grid of plots on demonstration data Spectre::fast.multi.plot(dat = as.data.table(Spectre::demo.umap),                           x.axis = \"UMAP_42_X\",                           y.axis = \"UMAP_42_Y\",                           plot.by = c(\"BV605.Ly6C\", \"BUV737.B220\", \"AF700.CD45\")) #> Warning: `fast.multi.plot()` was deprecated in Spectre 1.3.0. #> ℹ fast.multi.plot() will be removed in the next version. Please use #>   make.multi.plot(fast = TRUE) instead. #> Loading required package: ggplot2 #> Loading required package: colorRamps #> Loading required package: ggthemes #> Loading required package: ggpointdensity #> Loading required package: scattermore #> Error: 'demo.umap' is not an exported object from 'namespace:Spectre'"},{"path":"http://immunedynamics.io/spectre/reference/make.autograph.html","id":null,"dir":"Reference","previous_headings":"","what":"make.autograph - Creates plots using ggplot2 — make.autograph","title":"make.autograph - Creates plots using ggplot2 — make.autograph","text":"function allows generate quantitative plots data. Creates scatter plots. interested generating plots (bar graphs) adding statistics, recommend reading using 'ggplot2' (info https://ggplot2.tidyverse.org/). Uses package 'ggplot2' generate plots, 'data.table' manipulate data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.autograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make.autograph - Creates plots using ggplot2 — make.autograph","text":"","code":"make.autograph(dat, x.axis, y.axis, colour.by, colours,  y.axis.label, grp.order, title, filename, scale, dot.size, width,  height, path)"},{"path":"http://immunedynamics.io/spectre/reference/make.autograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make.autograph - Creates plots using ggplot2 — make.autograph","text":"dat DEFAULT. data.frame. x.axis DEFAULT. Character numeric. Selects column specify x-axis. y.axis DEFAULT. Character numeric. Selects column specify y-axis. colour.DEFAULT = x.axis. Character, column name. Selects column determine differentiator colour plots. y.axis.label DEFAULT. Character. Specify y-axis label. Can \"\" one desired. grp.order DEFAULT = NULL. String characters numbers. Specify order group x-axis. colours DEFAULT = NULL. String characters. determine colours differentiate colours specified 'colour.'. my_comparisons DEFAULT = NULL. list containing vectors – pair groups comparison. Variance_test DEFAULT = NULL. Can 'wilcox.test' (non-parametric) 't.test' (parametric) Pairwise_test DEFAULT = NULL. Can 'kruskal.test' (non-parametric) 'anova' (parametric) title DEFAULT = paste0(y.axis.label, \" - \", y.axis). Character. Specify title plot graph. Default combines 'y.axis.label' 'y.axis'. subtitle DEFAULT = NULL. Plot subtitle. filename DEFAULT = paste0(y.axis.label, \" - \", y.axis, \".pdf\"). Character. Specify name plot exported . Default combines 'y.axis.label' 'y.axis'. Make sure end \".pdf\" file correctly saved. violin DEFAULT = TRUE. Add violin plot underneath data points. scale DEFAULT = \"lin\". Character. Select y-axis scale. Can also \"sci\". dot.size DEFAULT = 5. Numeric. Specify size dots plot. width DEFAULT = 5. Numeric. Specify width plot. height DEFAULT = 5. Numeric. Specify height plot. max.y DEFAULT = 1.4. Multiplier plot heigh – allowing room stats. path DEFAULT = getwd(). location save plots. default, save current working directory. Can overidden.","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.autograph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"make.autograph - Creates plots using ggplot2 — make.autograph","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.autograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make.autograph - Creates plots using ggplot2 — make.autograph","text":"","code":"dat <- data.frame(Samples = c(\"Mock_01\", \"Mock_02\", \"Mock_03\", \"WNV_01\", \"WNV_02\", \"WNV_03\"),                   Group = c(rep(\"Mock\", 3), rep(\"WNV\", 3)),                   Tcells = c(20, 40, 30, 60, 70, 80),                   Bcells = c(90, 95, 70, 20, 15, 30),                   Batch = c(1,2,1,3,2,1)                   )  Spectre::make.autograph(dat = dat,                         x.axis = \"Group\",                         y.axis = \"Tcells\",                         colour.by = \"Batch\",                         colours = c(\"Black\", \"Red\", \"Blue\"),                         y.axis.label = \"Proportion\"                         ) #> Loading required package: ggpubr #> AutoGraph for `Proportion - Tcells` started #> AutoGraph - setup started #> AutoGraph - setup complete #> AutoGraph - plotting started #> AutoGraph - adding violin plot #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> ℹ The deprecated feature was likely used in the Spectre package. #>   Please report the issue at #>   <https://github.com/ImmuneDynamics/Spectre/issues>. #> Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. #> ℹ Please use the `linewidth` argument instead. #> ℹ The deprecated feature was likely used in the Spectre package. #>   Please report the issue at #>   <https://github.com/ImmuneDynamics/Spectre/issues>. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> AutoGraph for `Proportion - Tcells` saved to disk #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes. #> Warning: Groups with fewer than two datapoints have been dropped. #> ℹ Set `drop = FALSE` to consider such groups for position adjustment purposes."},{"path":"http://immunedynamics.io/spectre/reference/make.colour.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make colour plot — make.colour.plot","title":"Make colour plot — make.colour.plot","text":"Create dot plot (e.g., UMAP tSNE) cells, coloured continuous variable (e.g., marker expression) factor (e.g., cluster, group).","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.colour.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make colour plot — make.colour.plot","text":"","code":"make.colour.plot(dat, x.axis, y.axis)"},{"path":"http://immunedynamics.io/spectre/reference/make.colour.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make colour plot — make.colour.plot","text":"dat data.table containing data plot. x.axis Character. Column name x-axis. y.axis Character. Column name y-axis. col.axis Character NULL. Column name colouring points. NULL, points coloured density. col.type Character. \"continuous\" (default) \"factor\". Determines col.axis interpreted. add.label Logical. TRUE col.type = \"factor\", adds labels centroid group. hex Logical. TRUE, uses hex binning (continuous colour plots). hex.bins Integer. Number hex bins hex = TRUE. colours Character. Colour scheme continuous plots. Options available : \"jet\", options RColorBrewer::brewer.pal.info, options viridis pallete. Default \"spectral\". col.min.threshold Numeric. Minimum quantile colour scale (continuous). col.max.threshold Numeric. Maximum quantile colour scale (continuous). align.xy.data.table. Data use aligning x/y axis limits. align.col.data.table. Data use aligning colour scale limits. regression.line Character NULL. NULL, adds regression line (\"lm\", \"loess\", etc.). title Character NULL. Plot title. Defaults col.axis. filename Character NULL. File name saving plot. NULL, name generated automatically. dot.size Numeric. Size points. plot.width Numeric. Width saved plot (inches). plot.height Numeric. Height saved plot (inches). nudge_x, nudge_y Numeric. Amount nudge centroid labels (add.label = TRUE). square Logical. TRUE, enforces square aspect ratio. legend.loc Character. Legend position: \"right\" (default), \"bottom\", \"top\", \"left\", \"none\". save..disk Logical. TRUE (default), saves plot disk. FALSE, displays plot. path Character. Directory save plot. blank.axis Logical. TRUE, produces minimalist plot axis lines labels. fast Logical. TRUE, uses scattermore faster plotting large datasets. Note, reduce resolution plot. works col.axis specified hex = FALSE.","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.colour.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make colour plot — make.colour.plot","text":"ggplot2 object representing plot.","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.colour.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make colour plot — make.colour.plot","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au Givanna Putri","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.colour.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make colour plot — make.colour.plot","text":"","code":"Spectre::make.colour.plot(     dat = Spectre::demo.clustered,     x.axis = \"UMAP_X\",     y.axis = \"UMAP_Y\",     col.axis = \"CD4_asinh\" )"},{"path":"http://immunedynamics.io/spectre/reference/make.multi.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make multiple plots for multiple columns and/or multiple sample/group/clusters — make.multi.plot","title":"Make multiple plots for multiple columns and/or multiple sample/group/clusters — make.multi.plot","text":"Method create multiple plots marker. function allows create grid plots, cells plotted series columns, /subsetted certain factor (e.g. one sample per plot). Makes use Spectre functions make.colour.plot make.density.plot.","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.multi.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make multiple plots for multiple columns and/or multiple sample/group/clusters — make.multi.plot","text":"","code":"make.multi.plot(dat, x.axis, y.axis, plot.by, divide.by, add.density,  col.type, figure.title, align.xy.by, align.col.by, colours, dot.size,  col.min.threshold, col.max.threshold, path, plot.width, plot.height,  blank.axis, save.each.plot)"},{"path":"http://immunedynamics.io/spectre/reference/make.multi.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make multiple plots for multiple columns and/or multiple sample/group/clusters — make.multi.plot","text":"dat DEFAULT. data frame containing data wish plot x.axis DEFAULT. X axis y.axis DEFAULT. Y axis plot.DEFAULT. vector character names columns wish plot. divide.DEFAULT = NULL. can specify character name column wish use divide dataset. add.density DEFAULT = FALSE. Can specify add density plot end series colour plots hex DEFAULT = FALSE. Whether split data bins show average expression bin. Currently work density plots, features plot.. hex.bins DEFAULT = 30. Number bins split . used hex TRUE. col.type DEFAULT = \"continuous\". Can also \"factor\". figure.title DEFAULT = \"Multi plot\". Also used prefix saved file name. global.xy DEFAULT = TRUE. Defines limits X Y based whole dataset. FALSE, plot X & Y limits scale individually. global.col DEFAULT = TRUE. Defines limits colour axis based whole dataset. FALSE, plot colour limit scales individually. align.xy.DEFAULT = dat. Align X Y dataset. default based total dataset. align.col.DEFAULT = dat. Align colour dataset. default based total dataset. colours DEFAULTS 'spectral'. colour scheme want use. used type = 'colour', ignored type = 'factor'. Can 'jet', 'spectral', 'viridis', 'inferno', 'magma', \"BuPu\". dot.size DEFAULT = 1. Numeric. Size dots. col.min.threshold DEFAULT = 0.01. Numeric. Define minimum threshold colour scale. Values limit coloured chosen minimum threshold. col.max.threshold DEFAULT = 0.995 Numeric. Define maximum threshold colour scale. Values limit coloured chosen maximum threshold. path DEFAULT = getwd() – .e. current working directory. Path desired output directory plot.width DEFAULT = 9. plot.height DEFAULT = 7. blank.axis DEFAULT = FALSE. Logical. want minimalist graph? save..plot DEFAULT = FALSE. Logical. want save plot? add.label Logical. TRUE col.type = \"factor\", adds labels centroid group. fast Logical. TRUE, uses scattermore faster plotting large datasets. Note, reduce resolution plot. works col.axis specified hex = FALSE. legend.loc Character. Legend position: \"right\" (default), \"bottom\", \"top\", \"left\", \"none\".","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.multi.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make multiple plots for multiple columns and/or multiple sample/group/clusters — make.multi.plot","text":"Thomas Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au Givanna Putri","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.multi.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make multiple plots for multiple columns and/or multiple sample/group/clusters — make.multi.plot","text":"","code":"Spectre::make.multi.plot(dat = Spectre::demo.clustered,                           x.axis = \"UMAP_X\",                           y.axis = \"UMAP_Y\",                           plot.by = c(\"Ly6C_asinh\", \"B220_asinh\", \"CD45_asinh\"))     #> Check your working directory for a new .png called 'Multi plot.png'"},{"path":"http://immunedynamics.io/spectre/reference/make.pheatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"make.pheatmap - Create a 'pretty' heatmap (pheatmap) — make.pheatmap","title":"make.pheatmap - Create a 'pretty' heatmap (pheatmap) — make.pheatmap","text":"function allows create coloured heatmap clusters vs markers (coloured MFI) clusters vs samples (coloured MFI cell counts). Can set plot 'fold-change' values (.fold = TRUE) provided log2. make.pheatmap wrapper around pheatmap function pheatmap. Also uses packages 'RColorBrewer' 'scales' colour customisation.","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.pheatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make.pheatmap - Create a 'pretty' heatmap (pheatmap) — make.pheatmap","text":"","code":"make.pheatmap(dat, sample.col, plot.cols, annot.cols, file.name,  plot.title, transpose, is.fold, fold.range, normalise, dendrograms,  row.sep, col.sep, cell.size, standard.colours, path)"},{"path":"http://immunedynamics.io/spectre/reference/make.pheatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make.pheatmap - Create a 'pretty' heatmap (pheatmap) — make.pheatmap","text":"dat DEFAULT. data.frame. Clusters/populations vs markers (MFI) Clusters/populations vs samples (MFI cell numbers). sample.col DEFAULT. Character. Specify name column indicates samples. rows heatmap. plot.cols DEFAULT. Character vector. Name columns wish plot heatmap. columns heatmap. annot.cols DEFAULT = NULL. Character. Columns contain values want plot heatmap, e.g. sample name, group name, Live/Dead etc. file.name DEFAULT = paste0(\"Pheatmap \", sample.col, \".png\"). Character. want call file, including extension. plot.title DEFAULT = paste0(sample.col, \" heatmap\"). Character. transpose DEFAULT = FALSE. Logical. want transpose heatmap. normalise DEFAULT = TRUE. Logical. applies standard heatmaps (.e. .fold = FALSE). TRUE normalise column 0 1, FALSE plot raw values. .fold DEFAULT = FALSE. Logical. TRUE fold-change heatmap, FALSE normal values heatmap. fold.range DEFAULT = NULL. Numeric vector. fold-change heatmaps, maxium minimum values plotted. Example: max 3, minimum -3 b c(3,-3). Defaults NULL (use max min within dataset). dendrograms DEFAULT = \"\". Character. want include dendrograms columns/rows. Can \"\", \"row\", \"column\", \"none. cutree_rows DEFAULT = 1 (.e. divisions). Divides rows based level dendrogram branches, dendrograms = '' 'row'. cutree_cols DEFAULT = 1 (.e. divisions). Divides columns based level dendrogram branches, dendrograms = '' 'column' row.sep DEFAULT = c(). Numeric. used clustering rows. col.sep DEFAULT = c(). Numeric. used clustering columns cell.size DEFAULT = 15. Numeric. standard.colours DEFAULT = \"BuPu\". Character. Can also \"RdYlBu\", \"YlGnBu\", \"viridis\", \"magma\", \"inferno\", \"spectral\", \"Blues\", \"Reds\", \"Greys\", \"rev(RdBu)\". fold.colours DEFAULT = \"Spectre\". Character, custom blue:black:red fold-change colour scheme. Can also \"RdYlBu\", \"YlGnBu\", \"viridis\", \"magma\", \"inferno\", \"spectral\", \"Blues\", \"Reds\", \"Greys\", \"rev(RdBu)\". path DEFAULT = NULL. location save plots. default, save current working directory. Can overidden entering sub-directory name (e.g. subdirectory working directory called 'plots', can enter ).","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.pheatmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"make.pheatmap - Create a 'pretty' heatmap (pheatmap) — make.pheatmap","text":"https://sydneycytometry.org.au/spectre. Helpful examples https://davetang.org/muse/2018/05/15/making--heatmap--r---pheatmap-package/","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.pheatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"make.pheatmap - Create a 'pretty' heatmap (pheatmap) — make.pheatmap","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.pheatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make.pheatmap - Create a 'pretty' heatmap (pheatmap) — make.pheatmap","text":"","code":"# Create some sample data library(data.table)  dat <- Spectre::demo.clustered  ## MFI cluster vs marker heatmap  # mock MFI data per sample, population. demo.exp <- Spectre::demo.clustered[, lapply(.SD, mean), .SDcols = c(\"CD45_asinh\", \"Ly6G_asinh\", \"CD11b_asinh\", \"B220_asinh\", \"CD8a_asinh\"), by = Population]   Spectre::make.pheatmap(dat = demo.exp,                        file.name = \"Expression pheatmap.png\",                        plot.title = \"Expression\",                        sample.col = \"Population\",                        plot.cols = c(\"CD45_asinh\", \"Ly6G_asinh\", \"CD11b_asinh\", \"B220_asinh\", \"CD8a_asinh\")) #> A pheatmap has been saved to your working directoryExpression pheatmap.png  # create mock population count per sample demo.sum <- Spectre::demo.clustered[, .(count = .N), by = c(\"Sample\", \"Population\", \"Group\", \"Batch\")] demo.sum <- dcast(demo.sum, Sample+Group+Batch ~ Population, value.var='count')  ## Z-scrore of fold-change type heatmap z.dat <- do.zscore(dat = demo.sum,                    use.cols = c(\"CD4 T cells\", \"CD8 T cells\", \"Infil Macrophages\", \"Microglia\", \"NK cells\", \"Neutrophils\"),                    replace = TRUE)  Spectre::make.pheatmap(dat = z.dat,                        file.name = \"z-score.png\",                        plot.title = \"z-score\",                        sample.col = \"Sample\",                        plot.cols = c(\"CD4 T cells\", \"CD8 T cells\", \"Infil Macrophages\", \"Microglia\", \"NK cells\", \"Neutrophils\"),                        annot.cols = c(\"Group\", \"Batch\"),                        is.fold = TRUE,                        fold.range = c(3,-3)                        ) #> A pheatmap has been saved to your working directoryz-score.png"},{"path":"http://immunedynamics.io/spectre/reference/make.spatial.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"make.spatial.plot — make.spatial.plot","title":"make.spatial.plot — make.spatial.plot","text":"make.spatial.plot","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.spatial.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make.spatial.plot — make.spatial.plot","text":"","code":"make.spatial.plot(   dat,   image.roi,   image.channel,   mask.outlines = NULL,   cell.dat = NULL,   cell.col = NULL,   image.y.flip = TRUE,   image.mask.size = 0.1,   image.mask.colour = \"gold\",   image.min.threshold = 0,   image.max.threshold = 0.99,   image.blank = FALSE,   cell.x = \"x\",   cell.y = \"y\",   cell.col.type = \"numeric\",   cell.colours = \"spectral\",   cell.col.min.threshold = 0.01,   cell.col.max.threshold = 0.995,   title = paste0(image.roi),   dot.size = 1,   dot.alpha = 1,   align.xy.by = cell.dat,   align.col.by = cell.dat,   save.to.disk = TRUE,   path = getwd(),   plot.width = 9,   plot.height = 7,   blank.axis = FALSE )"},{"path":"http://immunedynamics.io/spectre/reference/make.spatial.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make.spatial.plot — make.spatial.plot","text":"dat DEFAULT.spatial data list image.roi DEFAULT.name ROI plot image.channel DEFAULT.Name channel plot mask.outlines DEFAULT = NULL. Name mask outlines cell.dat DEFAULT = NULL. Character name cellular dataset spatial data list, data.table object. cell.col DEFAULT = NULL. Name cellular dataset colour points image.y.flip DEFAULT = TRUE. Flips Y-axis orientation. image.mask.size DEFAULT = 0.1 image.mask.colour DEFAULT = \"gold\" image.min.threshold DEFAULT = 0.00. Lower threshold plot signal. Values target clipped. image.max.threshold DEFAULT = 0.99. Upper threshold plot signal. Values target clipped. image.blank DEFAULT = FALSE. blank plot image. cell.x DEFAULT = \"x\". Column name 'x' coordinate data.table cell.y DEFAULT = \"y\". Column name 'y' coordinate data.table cell.col.type DEFAULT= \"numeric\". Can 'factor'. cell.colours = DEFAULT = \"spectral\". cell.col.min.threshold = DEFAULT = 0.01. Values target clipped. cell.col.max.threshold = DEFAULT = 0.995. Values target clipped. title DEFAULT = paste0(image.roi) dot.size DEFAULT = 1 dot.alpha DEFAULT = 1 align.xy.DEFAULT = cell.dat align.col.DEFAULT = cell.dat save..disk DEFAULT = TRUE path DEFAULT = getwd(). Path saving image files plot.width DEFAULT = 9 plot.height DEFAULT = 7 blank.axis DEFAULT = FALSE","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.volcano.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an enhanced volcano plot — make.volcano.plot","title":"Make an enhanced volcano plot — make.volcano.plot","text":"Make enhanced volcano plot","code":""},{"path":"http://immunedynamics.io/spectre/reference/make.volcano.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an enhanced volcano plot — make.volcano.plot","text":"","code":"make.volcano.plot(   dat.p,   dat.fc,   vars,   title,   subtitle = NULL,   xlim = c(-6, 8),   ylim = c(0, 4),   path = getwd(),   width = 7,   height = 8,   pCutoff = 0.05,   FCcutoff = 0.26,   hline = c(0.01, 0.05),   hlineCol = c(\"grey75\", \"grey25\"),   pointSize = 3,   labSize = 3,   col = c(\"black\", \"black\", \"blue\", \"red3\"),   colAlpha = 1,   ... )"},{"path":"http://immunedynamics.io/spectre/reference/package.check.html","id":null,"dir":"Reference","previous_headings":"","what":"package.check - a function to check the installation of all required packages. — package.check","title":"package.check - a function to check the installation of all required packages. — package.check","text":"function allows check see common use packages dependencies Spectre installed. See https://sydneycytometry.org.au/spectre usage instructions vignettes.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"package.check - a function to check the installation of all required packages. — package.check","text":"","code":"package.check(type = \"general\")"},{"path":"http://immunedynamics.io/spectre/reference/package.check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"package.check - a function to check the installation of all required packages. — package.check","text":"type DEFAULT = \"general\". \"general\", checks packages required general Spectre usage. \"spatial\", checks additional packages required spatial analysis. \"ML\", checks additional packages required machine-learing functionality.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"package.check - a function to check the installation of all required packages. — package.check","text":"returns error message one common use packages installed. Proceeds order package importance, first error message encountered returned.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.check.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"package.check - a function to check the installation of all required packages. — package.check","text":"https://sydneycytometry.org.au/spectre","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"package.check - a function to check the installation of all required packages. — package.check","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"package.check - a function to check the installation of all required packages. — package.check","text":"","code":"package.check() #> Package: Spectre #>  -- Version:           1.3.0 #>  -- Install date:      2025-09-18 12:35:36 UTC; runner #>  -- Install source:    local #>  -- R version:         R version 4.5.1 (2025-06-13) #>  -- OS:                Ubuntu 24.04.3 LTS #>  -- OS detail:         x86_64-pc-linux-gnu #>  -- Library path(s):       #>         /home/runner/work/_temp/Library #>         /opt/R/4.5.1/lib/R/site-library #>         /opt/R/4.5.1/lib/R/library #>                 #> Checking dependency packages... #>  -- All required packages are installed."},{"path":"http://immunedynamics.io/spectre/reference/package.install.html","id":null,"dir":"Reference","previous_headings":"","what":"package.install - a function to install packages required for Spectre. — package.install","title":"package.install - a function to install packages required for Spectre. — package.install","text":"function allows check see common use packages dependencies Spectre installed. install package installed, update packages. See https://sydneycytometry.org.au/spectre usage instructions vignettes.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"package.install - a function to install packages required for Spectre. — package.install","text":"","code":"package.install(type = \"general\", update = FALSE)"},{"path":"http://immunedynamics.io/spectre/reference/package.install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"package.install - a function to install packages required for Spectre. — package.install","text":"type DEFAULT = \"general\". \"general\", checks packages required general Spectre usage. \"spatial\", checks additional packages required spatial analysis. update DEFAULT = FALSE. FALSE, install packages already installed – updates packages performed. TRUE, install update packages.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.install.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"package.install - a function to install packages required for Spectre. — package.install","text":"returns error message one common use packages installed. Proceeds order package importance, first error message encountered returned.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.install.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"package.install - a function to install packages required for Spectre. — package.install","text":"https://sydneycytometry.org.au/spectre","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.install.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"package.install - a function to install packages required for Spectre. — package.install","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.install.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"package.install - a function to install packages required for Spectre. — package.install","text":"","code":"package.install() #> Loading required package: plyr #>  #> Attaching package: ‘plyr’ #> The following object is masked from ‘package:ggpubr’: #>  #>     mutate #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:plyr’: #>  #>     arrange, count, desc, failwith, id, mutate, rename, summarise, #>     summarize #> The following object is masked from ‘package:Biobase’: #>  #>     combine #> The following objects are masked from ‘package:BiocGenerics’: #>  #>     combine, intersect, setdiff, setequal, union #> The following object is masked from ‘package:generics’: #>  #>     explain #> The following object is masked from ‘package:flowCore’: #>  #>     filter #> The following objects are masked from ‘package:data.table’: #>  #>     between, first, last #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Loading required package: tidyr #> Loading required package: rstudioapi #> Loading required package: Rtsne #> Loading required package: umap #> Loading required package: gridExtra #>  #> Attaching package: ‘gridExtra’ #> The following object is masked from ‘package:dplyr’: #>  #>     combine #> The following object is masked from ‘package:Biobase’: #>  #>     combine #> The following object is masked from ‘package:BiocGenerics’: #>  #>     combine #> Loading required package: factoextra #> Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa #> Loading required package: reticulate #> Loading required package: caret #> Loading required package: lattice #>  #> Attaching package: ‘caret’ #> The following object is masked from ‘package:generics’: #>  #>     train #> Loading required package: class #> Loading required package: flowViz #> Loading required package: FlowSOM #> Loading required package: igraph #>  #> Attaching package: ‘igraph’ #> The following object is masked from ‘package:class’: #>  #>     knn #> The following object is masked from ‘package:tidyr’: #>  #>     crossing #> The following objects are masked from ‘package:dplyr’: #>  #>     as_data_frame, groups, union #> The following objects are masked from ‘package:BiocGenerics’: #>  #>     normalize, path, union #> The following objects are masked from ‘package:generics’: #>  #>     components, union #> The following object is masked from ‘package:flowCore’: #>  #>     normalize #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union #> Thanks for using FlowSOM. From version 2.1.4 on, the scale  #> parameter in the FlowSOM function defaults to FALSE #>  #> Attaching package: ‘FlowSOM’ #> The following object is masked from ‘package:class’: #>  #>     SOM package.install(type = 'spatial') #> Loading required package: raster #> Loading required package: sp #>  #> Attaching package: ‘raster’ #> The following object is masked from ‘package:dplyr’: #>  #>     select #> Loading required package: tiff #> Loading required package: rgeos #> Warning: there is no package called ‘rgeos’ #> Installing package into ‘/home/runner/work/_temp/Library’ #> (as ‘lib’ is unspecified) #> Warning: package ‘rgeos’ is not available for this version of R #>  #> A version of this package for your version of R might be available elsewhere, #> see the ideas at #> https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages #> Loading required package: exactextractr #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE #> Loading required package: stars #> Loading required package: abind #> Loading required package: qs #> qs 0.27.3. Announcement: https://github.com/qsbase/qs/issues/103 #> Loading required package: s2"},{"path":"http://immunedynamics.io/spectre/reference/package.load.html","id":null,"dir":"Reference","previous_headings":"","what":"package.load - a function to load (library) all required packages. — package.load","title":"package.load - a function to load (library) all required packages. — package.load","text":"function allows load common use packages dependencies Spectre. See https://sydneycytometry.org.au/spectre usage instructions vignettes.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"package.load - a function to load (library) all required packages. — package.load","text":"","code":"package.load(type = \"general\")"},{"path":"http://immunedynamics.io/spectre/reference/package.load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"package.load - a function to load (library) all required packages. — package.load","text":"type DEFAULT = \"general\". \"general\", loads packages required general Spectre usage. \"spatial\", loads  additional packages required spatial analysis. \"ML\", loads additional packages required machine-learing functionality.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"package.load - a function to load (library) all required packages. — package.load","text":"loads common use package libraries.","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.load.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"package.load - a function to load (library) all required packages. — package.load","text":"https://sydneycytometry.org.au/spectre","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.load.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"package.load - a function to load (library) all required packages. — package.load","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/package.load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"package.load - a function to load (library) all required packages. — package.load","text":"","code":"package.load() #> Loading required package: dendsort #> Loading required package: gtools #>  #> Attaching package: ‘gtools’ #> The following object is masked from ‘package:igraph’: #>  #>     permute #> Loading required package: irlba #> Loading required package: Matrix #>  #> Attaching package: ‘Matrix’ #> The following objects are masked from ‘package:tidyr’: #>  #>     expand, pack, unpack #> The following object is masked from ‘package:flowCore’: #>  #>     %&% #> Loading required package: parallel #> Loading required package: patchwork #>  #> Attaching package: ‘patchwork’ #> The following object is masked from ‘package:raster’: #>  #>     area #> Loading required package: rsvd #> Loading required package: uwot #>  #> Attaching package: ‘uwot’ #> The following object is masked from ‘package:umap’: #>  #>     umap #> Loading required package: viridis #> Loading required package: viridisLite #>  #> Attaching package: ‘viridis’ #> The following object is masked from ‘package:scales’: #>  #>     viridis_pal"},{"path":"http://immunedynamics.io/spectre/reference/prep.cytonorm.html","id":null,"dir":"Reference","previous_headings":"","what":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","title":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","text":"function allows prepare reference data ahead performing batch alignment.","code":""},{"path":"http://immunedynamics.io/spectre/reference/prep.cytonorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","text":"","code":"prep.cytonorm()"},{"path":"http://immunedynamics.io/spectre/reference/prep.cytonorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","text":"dat DEFAULT. data.table consisting 'refernece' data use train alignment algorithm cellular.cols DEFAULT. vector column names data.table contain 'cellular' markers cluster.cols DEFAULT. vector column names data.table contain markers wish use clusteirng batch.col DEFAULT. Name column contains batch names sample.col DEFAULT = NULL. Name column contains sample names dir DEFAULT = getwd(). Sets working directory operate . function involves reading/writing files, best set somewhere static case active working directory moves subfolder, return function runs error. xdim DEFAULT = 5. Size X-axis FlowSOM grid. ydim DEFAULT = 5. Size Y-axis FlowSOM grid. meta.k DEFAULT = 10. Number metaclusters. set 1, map cells single metacluster seed DEFAULT = 42. Seed reproducibility. mem.ctrl DEFAULT = TRUE. Allows function clear held memory occasion. n.cells DEFAULT = 10000000. Maxium cells allowed read prep.cytonorm functionality. Cells read file lesser n.cells / number files total number cells file.","code":""},{"path":"http://immunedynamics.io/spectre/reference/prep.cytonorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","text":"Returns object represents alignment model. preparation stage, contains FlowSOM object containing reference data. 'train.align' function can used calculate conversions batches metacluser.","code":""},{"path":"http://immunedynamics.io/spectre/reference/prep.cytonorm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","text":"Ashhurst, T. M., et al. (2019). https://www.ncbi.nlm.nih.gov/pubmed/31077106","code":""},{"path":"http://immunedynamics.io/spectre/reference/prep.cytonorm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/prep.cytonorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"prep.cytonorm - Prepare reference data into a FlowSOM object — prep.cytonorm","text":"","code":"# TBC # align.model <- prep.cytonorm()"},{"path":"http://immunedynamics.io/spectre/reference/read.files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read CSV or FCS files into a list. — read.files","title":"Read CSV or FCS files into a list. — read.files","text":"function allows read sample files (.csv .fcs) list, file saved data.table object.","code":""},{"path":"http://immunedynamics.io/spectre/reference/read.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read CSV or FCS files into a list. — read.files","text":"","code":"read.files(   file.loc = getwd(),   file.type = c(\".csv\", \".fcs\"),   files = NULL,   nrows = NULL,   do.embed.file.names = TRUE,   header = TRUE )"},{"path":"http://immunedynamics.io/spectre/reference/read.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read CSV or FCS files into a list. — read.files","text":"file.loc DEFAULT = getwd(). location files? file.type DEFAULT = \".csv\". type files want read. Can \".csv\" \".fcs\". files DEFAULT = NULL. vector selected file names import. nrows DEFAULT = NULL. Can specify numerical target number cells (rows) read file. Please note, order random FCS files. .embed.file.names DEFAULT = TRUE. want embed row (cell) file name name? header DEFAULT = TRUE. first line data contain column names? works file.type = \".csv\".","code":""},{"path":"http://immunedynamics.io/spectre/reference/read.files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read CSV or FCS files into a list. — read.files","text":"Returns list data.tables – one per file.","code":""},{"path":"http://immunedynamics.io/spectre/reference/read.files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read CSV or FCS files into a list. — read.files","text":"Ashhurst, T. M., et al. (2019). https://www.ncbi.nlm.nih.gov/pubmed/31077106","code":""},{"path":"http://immunedynamics.io/spectre/reference/read.files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read CSV or FCS files into a list. — read.files","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au Givanna Putri","code":""},{"path":"http://immunedynamics.io/spectre/reference/read.files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read CSV or FCS files into a list. — read.files","text":"","code":"# download sample data download.file(url='https://github.com/ImmuneDynamics/data/blob/main/msCNS.zip?raw=TRUE', destfile = 'msCNS.zip', mode = 'wb') unzip(zipfile = 'msCNS.zip') data.list <- read.files(file.loc = \"msCNS/data\", file.type = \".csv\", do.embed.file.names = TRUE) #> Reading CSV files... #> Reading CNS_Mock_01.csv #> Reading CNS_Mock_02.csv #> Reading CNS_Mock_03.csv #> Reading CNS_Mock_04.csv #> Reading CNS_Mock_05.csv #> Reading CNS_Mock_06.csv #> Reading CNS_WNV_D7_01.csv #> Reading CNS_WNV_D7_02.csv #> Reading CNS_WNV_D7_03.csv #> Reading CNS_WNV_D7_04.csv #> Reading CNS_WNV_D7_05.csv #> Reading CNS_WNV_D7_06.csv"},{"path":"http://immunedynamics.io/spectre/reference/read.spatial.files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TIFF files into R and and create spatial data object — read.spatial.files","title":"Read TIFF files into R and and create spatial data object — read.spatial.files","text":"Read TIFF files R create spatial data object","code":""},{"path":"http://immunedynamics.io/spectre/reference/read.spatial.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TIFF files into R and and create spatial data object — read.spatial.files","text":"","code":"read.spatial.files()"},{"path":"http://immunedynamics.io/spectre/reference/read.spatial.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TIFF files into R and and create spatial data object — read.spatial.files","text":"dir Directory location ROI files located correct.extent Correct extent minimum 0,0. Default TRUE flip.y Flip data arrangement y-axis. Default TRUE value.modifier Data modifier based image processing. Default 65535 lois Default = NULL. can provide list ROI folders read .","code":""},{"path":"http://immunedynamics.io/spectre/reference/read.spatial.files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read TIFF files into R and and create spatial data object — read.spatial.files","text":"Returns list spatial data objects.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.align.html","id":null,"dir":"Reference","previous_headings":"","what":"run.align - Run the alignment model on a target data.table — run.align","title":"run.align - Run the alignment model on a target data.table — run.align","text":"function allows prepare reference data ahead performing batch alignment, using CytofBatchAdjust functions","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run.align - Run the alignment model on a target data.table — run.align","text":"","code":"run.align()"},{"path":"http://immunedynamics.io/spectre/reference/run.align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run.align - Run the alignment model on a target data.table — run.align","text":"ref.dat DEFAULT. data.table consisting 'refernece' data use train alignment algorithm target.dat DEFAULT.data.table consisting 'target' data use align data batch.col DEFAULT. Column name data.table contains batch labels align.cols DEFAULT. Vector column names align. method DEFAULT = 'quantile'. Can 'quantile', 'SD', percentile indicated '50p' (50th percentile) '95p' (95th percentile) etc. append.name DEFAULT = \"_aligned\". appended column names containing aligned data dir DEFAULT = getwd(). Sets working directory operate . function involves reading/writing files, best set somewhere static case active working directory moves subfolder, return function runs error. mem.ctrl DEFAULT = TRUE. Allows function clear held memory occasion.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run.align - Run the alignment model on a target data.table — run.align","text":"Returns data.table aligned data added new columns.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.align.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run.align - Run the alignment model on a target data.table — run.align","text":"Ashhurst, T. M., et al. (2019). https://www.ncbi.nlm.nih.gov/pubmed/31077106","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.align.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run.align - Run the alignment model on a target data.table — run.align","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.cytonorm.html","id":null,"dir":"Reference","previous_headings":"","what":"run.cytonorm - Run the alignment model on a target data.table — run.cytonorm","title":"run.cytonorm - Run the alignment model on a target data.table — run.cytonorm","text":"function allows prepare reference data ahead performing batch alignment.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.cytonorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run.cytonorm - Run the alignment model on a target data.table — run.cytonorm","text":"","code":"run.align()"},{"path":"http://immunedynamics.io/spectre/reference/run.cytonorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run.cytonorm - Run the alignment model on a target data.table — run.cytonorm","text":"dat DEFAULT. data.table consisting 'refernece' data use train alignment algorithm model DEFAULT. batch alignment conversion model object created prep.align() train.align() functions. batch.col DEFAULT. Column name data.table contains batch labels append.name DEFAULT = \"_aligned\". appended column names containing aligned data dir DEFAULT = getwd(). Sets working directory operate . function involves reading/writing files, best set somewhere static case active working directory moves subfolder, return function runs error. mem.ctrl DEFAULT = TRUE. Allows function clear held memory occasion.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.cytonorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run.cytonorm - Run the alignment model on a target data.table — run.cytonorm","text":"Returns data.table aligned data added new columns.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.cytonorm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run.cytonorm - Run the alignment model on a target data.table — run.cytonorm","text":"Ashhurst, T. M., et al. (2019). https://www.ncbi.nlm.nih.gov/pubmed/31077106","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.cytonorm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run.cytonorm - Run the alignment model on a target data.table — run.cytonorm","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.fitsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Run FIt-SNE, Fourier Transform TSNE. — run.fitsne","title":"Run FIt-SNE, Fourier Transform TSNE. — run.fitsne","text":"Implementation FIt-SNE available https://github.com/KlugerLab/FIt-SNE. function uses fftRtsne run FIt-SNE.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.fitsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run FIt-SNE, Fourier Transform TSNE. — run.fitsne","text":"","code":"run.fitsne(dat, use.cols, seed = 42, fitsne.x.name = \"FItSNE_X\",  fitsne.y.name = \"FItSNE_Y\", dims = 2, perplexity = 30, theta = 0.5,  max_iter = 750, fft_not_bh = TRUE, ann_not_vptree = TRUE,   stop_early_exag_iter = 250, exaggeration_factor = 12.0,    no_momentum_during_exag = FALSE,start_late_exag_iter = -1,    late_exag_coeff = 1.0, mom_switch_iter = 250, momentum = 0.5,    final_momentum = 0.8, learning_rate = 'auto', n_trees = 50,    search_k = -1, nterms = 3, intervals_per_integer = 1,    min_num_intervals = 50, K = -1, sigma = -30, initialization = 'pca',   max_step_norm = 5, load_affinities = NULL, fast_tsne_path = NULL,    nthreads = 0, perplexity_list = NULL, get_costs = FALSE,  df = 1.0)"},{"path":"http://immunedynamics.io/spectre/reference/run.fitsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run FIt-SNE, Fourier Transform TSNE. — run.fitsne","text":"dat DEFAULT. Input data.table data.frame. use.cols DEFAULT. Vector column names numbers clustering. seed Default = 42. Seed value reproducibility. fitsne.x.name Default = \"FItSNE_X\". Character. Name FItSNE x-axis. fitsne.y.name Default = \"FItSNE_Y\". Character. Name FItSNE y-axis. dims Default = 2. Dimensionality embedding (reduced data). perplexity Default = 30. Perplexity used determine bandwidth Gaussian kernel input space theta Default = 0.5. exact t-SNE, set 0. non-zero, use either Barnes Hut FIt-SNE based nbody_algo. Barnes Hut, determines accuracy BH approximation. max_iter Default = 750. Number iterations t-SNE run. fft_not_bh Default = TRUE. theta nonzero, determines whether use FIt-SNE Barnes Hut approximation. ann_not_vptree Default = TRUE. Use vp-trees (bhtsne) approximate nearest neighbors (default). Set TRUE approximate nearest neighbors. stop_early_exag_iter Default = 250. switch early exaggeration. exaggeration_factor Default = 12. Coefficient early exaggeration (>1). no_momentum_during_exag Default = FALSE. Set 0 use momentum optimization tricks. Can set 1 plain, vanilla gradient descent (useful testing large exaggeration coefficients). start_late_exag_iter Default = -1. start late exaggeration. Set -1 default use late exaggeration. late_exag_coeff Default = 1. Late exaggeration coefficient. Set 1 default use late exaggeration. mom_switch_iter Default = 250. Iteration number switch momentum final_momentum. momentum Default = 0.5.Initial value momentum. final_momentum Default = 0.8. Value momentum use later optimisation. learning_rate Default = 'auto'. Set desired learning rate 'auto', sets learning rate N/exaggeration_factor N sample size, 200 N/exaggeration_factor < 200. n_trees Default = 50. using Annoy, number search trees use. search_k Default = -1. using Annoy, number nodes inspect search. Default -1 translate 3perplexityn_trees (K*n_trees using fixed sigma). nterms Default = 3. using FIt-SNE, number interpolation points per sub-interval. intervals_per_integer Default = 1. See min_num_intervals. min_num_intervals Default = 50. Let maxloc = ceil(max(max(X))) minloc = floor(min(min(X))). .e. points minloc^no_dims maxloc^no_dims interval/square. number intervals dimension either min_num_intervals ceil((maxloc - minloc)/intervals_per_integer), whichever larger. min_num_intervals must integer >0, intervals_per_integer must >0. Defaults min_num_intervals=50 intervals_per_integer = 1. K Default = -1. Number nearest neighbours get using fixed sigma. sigma Default = -30. Fixed sigma value use perplexity==-1. initialization Default = 'pca'. pca', 'random', N x no_dims array intialize solution. max_step_norm Default = 5. Maximum distance point allowed move one iteration. Larger steps clipped value. prevents possible instabilities gradient descent. Set -1 switch . load_affinities Default = NULL. 1, input similarities loaded file computed. 2, input similarities saved file. 0, affinities neither saved loaded. fast_tsne_path Default = NULL. Path FItSNE executable. nthreads Default = 0. Number threads use, set use available threads default. perplexity_list Default = NULL. perplexity==0 perplexity combination used values taken perplexity_list. get_costs Default = FALSE. Logical indicating whether KL-divergence costs computed every 50 iterations returned. df Default = 1.0. Positive numeric controls degree freedom t-distribution. actual degree freedom 2*df-1. standard t-SNE choice 1 degree freedom corresponds df=1. Large df approximates Gaussian kernel. df<1 corresponds heavier tails, can often resolve substructure embedding. See Kobak et al. (2019) details.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.fitsne.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run FIt-SNE, Fourier Transform TSNE. — run.fitsne","text":"Givanna Putri","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.fitsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run FIt-SNE, Fourier Transform TSNE. — run.fitsne","text":"","code":"if (FALSE) { # \\dontrun{ dat <- Spectre::demo.clustered dat.sub <- Spectre::do.subsample(dat, 30000) use.cols <- names(dat)[12:19] dat.reduced <- run.fitsne(dat = dat.sub, use.cols = use.cols) } # }"},{"path":"http://immunedynamics.io/spectre/reference/run.flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Run FlowSOM — run.flowsom","title":"Run FlowSOM — run.flowsom","text":"Method run FlowSOM clustering algorithm. function runs FlowSOM data.table cells (rows) vs markers (columns) new columns FlowSOM clusters metaclusters. Output data \"flowsom.res.original\" (clusters) \"flowsom.res.meta\" (metaclusters). Uses R packages \"FlowSOM\" clustering, \"flowCore\" handling .fcs files, \"Biobase\" creating flow frame, \"data.table\" handling data.table format.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run FlowSOM — run.flowsom","text":"","code":"run.flowsom(dat, use.cols, xdim=14, ydim=14, meta.k='auto',  max.meta=20, clust.seed=42, meta.seed=42, clust.name=\"FlowSOM_cluster\",  meta.clust.name=\"FlowSOM_metacluster\", mem.ctrl=TRUE, verbose=TRUE)"},{"path":"http://immunedynamics.io/spectre/reference/run.flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run FlowSOM — run.flowsom","text":"dat DEFAULT. data.frame. Input sample. use.cols DEFAULT. Vector column names use clustering. xdim DEFAULT = 14. Numeric. Number first level clusters across x-axis. xdim x ydim = total number first level FlowSOM clusters. ydim DEFAULT = 14. Numeric. Number first level clusters across y-axis. xdim x ydim = total number first level FlowSOM clusters. meta.k DEFAULT = 'auto'. set 'auto', number metaclusters determined automatically. Alternatively, can specify desired number metaclusters create. set zero (0), metaclusters created. max.meta DEFAULT = 20. used meta.k set 'auto'. parameter indicates maximum number metaclusters FlowSOM try determining optimal number metaclusters dataset. clust.seed DEFAULT = 42 Numeric. Clustering seed reproducibility. meta.seed DEFAULT = 42 Numeric. Metaclustering seed reproducibility. clust.name DEFAULT = \"FlowSOM_cluster\". Character. Name resulting 'cluster' parameter. meta.clust.name DEFAULT = \"FlowSOM_metacluster\". Character. Name resulting 'metacluster' parameter. mem.ctrl DEFAULT = TRUE. Runs gc() (garbage collection) number steps free memory released quickly enough. verbose DEFAULT = TRUE. Logical. Whether print progress messages.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.flowsom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run FlowSOM — run.flowsom","text":"Thomas Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run FlowSOM — run.flowsom","text":"","code":"# Run FlowSOM on demonstration dataset res <- Spectre::run.flowsom(Spectre::demo.clustered, use.cols = c(\"NK11_asinh\", \"CD3_asinh\",  \"CD45_asinh\", \"Ly6G_asinh\", \"CD11b_asinh\",  \"B220_asinh\", \"CD8a_asinh\", \"Ly6C_asinh\",  \"CD4_asinh\")) #> Preparing data #> Starting FlowSOM #> Freeing up memory #> Building SOM #> Mapping data to SOM #> Building MST #> Adding cluster labels to input dataset #> Warning: Column 'FlowSOM_cluster' already exists and will be replaced. #> Starting metaclustering #> Adding metacluster labels to input dataset #> Warning: Column 'FlowSOM_metacluster' already exists and will be replaced."},{"path":"http://immunedynamics.io/spectre/reference/run.harmony.html","id":null,"dir":"Reference","previous_headings":"","what":"run.harmony - dun Harmony alignment on a data.table — run.harmony","title":"run.harmony - dun Harmony alignment on a data.table — run.harmony","text":"function allows run 'Harmony' data alignment algorithm single cell cytometry data stored data.table","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.harmony.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run.harmony - dun Harmony alignment on a data.table — run.harmony","text":"","code":"run.harmony()"},{"path":"http://immunedynamics.io/spectre/reference/run.harmony.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run.harmony - dun Harmony alignment on a data.table — run.harmony","text":"dat DEFAULT. data.table data wish align align.cols default. columns wish align. cytometry data, can markers principle components. single-cell seq data, principle components recommended. batch.col default. column denotes batch dataset cell belongs append.name DEFAULT = '_aligned'. Text appended new columns containing aligned data do_pca DEFAULT = TRUE. Whether perform PCA input matrix. npcs PCA input matrix, number PCs compute. theta Diversity clustering penalty parameter. Specify variable vars_use Default theta=2. theta=0 encourage diversity. Larger values theta result diverse clusters. lambda Ridge regression penalty parameter. Specify variable vars_use. Default lambda=1. Lambda must strictly positive. Smaller values result aggressive correction. sigma Width soft kmeans clusters. Default sigma=0.1. Sigma scales distance cell cluster centroids. Larger values sigma result cells assigned clusters. Smaller values sigma make soft kmeans cluster approach hard clustering. nclust Number clusters model. nclust=1 equivalent simple linear regression. tau Protection overclustering small datasets large ones. tau expected number cells per cluster. block.size proportion cells update clustering. 0 1, default 0.05. Larger values may faster less accurate max.iter.harmony Maximum number rounds run Harmony. One round Harmony involves one clustering one correction step. max.iter.cluster Maximum number rounds run clustering round Harmony. epsilon.cluster Convergence tolerance clustering round Harmony. Set -Inf never stop early. epsilon.harmony Convergence tolerance Harmony. Set -Inf never stop early. plot_convergence Whether print convergence plot clustering objective function. TRUE plot, FALSE suppress. can useful debugging. return_object (Advanced Usage) Whether return Harmony object corrected PCA embeddings. verbose DEFAULT = FALSE. Whether print progress messages. TRUE print, FALSE suppress. reference_values (Advanced Usage) Defines reference dataset(s). Cells batch variables values matching reference_values moved. cluster_prior (Advanced Usage) Provides user defined clusters cluster initialization. number provided clusters C less K, Harmony initialize K-C clusters kmeans. C exceed K.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.harmony.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run.harmony - dun Harmony alignment on a data.table — run.harmony","text":"Returns data.table aligned data added new columns.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.harmony.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run.harmony - dun Harmony alignment on a data.table — run.harmony","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.knn.classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"run.knn.classifier - Run KNN classifier — run.knn.classifier","title":"run.knn.classifier - Run KNN classifier — run.knn.classifier","text":"run.knn.classifier - Run KNN classifier","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.knn.classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run.knn.classifier - Run KNN classifier — run.knn.classifier","text":"","code":"run.knn.classifier(train.dat, unlabelled.dat, use.cols, label.col, num.neighbours)"},{"path":"http://immunedynamics.io/spectre/reference/run.knn.classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run.knn.classifier - Run KNN classifier — run.knn.classifier","text":"train.dat DEFAULT. data.frame. dataframe containing cells (rows) vs features/markers (columns) used train classifier. unlabelled.dat DEFAULT. data.frame. dataframe containing cells (rows) vs features/markers (columns) data classified. use.cols DEFAULT. Vector column names use training k-nearest neighbour (KNN) classifier. label.col DEFAULT. Character. Name column representing population name cells dat. num.neighbours DEFAULTS 1. Numeric. using k-nearest neighbour classifier, parameter specifies number nearest neighbours. Train k-NN classifier training data, use classify unlabelled data. Note classifier work intended, unlabelled.data normalised range train.data. Note make sure train.data unlabelled.data exactly features/markers.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.knn.classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run.knn.classifier - Run KNN classifier — run.knn.classifier","text":"predicted label unlabelled data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.knn.classifier.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run.knn.classifier - Run KNN classifier — run.knn.classifier","text":"https://sydneycytometry.org.au/spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.knn.classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run.knn.classifier - Run KNN classifier — run.knn.classifier","text":"Givanna Putri, ghar1821@uni.sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the PCA algorithm (using stats::prcomp) — run.pca","title":"Run the PCA algorithm (using stats::prcomp) — run.pca","text":"Method run PCA dimensionality reduction algorithm. principal component analysis (PCA) capable reducing number dimensions (.e. parameters) minimal effect variation given dataset. function run PCA calculation (extremely fast) generate plots (takes time). individuals (samples patients), PCA can group based similarities. PCA also capable ranking variables/parameters (markers cell counts) based contribution variability across dataset extremely fast manner. cytometry, can useful identify marker(s) can used differentiate subset(s) cells. Uses base R package \"stats\" PCA, \"factoextra\" PCA scree plots, \"data.table\" saving .csv files, \"ggplot2\" saving plots, \"gtools\" rearranging data order, 'RColorBrewer' 'viridis' colour schemes. information PCA plots can found http://www.sthda.com/english/articles/31-principal-component-methods--r-practical-guide/118-principal-component-analysis--r-prcomp-vs-princomp/.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the PCA algorithm (using stats::prcomp) — run.pca","text":"","code":"run.pca(dat, use.cols, scale = TRUE, add.pca.col = FALSE,  pca.col.no = 50, pca.lite = FALSE, scree.plot = TRUE, comp.no = 2,  variable.contribution = TRUE, plot.individuals = TRUE,  plot.ind.label = \"point\", pointsize.ind = 1.5, row.names = NULL,  plot.ind.group = FALSE, group.ind = NULL, colour.group = \"viridis\",  pointsize.group = 1.5, ellipse.type = \"confidence\",  ellipse.level = 0.95, mean.point = TRUE,  randomise.order = TRUE, order.seed = 42,  plot.variables = TRUE, colour.var = \"solid\",  plot.combined = TRUE, repel = FALSE, var.numb = 20, path = getwd())"},{"path":"http://immunedynamics.io/spectre/reference/run.pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the PCA algorithm (using stats::prcomp) — run.pca","text":"dat DEFAULT. data.frame. use.cols DEFAULT. Vector numbers, reflecting columns use dimensionality reduction (may want parameters \"Time\" \"Sample\"). scale DEFAULT = TRUE. logical value indicating whether variables scaled unit variance analysis takes place. add.pca.col DEFAULT = FALSE. Option add PC coordinates input data. pca.col.DEFULAT = 50. Number PC added input data. pca.lite DEFAULT = FALSE. stop running function PCA coordinates added input data (assuming add.pca.col = TRUE). scree.plot DEFAULT = TRUE. Option create scree plots. save generated scree plot. Note require input elbow point run comp.= NULL. comp.DEFAULT = 2. Select number components saved. NULL, user asked run select number based scree plot. variable.contribution DEFAULT = TRUE. Option create plot showing contribution variable. Horizontal red line represents average variable contribution variables contributed equally. Requires scree.plot = TRUE. plot.individuals DEFAULT = TRUE. Option create PCA plots individuals (samples/patients). plot.ind.label DEFAULT = \"point\". Option add text PCA plots individuals extra identifier. Use c(\"point\", \"text\") include text point. pointsize.ind DEFAULT = 1.5. Numeric. Size dots individuals PCA plot. row.names DEFAULT = NULL. Column (character) defines individuals. used place name plot.individuals. plot.ind.group DEFAULT = FALSE. Option group individuals ellipses (default show 95 % confidence interval). Must specify column groups individuals group.ind. group.ind DEFAULT = NULL. Column (character) defines groups individuals. Works plot.ind.group must set TRUE. colour.group DEFAULT = \"viridis\". Colour scheme group. Options include \"jet\", \"spectral\", \"viridis\", \"inferno\", \"magma\". pointsize.group DEFAULT = 1.5. Numeric. Size shapes group individuals PCA plot. ellipse.type DEFAULT = \"confidence\". Set type ellipse. Options include \"confidence\", \"convex\", \"concentration\", \"t\", \"norm\", \"euclid\". See factoextra::fviz information. ellipse.level DEFAULT = 0.95. Size ellipses. default 95 % (0.95). mean.point DEFAULT = TRUE. Option plot mean PCA plot different groups. randomise.order DEFAULT = TRUE. Option randomise plotting order individuals control overlap. order.seed DEFAULT = 42. Set seed randomising plotting order individuals. plot.variables DEFAULT = TRUE. Option create PCA plots variables (markers/cell counts). colour.var DEFAULT = \"solid\". Colour scheme PCA plot variables. Options include \"solid\", \"jet\", \"spectral\", \"viridis\", \"inferno\", \"magma\", \"BuPu\". Note colours pale may appear clearly plot. plot.combined DEFAULT = TRUE. Option create combined PCA plot individuals variables. repel DEFAULT = FALSE. Option avoid overlapping text PCA plots. Can greatly increase plot time large number samples. var.numb DEFAULT = 20. Top number variables plotted. Note greater number, longer plots take. path DEFAULT = getwd(). location save plots. default, save current working directory. Can overidden.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.pca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run the PCA algorithm (using stats::prcomp) — run.pca","text":"Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the PCA algorithm (using stats::prcomp) — run.pca","text":"","code":"# Set directory to save files. By default it will save files at get()  # Run PCA on demonstration dataset, adding PC to dataset dat <- Spectre::demo.clustered                          # Run PCA on demonstration dataset Spectre::run.pca(dat = Spectre::demo.clustered,                 use.cols = c(11:19),                 repel = TRUE                 ) #> Warning: Ignoring empty aesthetic: `width`. #> Saving 6.67 x 6.67 in image #> Saving 6.67 x 6.67 in image #> Warning: `aes_string()` was deprecated in ggplot2 3.0.0. #> ℹ Please use tidy evaluation idioms with `aes()`. #> ℹ See also `vignette(\"ggplot2-in-packages\")` for more information. #> ℹ The deprecated feature was likely used in the factoextra package. #>   Please report the issue at <https://github.com/kassambara/factoextra/issues>. #> Saving 6.67 x 6.67 in image #> Saving 6.67 x 6.67 in image  # Compare between groups if (FALSE) { # \\dontrun{ Spectre::run.pca(dat = Spectre::demo.clustered,                  use.cols = c(11:19),                  comp.no = NULL,                  plot.ind.label = c(\"point\", \"text\"), #individual cells will be labelled as numbers                  plot.ind.group = TRUE,                  group.ind = \"Group\",                  mean.point = FALSE,                  randomise.order = TRUE                  ) } # }          # When prompted, type in \"5\" and click enter to continue function  # (this selects the elbow point based off the scree plot)  ## Possible issues ## # Remove any NA present na.omit(dat) #> Index: <Sample> #>                  FileName      NK11        CD3     CD45       Ly6G    CD11b #>                    <char>     <num>      <num>    <num>      <num>    <num> #>      1:   CNS_Mock_01.csv   42.3719  40.098700  6885.08  -344.7830 14787.30 #>      2:   CNS_Mock_01.csv   42.9586 119.014000  1780.29  -429.6650  5665.73 #>      3:   CNS_Mock_01.csv   59.2366 206.238000 10248.30 -1603.8400 19894.30 #>      4:   CNS_Mock_01.csv  364.9480  -0.233878  3740.04  -815.9800  9509.43 #>      5:   CNS_Mock_01.csv  440.2470  40.035200  9191.38    40.5055  5745.82 #>     ---                                                                     #> 169000: CNS_WNV_D7_06.csv  910.8890  72.856100 31466.20  -316.5570 28467.80 #> 169001: CNS_WNV_D7_06.csv  -10.2642  64.188700 45188.00  -540.5140 22734.00 #> 169002: CNS_WNV_D7_06.csv -184.2910  -9.445650 11842.60   -97.9383 17237.00 #> 169003: CNS_WNV_D7_06.csv  248.3860 229.986000 32288.20  -681.1630 19255.80 #> 169004: CNS_WNV_D7_06.csv  738.9810  95.470300 46185.10 -1004.6000 22957.80 #>              B220      CD8a       Ly6C       CD4  NK11_asinh    CD3_asinh #>             <num>     <num>      <num>     <num>       <num>        <num> #>      1:  -40.2399   83.7175   958.7000  711.0720  0.04235923  0.040087962 #>      2:   86.6673   34.7219   448.2590  307.2720  0.04294540  0.118734817 #>      3:  427.8310  285.8800  1008.8300  707.0940  0.05920201  0.204803270 #>      4:  182.4200  333.6050   440.0710  249.7840  0.35729716 -0.000233878 #>      5: -211.6940  149.2200    87.4815  867.5700  0.42713953  0.040024513 #>     ---                                                                   #> 169000:   -7.7972 -271.8040 12023.7000 1103.0500  0.81693878  0.072791800 #> 169001:  202.4110 -936.4920  4188.3300  315.9400 -0.01026402  0.064144703 #> 169002:  123.4760 -219.9320  8923.4000 -453.4640 -0.18326344 -0.009445510 #> 169003: -656.0540 -201.5880 10365.7000   61.6765  0.24590035  0.228005328 #> 169004: -661.6280   72.3356  9704.4700  -31.8532  0.68430866  0.095325863 #>         CD45_asinh  Ly6G_asinh CD11b_asinh   B220_asinh  CD8a_asinh Ly6C_asinh #>              <num>       <num>       <num>        <num>       <num>      <num> #>      1:   2.627736 -0.33829345    3.388057 -0.040229048  0.08362002  0.8518665 #>      2:   1.340828 -0.41743573    2.435282  0.086559169  0.03471493  0.4344615 #>      3:   3.022631 -1.25101677    3.684212  0.415750122  0.28212257  0.8876036 #>      4:   2.029655 -0.74509796    2.948184  0.181423123  0.32770787  0.4269784 #>      5:   2.914359  0.04049443    2.449108 -0.210143906  0.14867171  0.0873703 #>     ---                                                                        #> 169000:   4.142314 -0.31149515    4.042229 -0.007797121 -0.26856390  3.1817517 #> 169001:   4.504101 -0.51715205    3.817492  0.201053740 -0.83574631  2.1394053 #> 169002:   3.166628 -0.09778240    3.541046  0.123164374 -0.21819650  2.8849492 #> 169003:   4.168089 -0.63716643    3.651633 -0.616293228 -0.20024703  3.0339681 #> 169004:   4.525922 -0.88462254    3.827279 -0.620947819  0.07227267  2.9683779 #>           CD4_asinh     Sample  Group  Batch FlowSOM_cluster #>               <num>     <char> <char> <char>           <num> #>      1:  0.66171351 01_Mock_01   Mock      A              23 #>      2:  0.30263135 01_Mock_01   Mock      A              55 #>      3:  0.65846851 01_Mock_01   Mock      A              64 #>      4:  0.24725691 01_Mock_01   Mock      A              53 #>      5:  0.78456678 01_Mock_01   Mock      A             110 #>     ---                                                      #> 169000:  0.95239703  12_WNV_06    WNV      A              72 #> 169001:  0.31090687  12_WNV_06    WNV      A              46 #> 169002: -0.43920651  12_WNV_06    WNV      A             133 #> 169003:  0.06163746  12_WNV_06    WNV      A             133 #> 169004: -0.03184782  12_WNV_06    WNV      A             103 #>         FlowSOM_metacluster        Population     UMAP_X    UMAP_Y #>                      <fctr>            <char>      <num>     <num> #>      1:                   2         Microglia -2.3603757  6.201213 #>      2:                   2         Microglia  2.7505242  7.119595 #>      3:                   2         Microglia -2.9486033  4.012670 #>      4:                   2         Microglia  0.6482904  6.481466 #>      5:                   4          NK cells -2.3941295  6.975885 #>     ---                                                            #> 169000:                   3 Infil Macrophages -2.9640724 -5.058265 #> 169001:                   3 Infil Macrophages -1.2644785 -3.555824 #> 169002:                   3 Infil Macrophages -2.3592682 -2.429467 #> 169003:                   3 Infil Macrophages -1.9531062 -4.049705 #> 169004:                   3 Infil Macrophages -0.7404098 -4.686928  # Remove columns that have zero variance (e.g. if MFI is the same for all  # samples for a marker) dat <- data.table::as.data.table(dat) dat <- dat[ , lapply(.SD, function(v) if(data.table::uniqueN(v, na.rm = TRUE) > 1) v)]    # Ellipses are only generated in 'plot.ind.group' when there are at least  # 2 samples per group ('group.ind')"},{"path":"http://immunedynamics.io/spectre/reference/run.phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"run.phenograph - Run phenograph clustering — run.phenograph","title":"run.phenograph - Run phenograph clustering — run.phenograph","text":"function allows perform phenograph clustering data.table","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run.phenograph - Run phenograph clustering — run.phenograph","text":"","code":"run.phenograph()"},{"path":"http://immunedynamics.io/spectre/reference/run.phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run.phenograph - Run phenograph clustering — run.phenograph","text":"ref.dat DEFAULT. data.table consisting 'refernece' data use train alignment algorithm","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run.phenograph - Run phenograph clustering — run.phenograph","text":"Returns data.table clustering results added","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.phenograph.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run.phenograph - Run phenograph clustering — run.phenograph","text":"Ashhurst, T. M., et al. (2019). https://www.ncbi.nlm.nih.gov/pubmed/31077106","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.phenograph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run.phenograph - Run phenograph clustering — run.phenograph","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run.phenograph - Run phenograph clustering — run.phenograph","text":"","code":"if (FALSE) { # \\dontrun{ cell.dat <- Spectre::demo.clustered cell.dat <- Spectre::do.subsample(cell.dat, 5000)  use.cols <- c(\"NK11_asinh\", \"CD3_asinh\", \"CD45_asinh\",  \"Ly6G_asinh\", \"CD11b_asinh\", \"B220_asinh\", \"CD8a_asinh\",  \"Ly6C_asinh\", \"CD4_asinh\")  cell.dat <- run.phenograph(dat = cell.dat, use.cols = use.cols) } # }"},{"path":"http://immunedynamics.io/spectre/reference/run.rpca.html","id":null,"dir":"Reference","previous_headings":"","what":"Run rPCA for batch correction — run.rpca","title":"Run rPCA for batch correction — run.rpca","text":"Use Seurat rPCA batch correction. details rPCA, see https://satijalab.org/seurat/articles/integration_rpca.html.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.rpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run rPCA for batch correction — run.rpca","text":"","code":"run.rpca(dat, use.cols, batch.col, reference = NULL, k.anchor = 5)"},{"path":"http://immunedynamics.io/spectre/reference/run.rpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run rPCA for batch correction — run.rpca","text":"dat DEFAULT. data.table use.cols DEFAULT. vector character column names apply batch correction . batch.col Character. column data data.table identifies batch cell belongs . reference DEFAULT NULL. Whether align batches given batch. yes, supply parameter name batch want align batches . k.anchor DEFAULT 5. Passed Seurat's FindIntegrationAnchors function. Essentially, determines number neighbors (k) use Seurat's FindIntegrationAnchors picking anchors.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.rpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run rPCA for batch correction — run.rpca","text":"batch corrected data.table","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.spatial.analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"run.spatial.analysis — run.spatial.analysis","title":"run.spatial.analysis — run.spatial.analysis","text":"run.spatial.analysis","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.spatial.analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run.spatial.analysis — run.spatial.analysis","text":"","code":"run.spatial.analysis(   dat,   sample.col,   pop.col,   annot.cols = NULL,   region.col = NULL,   area.table = NULL,   adj.dist = 20,   x.col = \"x\",   y.col = \"y\",   distribution = TRUE,   composition = TRUE,   counts = TRUE,   counts.per.area = TRUE,   distance = TRUE,   adjacency = TRUE,   func = \"mean\" )"},{"path":"http://immunedynamics.io/spectre/reference/run.spatial.analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run.spatial.analysis — run.spatial.analysis","text":"dat DEFAULT. Data.table sample.col DEFAULT. Column denotes 'samples' pop.col DEFAULT. Column denotes 'samples' annot.cols DEFAULT = NULL. Annotation columns. region.col DEFAULT = NULL. Create 'total' default, add specific ones requested area.table DEFAULT = NULL. Calculate 'total' automatically adj.dist DEFAULT = 20 x.col DEFAULT = 'x' y.col DEFAULT = 'y' distribution DEFAULT = TRUE composition DEFAULT = TRUE counts DEFAULT = TRUE counts.per.area DEFAULT = TRUE distance DEFAULT = TRUE adjacency DEFAULT = TRUE func DEFAULT = 'mean'","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the tSNE algorithm (using Rtsne::Rtsne()) — run.tsne","title":"Run the tSNE algorithm (using Rtsne::Rtsne()) — run.tsne","text":"Method run tSNE dimensionality reduction algorithm. tSNE (t-distributed stochastic neighbor embedding) plot useful means visualise data. dimensionality reduction algorithm, data lost. good practice validate populations (namely manual gating). Output data \"tsne.res\". Uses R package \"Rtsne\" calculate plots.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the tSNE algorithm (using Rtsne::Rtsne()) — run.tsne","text":"","code":"run.tsne(dat, use.cols, tsne.x.name, tsne.y.name, tsne.seed,  dims, initial_dims, perplexity, theta, check_duplicates, pca,  max_iter, verbose, is_distance, Y_init, stop_lying_iter,  mom_switch_iter, momentum, final_momentum, eta, exaggeration_factor)"},{"path":"http://immunedynamics.io/spectre/reference/run.tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the tSNE algorithm (using Rtsne::Rtsne()) — run.tsne","text":"dat DEFAULT. data.frame. use.cols DEFAULT. Vector numbers, reflecting columns use dimensionality reduction. tsne.x.name DEFAULT = \"tSNE_X\". Character. Name tSNE x-axis. tsne.y.name DEFAULT = \"tSNE_Y\". Character. Name tSNE y-axis. tsne.seed DEFAULT = 42. Numeric. Seed value reproducibility. dims DEFAULT = 2. Number dimensions output results, either 2 3. initial_dims DEFAULT = 50. Number dimensions retained initial PCA step. perplexity DEFAULT = 30. theta DEFAULT = 0.5. Use 0.5 Barnes-Hut tSNE, 0.0 exact tSNE (takes longer). check_duplicates DEFAULT = FALSE. pca DEFAULT = TRUE. Runs PCA prior tSNE run. max_iter DEFAULT = 1000. Maximum number iterations. verbose DEFAULT = TRUE. is_distance DEFAULT = FALSE. Experimental, using X distance matrix. Y_init DEFAULT = NULL. Recommend NULL random initialisation. stop_lying_iter DEFAULT = 250. Number iterations early exaggeration. mom_switch_iter DEFAULT = 250. Number iterations increased momentum spread. momentum DEFAULT = 0.5. Initial momentum spread. final_momentum DEFAULT = 0.8. Momentum spread 'final_momentum'. eta DEFAULT = 200. Learning rate. exaggeration_factor DEFAULT = 12.0. Factor used early exaggeration.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.tsne.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run the tSNE algorithm (using Rtsne::Rtsne()) — run.tsne","text":"Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the tSNE algorithm (using Rtsne::Rtsne()) — run.tsne","text":"","code":"# Run tSNE on a subset of the  demonstration dataset  cell.dat <- do.subsample(Spectre::demo.clustered, 10000) # Subsample the demo dataset to 10000 cells cell.dat <- Spectre::run.tsne(dat = cell.dat,                               use.cols = c(\"NK11_asinh\", \"CD3_asinh\",                                \"CD45_asinh\", \"Ly6G_asinh\", \"CD11b_asinh\",                                \"B220_asinh\", \"CD8a_asinh\",                                 \"Ly6C_asinh\", \"CD4_asinh\")) #> Performing PCA #> Read the 10000 x 9 data matrix successfully! #> OpenMP is working. 1 threads. #> Using no_dims = 2, perplexity = 30.000000, and theta = 0.500000 #> Computing input similarities... #> Building tree... #>  - point 10000 of 10000 #> Done in 1.40 seconds (sparsity = 0.012680)! #> Learning embedding... #> Iteration 50: error is 97.360072 (50 iterations in 1.44 seconds) #> Iteration 100: error is 86.988747 (50 iterations in 1.44 seconds) #> Iteration 150: error is 83.922629 (50 iterations in 1.19 seconds) #> Iteration 200: error is 83.434722 (50 iterations in 1.26 seconds) #> Iteration 250: error is 83.261604 (50 iterations in 1.28 seconds) #> Iteration 300: error is 3.176013 (50 iterations in 1.13 seconds) #> Iteration 350: error is 2.820719 (50 iterations in 1.09 seconds) #> Iteration 400: error is 2.621339 (50 iterations in 1.08 seconds) #> Iteration 450: error is 2.489056 (50 iterations in 1.09 seconds) #> Iteration 500: error is 2.393128 (50 iterations in 1.10 seconds) #> Iteration 550: error is 2.319920 (50 iterations in 1.11 seconds) #> Iteration 600: error is 2.262865 (50 iterations in 1.11 seconds) #> Iteration 650: error is 2.216526 (50 iterations in 1.11 seconds) #> Iteration 700: error is 2.179152 (50 iterations in 1.11 seconds) #> Iteration 750: error is 2.149116 (50 iterations in 1.11 seconds) #> Iteration 800: error is 2.125685 (50 iterations in 1.12 seconds) #> Iteration 850: error is 2.107875 (50 iterations in 1.12 seconds) #> Iteration 900: error is 2.094636 (50 iterations in 1.12 seconds) #> Iteration 950: error is 2.083936 (50 iterations in 1.12 seconds) #> Iteration 1000: error is 2.074844 (50 iterations in 1.12 seconds) #> Fitting performed in 23.24 seconds."},{"path":"http://immunedynamics.io/spectre/reference/run.umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Run UMAP — run.umap","title":"Run UMAP — run.umap","text":"Function run UMAP dimensionality reduction algorithm. UMAP (uniform manifold approximation projection) plot useful means visualise data. dimensionality reduction algorithm, data lost. good practice validate populations (namely manual gating). information parameter choices, see ?umap::umap.defaults. Uses R package \"umap\" calculate plots \"data.table\" handle data.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run UMAP — run.umap","text":"","code":"run.umap(dat, use.cols, umap.x.name = \"UMAP_X\",  umap.y.name = \"UMAP_Y\", umap.seed = 42, neighbours = 15, n_components = 2,  metric = \"euclidean\", n_epochs = 200, input = \"data\", init = \"spectral\",  min_dist = 0.1, set_op_mix_ratio = 1, local_connectivity = 1,  bandwidth = 1, alpha = 1, gamma = 1, negative_sample_rate = 5,  a_gradient = NA, b_gradient = NA, spread = 1, transform_state = 42,  knn.repeats = 1, verbose = TRUE, umap_learn_args = NA, fast = TRUE,  n_threads = \"auto\", n_sgd_threads = \"auto\", batch = TRUE)"},{"path":"http://immunedynamics.io/spectre/reference/run.umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run UMAP — run.umap","text":"dat DEFAULT. Input data.table data.frame. use.cols DEFAULT. Vector column names numbers clustering. umap.x.name DEFAULT = \"UMAP_X\". Character. Name UMAP x-axis. umap.y.name DEFAULT = \"UMAP_Y\". Character. Name UMAP y-axis. umap.seed DEFAULT = 42. Numeric. Seed value reproducibility. neighbours DEFAULT = 15. Numeric. Number nearest neighbours. n_components DEFAULT = 2. Numeric. Number dimensions output results. metric DEFAULT = \"euclidean\". Character function. Determines distances data points computed. Can also \"manhattan\". n_epochs DEFAULT = 200. Numeric. Number iterations performed layout optimisation. input DEFAULT = \"data\". Character. Determines whether primary input argument data distance matrix. Can also \"dist\". init DEFAULT = \"spectral\". Character matrix. Default \"spectral\" computes initial embedding using eigenvectors connectivity graph matrix. Can also use \"random\" (creates initial layout based random coordinates). min_dist DEFAULT = 0.1. Numeric. Determines close points appear final layout. set_op_mix_ratio DEFAULT = 1. Numeric range 0,1. Determines knn-graph used create fuzzy simplicial graph. local_connectivity DEFAULT = 1. Numeric. Used construction fuzzy simplicial set. bandwidth DEFAULT = 1. Numeric. Used construction fuzzy simplicial set. alpha DEFAULT = 1. Numeric. Initial value \"learning rate\" layout optimisation. gamma DEFAULT = 1. Numeric. Together alpha, determines learning rate layout optimisation. negative_sample_rate DEFAULT = 5. Numeric. Determines many non-neighbour points used per point per iteration layout optimisation. a_gradient DEFAULT = NA. Numeric. Contributes gradient calculations layout optimisation. left NA, suitable value estimated automatically. b_gradient DEFAULT = NA. Numeric. Contributes gradient calculations layout optimisation. left NA, suitable value estimated automatically. spread DEFAULT = 1. Numeric. Used automatic estimation a_gradient/b_gradient parameters. transform_state DEFAULT = 42. Numeric. Seed random number generation used predict(). knn.repeats DEFAULT = 1. Numeric. Number times restart knn search. verbose DEFAULT = TRUE. Logical. Determines whether show progress messages. umap_learn_args DEFAULT = NA. Vector. Vector arguments python package umap-learn. fast DEFAULT TRUE Whether run uwot implementation UMAP much faster. n_threads DEFAULT \"auto\". Numeric. Number threads use (except stochastic gradient descent). nearest neighbor search, applies nn_method = \"annoy\". n_threads > 1, Annoy index temporarily written disk location determined tempfile. default \"auto\" option automatically set maximum number threads computer - 1. n_sgd_threads DEFAULT \"auto\". Number threads use stochastic gradient descent. set > 1, aware batch = FALSE, results reproducible, even set.seed called fixed seed running. Set \"auto\" use value n_threads. batch DEFAULT TRUE. set TRUE, embedding coordinates updated end epoch rather epoch. batch mode, results reproducible fixed random seed even n_sgd_threads > 1, cost slightly higher memory use. may also modify learning_rate increase n_epochs, whether provides speed increase single-threaded optimization likely dataset hardware-dependent.","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.umap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run UMAP — run.umap","text":"Thomas Ashhurst, thomas.ashhurst@sydney.edu.au Felix Marsh-Wakefield, felix.marsh-wakefield@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/run.umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run UMAP — run.umap","text":"","code":"# Run UMAP on a subset of the  demonstration dataset  library(Spectre) # Subsample the demo dataset to 10000 cells cell.dat <- do.subsample(demo.clustered, 10000) cell.dat$UMAP_X <- NULL cell.dat$UMAP_Y <- NULL  cell.dat <- run.umap(dat = cell.dat,                               use.cols = c(\"NK11_asinh\", \"CD3_asinh\",                                \"CD45_asinh\", \"Ly6G_asinh\", \"CD11b_asinh\",                                \"B220_asinh\", \"CD8a_asinh\", \"Ly6C_asinh\",                                \"CD4_asinh\")) #> 12:37:54 UMAP embedding parameters a = 1.577 b = 0.8951 #> 12:37:54 Converting dataframe to numerical matrix #> 12:37:54 Read 10000 rows and found 9 numeric columns #> 12:37:54 Using Annoy for neighbor search, n_neighbors = 15 #> 12:37:54 Building Annoy index with metric = euclidean, n_trees = 50 #> 0%   10   20   30   40   50   60   70   80   90   100% #> [----|----|----|----|----|----|----|----|----|----| #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> * #> | #> 12:37:55 Writing NN index file to temp file /tmp/RtmpWsTrG3/file220068c11883 #> 12:37:55 Searching Annoy index using 3 threads, search_k = 1500 #> 12:37:56 Annoy recall = 100% #> 12:37:56 Commencing smooth kNN distance calibration using 3 threads #>  with target n_neighbors = 15 #> 12:37:57 Initializing from normalized Laplacian + noise (using RSpectra) #> 12:37:57 Commencing optimization for 200 epochs, with 200182 positive edges using 3 threads #> 12:37:57 Using rng type: pcg #> 12:37:59 Optimization finished"},{"path":"http://immunedynamics.io/spectre/reference/spatial-class.html","id":null,"dir":"Reference","previous_headings":"","what":"spatial object — spatial-class","title":"spatial object — spatial-class","text":"spatial object","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.cytonorm.html","id":null,"dir":"Reference","previous_headings":"","what":"train.cytonorm - Prepare reference data into a FlowSOM object — train.cytonorm","title":"train.cytonorm - Prepare reference data into a FlowSOM object — train.cytonorm","text":"function allows learn conversions use batch alignment.","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.cytonorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"train.cytonorm - Prepare reference data into a FlowSOM object — train.cytonorm","text":"","code":"train.align()"},{"path":"http://immunedynamics.io/spectre/reference/train.cytonorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"train.cytonorm - Prepare reference data into a FlowSOM object — train.cytonorm","text":"method DEFAULT = 'cytonorm'. future additional methods batch alignment added. cytonorm.goal DEFAULT = 'mean'. Target values alignment. Can 'mean' average batches, specific batch can selected. cytonorm.nQ DEFAULT = 101. Number quantiles. dir DEFAULT = getwd(). Sets working directory operate . function involves reading/writing files, best set somewhere static case active working directory moves subfolder, return function runs error. mem.ctrl DEFAULT = TRUE. Allows function clear held memory occasion. dat DEFAULT. data.table consisting 'refernece' data use train alignment algorithm cellular.cols DEFAULT. vector column names data.table contain markers aligned","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.cytonorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"train.cytonorm - Prepare reference data into a FlowSOM object — train.cytonorm","text":"Returns alignment model object, additional 'conversions' element added.","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.cytonorm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"train.cytonorm - Prepare reference data into a FlowSOM object — train.cytonorm","text":"Ashhurst, T. M., et al. (2019). https://www.ncbi.nlm.nih.gov/pubmed/31077106","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.cytonorm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"train.cytonorm - Prepare reference data into a FlowSOM object — train.cytonorm","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.knn.classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"train.knn.classifier - Train KNN classifier — train.knn.classifier","title":"train.knn.classifier - Train KNN classifier — train.knn.classifier","text":"train.knn.classifier - Train KNN classifier","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.knn.classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"train.knn.classifier - Train KNN classifier — train.knn.classifier","text":"","code":"train.knn.classifier(dat, use.cols, label.col,min.num.neighbours,  max.num.neighbours, evaluation.metric, num.folds, num.repeats)"},{"path":"http://immunedynamics.io/spectre/reference/train.knn.classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"train.knn.classifier - Train KNN classifier — train.knn.classifier","text":"dat DEFAULT. data.frame. dataframe containing cells (rows) vs features/markers (columns) used train k-nearest neighbour (KNN) classifier use.cols DEFAULT. Vector column names use training k-nearest neighbour (KNN) classifier. label.col DEFAULT. Character. Name column representing population name cells dat. min.num.neighbours DEFAULTS 1. Numeric. using k-nearest neighbour (KNN) classifier, parameter specifies minimum number nearest neighbours used train KNN classifier. max.num.neighbours DEFAULTS 1. Numeric. using k-nearest neighbour (KNN) classifier, parameter specifies maximum number nearest neighbours used train KNN classifier. method DEFAULTS random. Can either random randomly shuffle data split 2 halves, one training, testing. CV (cross validation) data split num.folds complementary portions, num.folds-1 portions used training remaining testing. num.folds DEFAULTS 10. Numeric. Number chunks training data split . classifier take 1 chunk testing classifier (trained), use remaining chunk train classifier. num.repeats DEFAULTS 1. Numeric. Number time training data split num.folds chunks. set 3 num.folds 10, classifier split data 10 chunks, train classifier chunks 10 times, repeat entire procedure 3 times (time differet data chunk). seed DEFAULTS 42. Seed used splitting data training testing set. Train k-nearest neighbour (KNN) classifier. classifier trained number neighbours, starting min.num.neighbours, increased gradually 1 max.num.neighbours reached. number neighbour, accuracy (evaluation metric specified evaluation.metric) classifier computed. Data normalised range 0 1 used training classifier. normalisation method used MinMaxScaling method. NOTE: larger training data, longer takes train classifier. Hence please mindful training data size.","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.knn.classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"train.knn.classifier - Train KNN classifier — train.knn.classifier","text":"performance classifier different number neighbours well description training performed .e. sampling process used (data split training testing), sample sizes (number data points used training/testing). Included well recommended number neighbours data reasoning behind number neighbours best.","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.knn.classifier.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"train.knn.classifier - Train KNN classifier — train.knn.classifier","text":"https://sydneycytometry.org.au/spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/train.knn.classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"train.knn.classifier - Train KNN classifier — train.knn.classifier","text":"Givanna Putri","code":""},{"path":"http://immunedynamics.io/spectre/reference/write.files.html","id":null,"dir":"Reference","previous_headings":"","what":"write.files - Write .csv or .fcs files — write.files","title":"write.files - Write .csv or .fcs files — write.files","text":"write.files - Write .csv .fcs files","code":""},{"path":"http://immunedynamics.io/spectre/reference/write.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write.files - Write .csv or .fcs files — write.files","text":"","code":"write.files(dat, file.prefix, divide.by, write.csv, write.fcs)"},{"path":"http://immunedynamics.io/spectre/reference/write.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write.files - Write .csv or .fcs files — write.files","text":"dat Dataframe. default. file.prefix Character prefix add filename. divide.Character. want write whole dataset (use NULL) split sample/group/cluster etc (etner name column divide , e.g. \"SampleName\"). Default NULL. . write.csv Defaults TRUE. Logical. TRUE write CSV files, FALSE . write.fcs Defaults FALSE. Logical. TRUE write FCS files, FALSE . function writes CSV files data using fwrite. Can also write FCS files.","code":""},{"path":"http://immunedynamics.io/spectre/reference/write.hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"write.hdf5 — write.hdf5","title":"write.hdf5 — write.hdf5","text":"write.hdf5","code":""},{"path":"http://immunedynamics.io/spectre/reference/write.hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write.hdf5 — write.hdf5","text":"","code":"write.hdf5(   dat,   channels = NULL,   merge.channels = NULL,   q.max = 0.99,   flip.y = TRUE,   random.crop.x = NULL,   random.crop.y = NULL,   random.crop.x.seed = 42,   random.crop.y.seed = 21,   crop.coordinates = NULL,   print.spatial.plot = TRUE,   chunk.size = NULL,   compression = 0,   plots = FALSE )"},{"path":"http://immunedynamics.io/spectre/reference/write.hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write.hdf5 — write.hdf5","text":"dat DEFAULT. Spatial data list channels DEFAULT = NULL. Channels include. NULL, channels included. merge.channels DEFAULT = NULL. Channels use create additional 'merged' channel. q.max DEFAULT = 0.99 flip.y DEFAULT = TRUE random.crop.x DEFAULT = NULL random.crop.y DEFAULT = NULL random.crop.x.seed DEFAULT = 42 random.crop.y.seed DEFAULT = 21 print.spatial.plot DEFAULT = TRUE chunk.size DEFAULT = NULL compression DEFAULT = 0 plots DEFAULT = FALSE","code":""},{"path":"http://immunedynamics.io/spectre/reference/write.hdf5.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"write.hdf5 — write.hdf5","text":"https://github.com/ImmuneDynamics/Spectre.","code":""},{"path":"http://immunedynamics.io/spectre/reference/write.hdf5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write.hdf5 — write.hdf5","text":"Thomas M Ashhurst, thomas.ashhurst@sydney.edu.au","code":""},{"path":"http://immunedynamics.io/spectre/news/index.html","id":"spectre-130","dir":"Changelog","previous_headings":"","what":"Spectre 1.3.0","title":"Spectre 1.3.0","text":"Added utils.R keep internal reusable functions. Added verbose parameter optionally print progress messages. Overwrites clust.name meta.clust.name columns input data.table already exist. Tidied simplified code. Updated run.umap overwrite umap.x.name umap.y.name columns input data.table already exist. Overwrite columns input data.table already exist. Added support specify list cofactors, different values can assigned different markers. Move code internal functions modularity. Rewrote simplified code. Added colour scheme options support options viridis RColorBrewer jet. Updated documentation. Fixed issue #197 using geom_label_repel draw centroid labels. Added option fast plot using scattermore. Added deprecated message fast.colour.plot. Fixed package.check issue #186. Refactored read.files remove setwd() issue #162. Add add.label multi.plot issue #202. Added NEWS.md file track changes package. Added testthat unittests.","code":""}]
