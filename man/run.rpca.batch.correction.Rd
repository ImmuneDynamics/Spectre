% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.rpca.batch.correction.R
\name{run.rpca.batch.correction}
\alias{run.rpca.batch.correction}
\title{Run rPCA for batch correction}
\usage{
run.rpca.batch.correction(
  dat,
  data_source,
  output_name,
  use_cols,
  batch_col,
  reference_batch = NULL,
  k_anchor = 5,
  seed = 42,
  verbose = TRUE
)
}
\arguments{
\item{dat}{NO DEFAULT.
A Spectre object containing the data to apply batch correction to.}

\item{data_source}{NO DEFAULT. Character. The name of the data in Spectre object to
apply batch correction to.}

\item{output_name}{NO DEFAULT. Character. The name of the data in Spectre object to
store the batch corrected data to.}

\item{use_cols}{NO DEFAULT.
A vector of character column names to apply batch correction to.}

\item{batch_col}{Character. The column in the data in Spectre object that identifies
which batch each cell belongs to.}

\item{reference_batch}{DEFAULT NULL. Whether to align to batches to a given batch.
If yes, then supply this parameter with the name of the batch you want to align the other batches to.}

\item{k_anchor}{DEFAULT 5. Passed to Seurat's FindIntegrationAnchors function.
Essentially, it determines the number of neighbors (k) to use when
Seurat's FindIntegrationAnchors is picking anchors.}

\item{seed}{DEFAULT 42. Seed used when running PCA.}

\item{verbose}{DEFAULT = TRUE.
If TRUE, the function will print progress updates as it executes.}
}
\value{
Spectre object with new element.
}
\description{
Use Seurat rPCA to do batch correction.
For more details on rPCA, see https://satijalab.org/seurat/articles/integration_rpca.html.
}
\examples{
dat_raw = Spectre::demo.batches
dat_raw[, cell_id := paste0("Cell_", seq(nrow(dat_raw)))]
dat = create.spectre.object(cell_id_col = "cell_id")
dat = add.new.data(spectre_obj = dat, dat = dat_raw, "cyto_batch")

markers = c("CD45_chn", "CD48_chn", "CD117_chn", 
"CD11b_chn", "SiglecF_chn", "NK11_chn", "B220_chn", 
"CD8a_chn", "CD4_chn", "Ly6C_chn", "Ly6G_chn", "CD115_chn", 
         "CD3e_chn", "CD16.32_chn", "MHCII_chn")

dat = run.rpca.batch.correction(
 dat = dat,
 data_source = "cyto_batch",
 output_name = "cyto_batch_corrected",
 use_cols = markers,
 batch_col = "Batch",
 verbose = FALSE,
 reference_batch = NULL
)

}
