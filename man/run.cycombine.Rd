% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.cycombine.R
\name{run.cycombine}
\alias{run.cycombine}
\title{Run cyCombine}
\usage{
run.cycombine(
  dat,
  data_source,
  output_name,
  use_cols,
  batch_col,
  cell_id_col,
  xdim = 8,
  ydim = 8,
  rlen = 10,
  parametric = TRUE,
  seed = 42,
  covar = NULL,
  anchor = NULL,
  norm_method = "scale",
  ties_method = "average",
  verbose = TRUE
)
}
\arguments{
\item{dat}{NO DEFAULT.
A Spectre object containing the data to apply batch correction to.}

\item{data_source}{NO DEFAULT. Character. The name of the data in Spectre object to
apply batch correction to.}

\item{output_name}{NO DEFAULT. Character. The name of the data in Spectre object to
store the batch corrected data to.}

\item{use_cols}{NO DEFAULT.
A vector of character column names to apply batch correction to.}

\item{batch_col}{NO default.
The column that denotes the batch or dataset that each cell belongs to}

\item{xdim}{DEFAULT 8. X-dimension size of the SOM grid.}

\item{ydim}{DEFAULT 8. Y-dimension size of the SOM grid.}

\item{rlen}{DEFAULT 10. Number of times the data is presented to the SOM network.
Higher values are recommended if 10 does not appear to perform well.}

\item{parametric}{DEFAULT TRUE.
If TRUE, the parametric version of ComBat is used.
If FALSE, the non-parametric version is used.}

\item{seed}{DEFAULT 42. Seed to use when creating the SOM.}

\item{covar}{DEFAULT NULL. The covariate ComBat should use.
Can be a vector or a column name in the Spectre object (element data_source).
If NULL, no covar will be used}

\item{anchor}{DEFAULT NULL.
Experimental: A column or vector specifying which samples are replicates and
which are not.
If specified, this column will be used as a covariate in ComBat.
Be aware that it may be confounded with the condition.}

\item{norm_method}{DEFAULT scale.
Normalization method. Should be either 'rank', 'scale' or 'qnorm'.}

\item{ties_method}{DEFAULT average.
The method to handle ties, when using rank.
See ?rank for other options.}

\item{verbose}{DEFAULT TRUE
Whether to print progress messages. TRUE to print, FALSE to suppress.}
}
\value{
Spectre object with output_name element and metadata slot updated
with output generated by the algorithm
}
\description{
Run cyCombine algorithm to do batch correction.
}
\examples{
dat_raw = Spectre::demo.batches

# subsample for speedy execution
dat_raw = Spectre::do.subsample(dat_raw, targets = rep(1000, 2), 
divide.by = "Batch")

dat_raw[, cell_id := paste0("Cell_", seq(nrow(dat_raw)))]
dat = create.spectre.object(cell_id_col = "cell_id")
dat = add.new.data(spectre_obj = dat, dat = dat_raw, "cyto_batch")

markers = c("CD45_chn", "CD48_chn", "CD117_chn", 
"CD11b_chn", "SiglecF_chn", "NK11_chn", "B220_chn", 
"CD8a_chn", "CD4_chn", "Ly6C_chn", "Ly6G_chn", "CD115_chn", 
"CD3e_chn", "CD16.32_chn", "MHCII_chn")

dat <- run.cycombine(
    dat = dat,
    data_source = "cyto_batch",
    output_name = "cyto_batch_corrected",
    use_cols = markers,
    batch_col = "Batch",
    verbose = FALSE
)
}
\references{
Pedersen, C.B., Dam, S.H., Barnkob, M.B. et al.
cyCombine allows for robust integration of single-cell cytometry datasets
within and across technologies.
Nat Commun 13, 1698 (2022).
https://doi.org/10.1038/s41467-022-29383-5

Ashhurst, T.M., Marsh‐Wakefield, F., Putri, G.H. et al.
Integration, exploration, and analysis of high‐dimensional single‐cell
cytometry data using Spectre.
Cytometry Part A, 101(3), pp.237-253 (2022).
https://doi.org/10.1002/cyto.a.24350
}
